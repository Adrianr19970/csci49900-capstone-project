{"ast":null,"code":"var _jsxFileName = \"G:\\\\Hunter\\\\CSCI 49900\\\\csci49900-capstone-project\\\\src\\\\pages\\\\linechartv2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CanvasJSChart } from 'canvasjs-react-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Line = ({\n  symbol\n}) => {\n  _s();\n\n  const [price, setPrice] = useState([]);\n  /* const [date, setDate] = useState([]); */\n\n  const [stockInfo, setStockInfo] = useState([]);\n  const [articles, setArticles] = useState([]);\n  const [stock, setStock] = useState(\"TSLA\");\n  useEffect(() => {\n    const getchartInfo = async () => {\n      const priceAndDate = await axios.get('https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + symbol, {\n        mode: \"no-cors\"\n      });\n      setPrice(priceAndDate.data.data);\n      /* const prices = response.close\r\n      console.log(prices);*/\n\n      console.log(priceAndDate.data);\n      /* console.log(date); */\n    };\n  }, [null]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n      id: \"line\",\n      options: {\n        animationEnabled: true,\n        axisY: {\n          title: \"USD\",\n          prefix: \"$\"\n        },\n        data: [{\n          type: \"line\",\n          yValueFormatString: \"$#,###.##\",\n          dataPoints: price.map(price => ({\n            x: new Date(price.date),\n            y: Number(price.close)\n          }))\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Line, \"XJi5DxpTaUvnQAbrmD087zAJItQ=\");\n\n_c = Line;\nexport default Line;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["G:/Hunter/CSCI 49900/csci49900-capstone-project/src/pages/linechartv2.js"],"names":["React","useEffect","useState","CanvasJSChart","Line","symbol","price","setPrice","stockInfo","setStockInfo","articles","setArticles","stock","setStock","getchartInfo","priceAndDate","axios","get","mode","data","console","log","animationEnabled","axisY","title","prefix","type","yValueFormatString","dataPoints","map","x","Date","date","y","Number","close"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,uBAA9B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA;;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAmBX,QAAQ,CAAC,MAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMa,YAAY,GAAG,YAAY;AAC/B,YAAMC,YAAY,GAAG,MAAMC,KAAK,CAACC,GAAN,CACzB,4FAA4FZ,MADnE,EAC4E;AAAEa,QAAAA,IAAI,EAAE;AAAR,OAD5E,CAA3B;AAGAX,MAAAA,QAAQ,CAACQ,YAAY,CAACI,IAAb,CAAkBA,IAAnB,CAAR;AAEA;AACJ;;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACI,IAAzB;AAEA;AACC,KAXH;AAYC,GAbQ,EAcT,CAAC,IAAD,CAdS,CAAT;AAgBA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,EAAE,EAAC,MAAlB;AACE,MAAA,OAAO,EAAK;AACVG,QAAAA,gBAAgB,EAAE,IADR;AAEVC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,KADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SAFG;AAMVN,QAAAA,IAAI,EAAE,CAAC;AACLO,UAAAA,IAAI,EAAE,MADD;AAELC,UAAAA,kBAAkB,EAAE,WAFf;AAGLC,UAAAA,UAAU,EAAGtB,KAAK,CAACuB,GAAN,CAAUvB,KAAK,KAAK;AAC/BwB,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAASzB,KAAK,CAAC0B,IAAf,CAD4B;AAE/BC,YAAAA,CAAC,EAAEC,MAAM,CAAC5B,KAAK,CAAC6B,KAAP;AAFsB,WAAL,CAAf;AAHR,SAAD;AANI;AADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBD,CA9CD;;GAAM/B,I;;KAAAA,I;AAgDN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\n\r\nconst Line = ({ symbol }) => {\r\n\r\n  const [price, setPrice] = useState([]);\r\n  /* const [date, setDate] = useState([]); */\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState(\"TSLA\");\r\n\r\n  useEffect(() => {\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + symbol , { mode: \"no-cors\" }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n\r\n    /* const prices = response.close\r\n    console.log(prices);*/\r\n    console.log(priceAndDate.data);\r\n    \r\n    /* console.log(date); */\r\n    };\r\n  },\r\n  [null]);\r\n\r\n  return ( \r\n      <div>\r\n          <CanvasJSChart id='line'\r\n            options = { {\r\n              animationEnabled: true,\r\n              axisY: {\r\n                title: \"USD\",\r\n                prefix: \"$\"\r\n              },\r\n              data: [{\r\n                type: \"line\",\r\n                yValueFormatString: \"$#,###.##\",\r\n                dataPoints : price.map(price => ({\r\n                  x: new Date(price.date),\r\n                  y: Number(price.close)\r\n                }))\r\n              }],\r\n              \r\n            } }\r\n          />\r\n      </div> \r\n    );\r\n};\r\n\r\nexport default Line;"]},"metadata":{},"sourceType":"module"}