{"ast":null,"code":"var _jsxFileName = \"G:\\\\Hunter\\\\CSCI 49900\\\\csci49900-capstone-project\\\\src\\\\components\\\\CandleChart\\\\chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport './chart.css';\nimport axios, { Axios } from 'axios';\nimport { CanvasJSChart } from 'canvasjs-react-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CandleChart = () => {\n  _s();\n\n  const [price, setPrice] = useState([]);\n  const [stock, setStock] = useState(\"\");\n\n  function stockChange(event) {\n    setStock(event.target.value);\n  }\n\n  useEffect(() => {\n    const getchartInfo = async () => {\n      const priceAndDate = await axios.get('https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + \"TSLA\");\n      setPrice(priceAndDate.data.data);\n      console.log(price);\n    };\n\n    getchartInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chartContainer\",\n    children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n      options: {\n        theme: \"light1\",\n        exportEnabled: true,\n        axisY: {\n          minimum: Math.min(...price.map(data => data.low)) / 1.1,\n          maximum: Math.max(...price.map(data => data.high)) * 1.1,\n          crosshair: {\n            enabled: true,\n            snapToDataPoint: true\n          },\n          prefix: \"$\"\n        },\n        axisX: {\n          crosshair: {\n            enabled: true,\n            snapToDataPoint: true\n          },\n          scaleBreaks: {\n            spacing: 0,\n            fillOpacity: 0,\n            lineThickness: 0,\n            customBreaks: price.reduce((breaks, value, index, array) => {\n              if (index === 0) return breaks;\n              const currentDataPointUnix = Number(new Date(value.date));\n              const previousDataPointUnix = Number(new Date(array[index - 1].date));\n              const oneDayInMs = 86400000;\n              const difference = previousDataPointUnix - currentDataPointUnix;\n              return difference === oneDayInMs ? breaks : [...breaks, {\n                startValue: currentDataPointUnix,\n                endValue: previousDataPointUnix - oneDayInMs\n              }];\n            }, [])\n          }\n        },\n        data: [{\n          type: 'candlestick',\n          risingColor: \"green\",\n          fallingColor: \"#E40A0A\",\n          dataPoints: price.map(price => ({\n            x: new Date(price.date),\n            y: [price.open, price.high, price.low, price.close]\n          }))\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CandleChart, \"W6K4xtKJa23O0V4mka1hGDx8Sxw=\");\n\n_c = CandleChart;\nexport default CandleChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CandleChart\");","map":{"version":3,"sources":["G:/Hunter/CSCI 49900/csci49900-capstone-project/src/components/CandleChart/chart.js"],"names":["React","Component","useEffect","useState","axios","Axios","CanvasJSChart","CandleChart","price","setPrice","stock","setStock","stockChange","event","target","value","getchartInfo","priceAndDate","get","data","console","log","theme","exportEnabled","axisY","minimum","Math","min","map","low","maximum","max","high","crosshair","enabled","snapToDataPoint","prefix","axisX","scaleBreaks","spacing","fillOpacity","lineThickness","customBreaks","reduce","breaks","index","array","currentDataPointUnix","Number","Date","date","previousDataPointUnix","oneDayInMs","difference","startValue","endValue","type","risingColor","fallingColor","dataPoints","x","y","open","close"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\r\nimport './chart.css'\r\nimport axios, { Axios } from 'axios';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts'\r\n\r\nconst CandleChart = () => {\r\n  \r\n    const [price, setPrice] = useState([]);\r\n    const [stock, setStock]= useState(\"\");\r\n\r\n    function stockChange(event){\r\n        setStock(event.target.value);\r\n    } \r\n    \r\n      useEffect(() => {\r\n        const getchartInfo = async () => {\r\n          const priceAndDate = await axios.get (\r\n            'https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + \"TSLA\"\r\n          );\r\n        setPrice(priceAndDate.data.data);\r\n        console.log(price)\r\n        };\r\n        getchartInfo()\r\n      }, []);\r\n        \r\n    return (\r\n      <div id=\"chartContainer\">\r\n        <CanvasJSChart\r\n        options = { {\r\n          theme: \"light1\",\r\n          exportEnabled: true,\r\n\r\n          axisY: {\r\n            minimum: Math.min(...price.map(data => data.low)) / 1.1,\r\n            maximum: Math.max(...price.map(data => data.high)) * 1.1,\r\n            crosshair: {\r\n              enabled: true,\r\n              snapToDataPoint: true\r\n            },\r\n            prefix: \"$\",\r\n          },\r\n          axisX: {\r\n            crosshair: {\r\n              enabled: true,\r\n              snapToDataPoint: true\r\n            },\r\n            scaleBreaks: {\r\n              spacing: 0,\r\n              fillOpacity: 0,\r\n              lineThickness: 0,\r\n              customBreaks: price.reduce((breaks, value, index, array) => {\r\n                  if (index === 0) return breaks;\r\n\r\n                  const currentDataPointUnix = Number(new Date(value.date));\r\n                  const previousDataPointUnix = Number(new Date(array[index - 1].date));\r\n\r\n                  const oneDayInMs = 86400000;\r\n\r\n                  const difference = previousDataPointUnix - currentDataPointUnix;\r\n\r\n                  return difference === oneDayInMs\r\n                      ? breaks\r\n                      : [\r\n                          ...breaks,\r\n                          {\r\n                              startValue: currentDataPointUnix,\r\n                              endValue: previousDataPointUnix - oneDayInMs\r\n                          }\r\n                      ]\r\n              }, [])\r\n            }\r\n          },\r\n          data: [{\r\n            type: 'candlestick',\r\n            risingColor: \"green\",\r\n            fallingColor: \"#E40A0A\",\r\n            dataPoints: price.map(price => ({\r\n              x: new Date(price.date),\r\n              y: [\r\n                price.open,\r\n                price.high,\r\n                price.low,\r\n                price.close\r\n              ]\r\n            }))\r\n          }],\r\n          \r\n        }\r\n      }\r\n      />\r\n\r\n      </div>\r\n      \r\n      );\r\n    };\r\nexport default CandleChart;"]},"metadata":{},"sourceType":"module"}