{"ast":null,"code":"var _jsxFileName = \"G:\\\\Hunter\\\\CSCI 49900\\\\csci49900-capstone-project\\\\src\\\\pages\\\\linechartv2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CanvasJSChart } from 'canvasjs-react-charts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Line = ({\n  symbol\n}) => {\n  _s();\n\n  const [price, setPrice] = useState([]);\n  /* const [date, setDate] = useState([]); */\n\n  const [stockInfo, setStockInfo] = useState([]);\n  const [articles, setArticles] = useState([]);\n  const [stock, setStock] = useState('');\n\n  function change(event) {\n    setStock(event.target.value);\n    getchartInfo();\n  }\n\n  useEffect(() => {\n    if (stock !== symbol) {\n      getchartInfo();\n      setStock(symbol);\n    }\n  });\n  /*\r\n  useEffect(() => {\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + symbol , { mode: \"no-cors\" }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n    };\r\n    getchartInfo();\r\n  },\r\n  [null]);\r\n  */\n\n  const getchartInfo = async () => {\n    const priceAndDate = await axios.get('https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + stock, {\n      mode: \"no-cors\"\n    });\n    setPrice(priceAndDate.data.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CanvasJSChart, {\n      id: \"line\",\n      options: {\n        animationEnabled: true,\n        axisY: {\n          title: \"USD\",\n          prefix: \"$\"\n        },\n        data: [{\n          type: \"line\",\n          yValueFormatString: \"$#,###.##\",\n          dataPoints: price.map(price => ({\n            x: new Date(price.date),\n            y: Number(price.close)\n          }))\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: change,\n      value: symbol,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Line, \"T1EKNjgaW//IF2Mu5Q5yfExu2Yo=\");\n\n_c = Line;\nexport default Line;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["G:/Hunter/CSCI 49900/csci49900-capstone-project/src/pages/linechartv2.js"],"names":["React","useEffect","useState","CanvasJSChart","axios","Line","symbol","price","setPrice","stockInfo","setStockInfo","articles","setArticles","stock","setStock","change","event","target","value","getchartInfo","priceAndDate","get","mode","data","animationEnabled","axisY","title","prefix","type","yValueFormatString","dataPoints","map","x","Date","date","y","Number","close"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA;;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC;;AAEA,WAASa,MAAT,CAAgBC,KAAhB,EAAuB;AACrBF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACAC,IAAAA,YAAY;AACb;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGY,KAAK,KAAKP,MAAb,EAAqB;AACnBa,MAAAA,YAAY;AACZL,MAAAA,QAAQ,CAACR,MAAD,CAAR;AACD;AAEF,GANQ,CAAT;AAQA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMa,YAAY,GAAG,YAAY;AAC/B,UAAMC,YAAY,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CACzB,4FAA4FR,KADnE,EAC2E;AAAES,MAAAA,IAAI,EAAE;AAAR,KAD3E,CAA3B;AAGAd,IAAAA,QAAQ,CAACY,YAAY,CAACG,IAAb,CAAkBA,IAAnB,CAAR;AACD,GALD;;AAOA,sBACI;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,EAAE,EAAC,MAAlB;AACE,MAAA,OAAO,EAAK;AACVC,QAAAA,gBAAgB,EAAE,IADR;AAEVC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,KADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SAFG;AAMVJ,QAAAA,IAAI,EAAE,CAAC;AACLK,UAAAA,IAAI,EAAE,MADD;AAELC,UAAAA,kBAAkB,EAAE,WAFf;AAGLC,UAAAA,UAAU,EAAGvB,KAAK,CAACwB,GAAN,CAAUxB,KAAK,KAAK;AAC/ByB,YAAAA,CAAC,EAAE,IAAIC,IAAJ,CAAS1B,KAAK,CAAC2B,IAAf,CAD4B;AAE/BC,YAAAA,CAAC,EAAEC,MAAM,CAAC7B,KAAK,CAAC8B,KAAP;AAFsB,WAAL,CAAf;AAHR,SAAD;AANI;AADd;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBE;AAAO,MAAA,QAAQ,EAAEtB,MAAjB;AAAyB,MAAA,KAAK,EAAET,MAAhC;AAAwC,MAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBD,CAjED;;GAAMD,I;;KAAAA,I;AAmEN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\nimport axios from 'axios'; \r\n\r\nconst Line = ({ symbol }) => {\r\n\r\n  const [price, setPrice] = useState([]);\r\n  /* const [date, setDate] = useState([]); */\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState('');\r\n\r\n  function change(event) {\r\n    setStock(event.target.value);\r\n    getchartInfo();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(stock !== symbol) {\r\n      getchartInfo()\r\n      setStock(symbol)\r\n    }\r\n    \r\n  });\r\n\r\n  /*\r\n  useEffect(() => {\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + symbol , { mode: \"no-cors\" }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n    };\r\n    getchartInfo();\r\n  },\r\n  [null]);\r\n  */\r\n\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + stock , { mode: \"no-cors\" }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n  }\r\n\r\n  return ( \r\n      <div>\r\n          <CanvasJSChart id='line'\r\n            options = { {\r\n              animationEnabled: true,\r\n              axisY: {\r\n                title: \"USD\",\r\n                prefix: \"$\"\r\n              },\r\n              data: [{\r\n                type: \"line\",\r\n                yValueFormatString: \"$#,###.##\",\r\n                dataPoints : price.map(price => ({\r\n                  x: new Date(price.date),\r\n                  y: Number(price.close)\r\n                }))\r\n              }],\r\n              \r\n            } }\r\n          />\r\n\r\n        <input onChange={change} value={symbol} type=\"text\"></input>\r\n      </div> \r\n    );\r\n};\r\n\r\nexport default Line;"]},"metadata":{},"sourceType":"module"}