[{"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\index.js":"1","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\reportWebVitals.js":"2","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\App.js":"3","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\products.js":"4","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\about.js":"5","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\productX.js":"6","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Footer\\index.js":"7","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\index.js":"8","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\newsItem.js":"9","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Navbar\\NavbarElements.js":"10","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\stockInformation.js":"11","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\linechartv2.js":"12","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\dailyArticles.js":"13","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\candlechartv2.js":"14","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\topNews.js":"15","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\previousStockInfo.js":"16"},{"size":302,"mtime":1634856134869,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1634856134884,"results":"19","hashOfConfig":"18"},{"size":2070,"mtime":1634856134646,"results":"20","hashOfConfig":"18"},{"size":27007,"mtime":1637972997517,"results":"21","hashOfConfig":"18"},{"size":26641,"mtime":1637972349238,"results":"22","hashOfConfig":"18"},{"size":5840,"mtime":1634856134881,"results":"23","hashOfConfig":"18"},{"size":1459,"mtime":1634856134728,"results":"24","hashOfConfig":"18"},{"size":27302,"mtime":1638035281082,"results":"25","hashOfConfig":"18"},{"size":460,"mtime":1634856134878,"results":"26","hashOfConfig":"18"},{"size":618,"mtime":1634856134729,"results":"27","hashOfConfig":"18"},{"size":486,"mtime":1637345375992,"results":"28","hashOfConfig":"18"},{"size":2089,"mtime":1637830915839,"results":"29","hashOfConfig":"18"},{"size":1844,"mtime":1635791209745,"results":"30","hashOfConfig":"18"},{"size":3541,"mtime":1636851341930,"results":"31","hashOfConfig":"18"},{"size":562,"mtime":1634856134883,"results":"32","hashOfConfig":"18"},{"size":486,"mtime":1637523774092,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1avdvw7",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":17,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":17,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":18,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\index.js",[],["76","77"],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\reportWebVitals.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\App.js",["78"],"import 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Footer from './components/Footer';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport Home from './pages'\r\nimport Products from './pages/products';\r\nimport About from './pages/about';\r\nimport ProductX from './pages/productX';\r\nimport {Redirect} from 'react-router-dom';\r\nimport background from './pages/Sky.jpg';\r\n\r\n/* <Navbar /> */\r\n\r\nfunction App() {\r\nconst [hide, setHide] = useState(\"none\");\r\n\r\nconst hideLandPage = () => {\r\n  setHide(\"none\");\r\n};\r\n\r\n  return (\r\n    \r\n    <Router>\r\n      <Redirect from='/' to='/index' exact component={Home}/>\r\n\r\n      <div className='landing-Background'\r\n        style={{ \r\n          height: '100%',\r\n          backgroundImage: `url(${background})`,\r\n          backgroundCover: `cover`,\r\n          backgroundSize: '100% 100%',\r\n          backgroundAttachment: 'fixed',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundColor: '#000',\r\n          paddingTop: '5%',\r\n          paddingBottom: '10%',\r\n          marginBottom: '-5%',\r\n          display: hide\r\n        }}>\r\n          <h1>Welcome to TradeBreath</h1>   \r\n          \r\n          <Link id=\"buttons\" to=\"/index\">\r\n            <button onClick={hideLandPage}><h3>Enter</h3></button>\r\n          </Link>\r\n        </div>\r\n\r\n        <Switch>\r\n          \r\n          <Route path='/index' exact component={Home} />\r\n          <Redirect from='/index' to='/index'/>\r\n          <Route path='/products' exact component={Products} />\r\n          <Redirect from='/products' to='/products'/>\r\n          <Route path='/productX' exact component={ProductX} />\r\n          <Redirect from='/productX' to='/products' exact component={Products}/>\r\n          <Route path='/about' exact component={About} />\r\n          <Redirect from='/about' to='/about'/>\r\n        </Switch>\r\n        <Footer />\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\products.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107"],"import React, { useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport background from './Sky.jpg';\r\nimport { Nav, NavLink, NavMenu} from '../components/Navbar/NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport Logo from '../components/Navbar/TradeBreath.gif';\r\nimport NewsItem from './newsItem';\r\nimport Line from './linechartv2';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\nimport StockInformation from './stockInformation';\r\nimport PreviousStockInfo from './previousStockInfo';\r\nimport axios, { Axios } from 'axios';\r\nimport './products.css';\r\n\r\n  \r\nconst Home = () => {\r\n  // States that will be changed as the website is used. \r\n  const [stockName, setStockName] = useState(\"\");\r\n  const [currentStock, setCurrent] = useState(\"\");\r\n  const [price, setPrice] = useState([]);\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [prevStockInfo, setPrevInfo] = useState([]);\r\n  const [stock, setStock]= useState(\"\");\r\n\r\n  const [hidden, setHidden] = useState(\"block\");\r\n  const [show, setShowing] = useState(\"none\");\r\n  const [hideError, setHideError] = useState(\"none\");\r\n\r\n  const [show_List, set_show_List] = useState(\"block\");\r\n\r\n  const [toggleLine, setLine] = useState(\"block\");\r\n  const [toggleCandle, setCandle] = useState(\"none\");\r\n\r\n  /*Time Frames*/\r\n\r\n    // Sets up US business days and format of the dates.\r\n    var moment = require('moment-business-days');\r\n   \r\n    moment.updateLocale('us', {\r\n      holidayFormat: 'YYYY-MM-DD'\r\n    });\r\n\r\n    /* ----------Dates Calculation---------- */\r\n    const today = new Date(), // New todays date.\r\n    time_now = today.getHours(); // Gets current hour.\r\n\r\n    var todayDate = new Date() // Sets a new variable to get todays date.\r\n    todayDate.setDate(todayDate.getDate()) // Gets todays date.\r\n    var YYYY_today = todayDate.getFullYear(); // Gets curretn year.\r\n    var mm_today = String(todayDate.getMonth() + 1). padStart(2, '0') // Calculates curretn month.\r\n    var dd_today = String(todayDate.getDate()).padStart(2, '0') // Calculates current month.\r\n    var formated_today = YYYY_today + '-' + mm_today + '-' + dd_today // Formats date into the format the backend can read to retrieve date from the API.\r\n    // console.log(\"Today's date: \" + formated_today)\r\n\r\n    var yesterday = new Date()\r\n    var time_regulator = 1;\r\n    yesterday.setDate(yesterday.getDate() - time_regulator);\r\n    var YYYY_yesterday = yesterday.getFullYear();\r\n    var mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n    var dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n    var formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n    // console.log(\"Yesterday's date: \" + formated_yesterday)\r\n\r\n    var x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay()\r\n    // Checks if the variable formated_yesterday is a business day or not.\r\n    var wkend = 0; // Keeps track of non buswiness days.\r\n    var mon;\r\n\r\n    // Checks for the amount if business days over the past 7 days.\r\n    // This updates the previous busniess day and it's metrics that are requested from the backend.\r\n    for (let i = 0; i < 7; i++) {\r\n      if (x == false) // If wkend if more than 3, then it calculates dates as normal an extended weekend.\r\n      {\r\n        wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - time_regulator);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n      }\r\n      else if (x == true && wkend > 2)\r\n      {\r\n        // Since the stock market has after-hours, metrics will update at 6pm.\r\n        if(time_now >= 18) {\r\n          yesterday.setDate(yesterday.getDate() + 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n        }\r\n        // If it's prior to 6pm, then the metrics will stay the same as the previous day until 6pm when the market closes.\r\n        if (time_now < 18) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n        }\r\n      }\r\n      else if (x == true && wkend == 2) { // If wkend is 2, then it calculates dates as normal weekend.\r\n        if(time_now >= 18) {\r\n          yesterday.setDate(yesterday.getDate() + 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n        }\r\n        if (time_now < 18) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n        }\r\n      }\r\n      else if (x == true && wkend == 0) {\r\n        if(time_now >= 18) {\r\n          //formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday          \r\n          if(formated_yesterday == '2021-11-25') {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          }\r\n          i = 7;\r\n        }\r\n        if (time_now < 18) {\r\n            var monCheck = yesterday;\r\n            monCheck.setDate(monCheck.getDate());\r\n            var YYYY_monCheck = monCheck.getFullYear();\r\n            var mm_monCheck = String(monCheck.getMonth() + 1). padStart(2, '0')\r\n            var dd_monCheck = String(monCheck.getDate()).padStart(2, '0')\r\n            var formated_monCheck = YYYY_monCheck + '-' + mm_monCheck + '-' + dd_monCheck\r\n            mon = moment(formated_monCheck, 'YYYY-MM-DD').isBusinessDay();\r\n          if(mon = false) {\r\n            yesterday.setDate(yesterday.getDate() - 4);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            console.log(formated_yesterday);\r\n            i = 7;\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            console.log(formated_yesterday);\r\n            i = 7;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // console.log(\"Previous Business Day date: \" + formated_yesterday)\r\n    \r\n    var monthAgo = new Date();\r\n    monthAgo.setMonth(monthAgo.getMonth() - 1)\r\n    var YYYY_monthAgo = monthAgo.getFullYear();\r\n    var mm_monthAgo = String(monthAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_monthAgo = String(monthAgo.getDate()).padStart(2, '0')\r\n    var formated_monthAgo = YYYY_monthAgo + '-' + mm_monthAgo + '-' + dd_monthAgo\r\n    // console.log(\"Month ago's date: \" + formated_monthAgo)\r\n\r\n    var threeMonthsAgo = new Date();\r\n    threeMonthsAgo.setMonth(threeMonthsAgo.getMonth() - 3)\r\n    var YYYY_threeMonthsAgo = threeMonthsAgo.getFullYear();\r\n    var mm_threeMonthsAgo = String(threeMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_threeMonthsAgo = String(threeMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_threeMonthsAgo = YYYY_threeMonthsAgo + '-' + mm_threeMonthsAgo + '-' + dd_threeMonthsAgo\r\n    // console.log(\"Three month ago's date: \" + formated_threeMonthsAgo)\r\n\r\n    var sixMonthsAgo = new Date();\r\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6)\r\n    var YYYY_sixMonthsAgo = sixMonthsAgo.getFullYear();\r\n    var mm_sixMonthsAgo = String(sixMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_sixMonthsAgo = String(sixMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_sixMonthsAgo = YYYY_sixMonthsAgo + '-' + mm_sixMonthsAgo + '-' + dd_sixMonthsAgo\r\n    // console.log(\"Six month ago's date: \" + formated_sixMonthsAgo)\r\n\r\n    var yearAgo = new Date();\r\n    yearAgo.setMonth(yearAgo.getMonth() -12)\r\n    /*console.log(\"Year ago's date\" + yearAgo)*/\r\n    var YYYY_yearAgo = yearAgo.getFullYear();\r\n    var mm_yearAgo = String(yearAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_yearAgo = String(yearAgo.getDate()).padStart(2, '0')\r\n    var formated_yearAgo = YYYY_yearAgo + '-' + mm_yearAgo + '-' + dd_yearAgo\r\n    // console.log(\"Year ago's date: \" + formated_yearAgo)\r\n\r\n  const initialTime = formated_threeMonthsAgo; // Sets 3 months ago as inital time frame to view stock data.\r\n\r\n  const [time, setTime] = useState(initialTime); \r\n\r\n  function stockChange(event){ // Sets all inputs to uppercase\r\n    setStock(event.target.value.toUpperCase());\r\n  } \r\n\r\n  const clickedStock = (value) => { // If the user presses a listed stock button, then it will hide the list and get stock data.\r\n    setStock(value);\r\n    setStockName(value);\r\n    listCall();\r\n  }\r\n\r\n  const listCall = () => { // If the view list button is pressed, then it will hide stock data and bring back the list.\r\n    setHideError(\"none\");\r\n    getArticles();\r\n  }\r\n \r\n  let viewCandle = () => { // If the user presses the ViewCandle button, then it will hide the line chart.\r\n    setLine(\"none\");\r\n    setCandle(\"block\");\r\n  }\r\n\r\n  let viewLine = () => { // If the user presses the Line Chart button, then the candlestick chart will be hidden.\r\n    setLine(\"block\");\r\n    setCandle(\"none\");\r\n  }\r\n\r\n  let viewList = () => { // If the view list button is pressed, then it will hide stock data and bring back the list.\r\n    setHidden(\"block\");\r\n    setShowing(\"none\");\r\n    set_show_List(\"block\");\r\n    setStock(\"\");\r\n  }\r\n\r\n  // Checks if the stock code inputted by user exsits, if not an error message will appear. If it does it will retrieve stock data.\r\n  const checker = async () => {\r\n    const response = await axios.get('https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy')\r\n    console.log(stock);\r\n    if (response.data.data.length === 0) {\r\n      console.log(\"No data recieved\")\r\n      console.log(\"Invalid Stock Code: \" + stock);\r\n      setHideError(\"block\");\r\n      setStock(currentStock);\r\n    }\r\n    else {\r\n      console.log(\"Data recieved\")\r\n      console.log(\"Valid Stock Code: \" + stock);\r\n      setCurrent(stock);\r\n      setHideError(\"none\");\r\n      getArticles();\r\n    }\r\n  }\r\n\r\n  // Retrieves stock metrics\r\n  const getStockInfo = async () => {\r\n    const info = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=2020-10-30&end_date=&latest=/latest', { mode: \"no-cors\" }\r\n    );\r\n    setStockInfo(info.data.data);\r\n    getPrevStockInfo();\r\n    /*console.log(info);*/\r\n  };\r\n\r\n  // Retireves stock metrics on the previous business day.\r\n  const getPrevStockInfo = async () => {\r\n    const prevInfo = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + formated_yesterday + '&end_date=&latest=/' + formated_yesterday, { mode: \"no-cors\" }\r\n    );\r\n    setPrevInfo(prevInfo.data.data);\r\n  };\r\n\r\n  // Gets stock info for the charts.\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + time + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n    console.log(\"Getting Chart Data\");\r\n    console.log(priceAndDate.data);\r\n  }\r\n\r\n  // Gets articles pertaining to the stock.\r\n  const getArticles = async () => {\r\n    const res = await axios.get(\r\n      'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n    );\r\n    setArticles(res.data.data);\r\n    console.log(\"Getting News Articles\");\r\n    console.log(res); \r\n    setHidden(\"none\");\r\n    setShowing(\"block\"); \r\n    set_show_List(\"none\");\r\n    getStockInfo();\r\n    getchartInfo();\r\n    setStockName(stock);\r\n  };\r\n  \r\n  // When the user clicks enter on the search bar, the check function is called to verify the stock code.\r\n  const enterKey = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault()\r\n      console.log(\"Enter Pressed from Products\")\r\n      /*getArticles();*/\r\n      checker();\r\n    }\r\n  };\r\n\r\n  // Updates chart data.\r\n  const updateChart = () => {\r\n    getchartInfo();\r\n  }\r\n\r\n  // When user clicks the month button, this calculates 1 months worth of chart data.\r\n  const month = () => {\r\n    console.log(\"Month called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Months ago's date: \" + formated_monthAgo)\r\n    setTime(formated_monthAgo); \r\n    /*Format YYYY-MM-DD*/\r\n    updateChart();\r\n  }\r\n\r\n  // When user clicks the 3 month button, this calculates 3 months worth of chart data.\r\n  const threemonths = () => {\r\n    console.log(\"3 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Three months ago's date: \" + formated_threeMonthsAgo)\r\n    setTime(formated_threeMonthsAgo); \r\n    /*Format YYYY-MM-DD*/\r\n    updateChart();\r\n  }\r\n\r\n  // When user clicks the 6 month button, this calculates 6 months worth of chart data.\r\n  const sixmonths = () => {\r\n    console.log(\"6 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Six months ago's date: \" + formated_sixMonthsAgo)\r\n    setTime(formated_sixMonthsAgo); \r\n    /*Format YYYY-MM-DD*/\r\n    updateChart();\r\n  }\r\n\r\n  // When user clicks the 1 year button, this calculates 1 year worth of chart data.\r\n  const oneYear = (e) => {\r\n    console.log(\"1 Year called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Year ago's date: \" + formated_yearAgo)\r\n    setTime(formated_yearAgo); \r\n    /*Format YYYY-MM-DD*/\r\n    updateChart();\r\n  }\r\n\r\n  // Initalizes the buttons for the news carusel.\r\n  let whirligig\r\n  const next = () => whirligig.next()\r\n  const prev = () => whirligig.prev()\r\n\r\n  return (\r\n    <div id='products'>\r\n      \r\n      <div className=\"navBar-div\">\r\n    <Nav id =\"navBar\"\r\n        style={{ \r\n        height: '90px',\r\n        paddingTop: '0.5%',\r\n        paddingBottom: '0.5%',\r\n        backgroundImage: `url(${background})`,\r\n        backgroundCover: `cover`,\r\n        backgroundSize: '100% 100%',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor: '#000'\r\n        }}\r\n      >\r\n        <img id=\"logo\" src={Logo} />\r\n \r\n        <NavMenu id=\"menu\">\r\n\r\n        <NavLink id=\"link\" to='/index' activeStyle>\r\n          Home\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/products' activeStyle>\r\n          Products\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/about' activeStyle>\r\n          About Us\r\n        </NavLink>\r\n\r\n        <Form inline id=\"searchBar\">\r\n          <FormControl type=\"text\" autoComplete=\"off\"\r\n            id=\"searchBar\" placeholder=\"Use Stock Codes (e.g. AAPL)\"\r\n            onChange={stockChange} \r\n            onKeyPress={enterKey}\r\n        />\r\n\r\n          <Button id=\"searchButton\" \r\n            /*onClick={getArticles}>*/\r\n            onClick={checker}>\r\n              Search\r\n            </Button>\r\n        </Form>\r\n\r\n        </NavMenu>\r\n      </Nav>\r\n\r\n    </div>\r\n\r\n    <div style = {{\r\n          textAlign: \"center\",\r\n          background: \"#fff\",\r\n          paddingTop: \"0%\",\r\n          overflow: 'hidden',\r\n          border: '1px solid #fff',\r\n          borderLeft: 'none',\r\n          borderRight: 'none',\r\n          display: hideError\r\n        }}>\r\n          <h3 id='error-message'>Invalid Stock Code! Enter A Valid Stock Code!</h3>\r\n    </div>\r\n\r\n    <div \r\n      style ={{\r\n        justifyContent: 'center',\r\n        marginLeft: '5%',\r\n        marginRight: '5%',\r\n        marginBottom: '2%',\r\n        overflow: 'auto',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        display: show\r\n    }}> {/* Contains the stock charts, metrics, and stock news. */}\r\n        <button id=\"toggle\" onClick={viewList}>Back to List</button> {/* Button to view stock list. */}\r\n        <h1 style = {{\r\n          marginLeft: '10%'\r\n        }}> \r\n          {stockName} \r\n        </h1>\r\n        <div id='time-Frames'> {/* Time frame buttons to view stock data */}\r\n          <button onClick={month}>\r\n            1 Month\r\n          </button> \r\n          <button onClick={threemonths}>\r\n            3 Months\r\n          </button> \r\n          <button onClick={sixmonths}>\r\n            6 Months\r\n          </button> \r\n          <button onClick={oneYear}>\r\n            1 Year\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{\r\n            display: toggleCandle,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n        {/* Candlestick Chart */}\r\n        <CanvasJSChart\r\n          options = { {\r\n            theme: \"light1\",\r\n            exportEnabled: true,\r\n            animationEnabled: true,\r\n            height: 450,\r\n            axisY: {\r\n              minimum: Math.min(...price.map(data => data.low)) / 1.1,\r\n              maximum: Math.max(...price.map(data => data.high)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              prefix: \"$\",\r\n            },\r\n            axisX: {\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              scaleBreaks: {\r\n                spacing: 0,\r\n                fillOpacity: 0,\r\n                lineThickness: 0,\r\n                customBreaks: price.reduce((breaks, value, index, array) => {\r\n                    if (index === 0) return breaks;\r\n\r\n                    const currentDataPointUnix = Number(new Date(value.date));\r\n                    const previousDataPointUnix = Number(new Date(array[index - 1].date));\r\n\r\n                    const oneDayInMs = 86400000;\r\n\r\n                    const difference = previousDataPointUnix - currentDataPointUnix;\r\n\r\n                    return difference === oneDayInMs\r\n                        ? breaks\r\n                        : [\r\n                            ...breaks,\r\n                            {\r\n                                startValue: currentDataPointUnix,\r\n                                endValue: previousDataPointUnix - oneDayInMs\r\n                            }\r\n                        ]\r\n                  }, [])\r\n                }\r\n              },\r\n                data: [{\r\n                  type: 'candlestick',\r\n                  risingColor: \"green\",\r\n                  fallingColor: \"#E40A0A\",\r\n                  dataPoints: price.map(price => ({\r\n                      x: new Date(price.date),\r\n                      y: [\r\n                        price.open,\r\n                        price.high,\r\n                        price.low,\r\n                        price.close\r\n                    ]\r\n                  }))\r\n                }],\r\n          \r\n              }\r\n            }\r\n          />\r\n          </div>\r\n\r\n          <div style={{\r\n            display: toggleLine,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n            {/* Bar Chart is called from different file as both charts can't be initialized on the same page. */}\r\n          {stockInfo.map(({ symbol }) => (\r\n                <Line\r\n                  symbol={symbol}\r\n                  time={time}\r\n                />\r\n          ))}\r\n          </div>\r\n\r\n          {/* Buttons to change charts */}\r\n          <div id='buttons'>\r\n          <button onClick={viewCandle}\r\n            id=\"candlesticks-button\">Candlestick Chart\r\n          </button> \r\n          <button onClick={viewLine}\r\n            id=\"line-button\">Line Chart\r\n          </button> \r\n        </div>\r\n\r\n        <br></br>\r\n\r\n        {/* Current Stock metrics and previous business day metrics. */}\r\n        <div id=\"data\">\r\n          <div id=\"metrics\">\r\n          {\r\n          stockInfo.map(({ close, open, high, low, volume, dividend}) => (\r\n          <StockInformation\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n            dividend={dividend}\r\n          />\r\n          ))}\r\n          </div>\r\n          <div id=\"metrics\">\r\n          {\r\n          prevStockInfo.map(({close, open, high, low, volume}) => (\r\n          <PreviousStockInfo\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n          />\r\n          ))}\r\n          {\r\n            <h3>Prior Business Day: {formated_yesterday}</h3>\r\n          }\r\n          </div>\r\n        </div>\r\n\r\n        {/* Displays current stock name. */}\r\n        <div style = {{\r\n          marginLeft: '10%'\r\n        }}>\r\n          <h1>Recent News Articles: {stockName} </h1>\r\n        </div>\r\n\r\n        {/* Displays stock related news on a carousel. */}\r\n          <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <NewsItem\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n            {/* Slider buttons to scroll through the 25 stock news articles.  */}\r\n            <div className='buttons'>\r\n                <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                <button id='sliderbutton-next' onClick={next}>Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    <div id='list' style = {{\r\n      display: show_List,\r\n    }}>\r\n      <div id='products-title'>\r\n        <h1> Products </h1> <p id = 'button_message'>*Double click on the button to show the product properly.*</p>\r\n      </div>\r\n\r\n      <Form inline id=\"productSearchBar\">\r\n        <FormControl type=\"text\" onChange={stockChange} id=\"productSearchBar\" \r\n        autoComplete=\"off\" placeholder=\"Use Stock Codes (e.g. AAPL)\" onKeyPress={enterKey}/>\r\n        <Button id=\"productSearchButton\" onClick={checker}>\r\n          Search\r\n        </Button>   \r\n      </Form>\r\n        \r\n        <ul className='product-List'> \r\n          <li><button onClick={() => clickedStock(\"AAPL\")}><p>Apple</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"AMZN\")}><p>Amazon</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"AMC\")}><p>AMC Entertainement</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"AMD\")}><p>AMD</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"BA\")}><p>Boeing</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"KO\")}><p>Coca-Cola</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"COIN\")}><p>Coinbase</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"DIS\")}><p>Disney</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"GME\")}><p>Gamestop</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"MSFT\")}><p>Microsoft</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"MRNA\")}><p>Moderna</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NFLX\")}><p>Netflix</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NKE\")}><p>Nike</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NIO\")}><p>NIO</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NVDA\")}><p>NVDIA</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"RYCEY\")}><p>Rolls-Royce</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"LUV\")}><p>Southwest Airlines</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"SONY\")}><p>Sony</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"SBUX\")}><p>Starbucks</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"TSLA\")}><p>Tesla</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"TWTR\")}><p>Twitter</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"UBER\")}><p>Uber</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"WMT\")}><p>Walmart</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"ZM\")}><p>Zoom</p></button></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default Home;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\about.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"import React, { useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport background from './Sky.jpg';\r\nimport { Nav, NavLink, NavMenu} from '../components/Navbar/NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport Logo from '../components/Navbar/TradeBreath.gif';\r\nimport NewsItem from './newsItem';\r\nimport StockInformation from './stockInformation';\r\nimport PreviousStockInfo from './previousStockInfo';\r\nimport Line from './linechartv2';\r\nimport axios, { Axios } from 'axios';\r\nimport './about.css';\r\nimport adrian from './Adrian.png'\r\nimport alex from './Alex.png'\r\nimport diego from './Diego.png'\r\nimport edwin from './Edwin.png'\r\n\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\n\r\nimport candlePNG from './candle.png'\r\nimport linePNG from './line.png'\r\nimport newsPNG from './news.png'\r\nimport hunterPNG from './hunter.png'\r\n\r\nconst About = () => {\r\n  // States that will be changed as the website is used. \r\n  const [stockName, setStockName] = useState(\"\");\r\n  const [currentStock, setCurrent] = useState(\"\");\r\n  const [price, setPrice] = useState([]);\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [prevStockInfo, setPrevInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState(\"\");\r\n\r\n  const [toggleLine, setLine] = useState(\"block\");\r\n  const [toggleCandle, setCandle] = useState(\"none\");\r\n\r\n  const [hidden, setHidden] = useState(\"block\");\r\n  const [show, setShowing] = useState(\"none\");\r\n  const [hideError, setHideError] = useState(\"none\");\r\n\r\n  /*Time Frames*/\r\n    var moment = require('moment-business-days');\r\n   \r\n    moment.updateLocale('us', {\r\n      holidayFormat: 'YYYY-MM-DD'\r\n    });\r\n\r\n    /* ----------Dates Calculation---------- */\r\n    const today = new Date(), // New todays date.\r\n    time_now = today.getHours(); // Gets current hour.\r\n\r\n    var todayDate = new Date() // Sets a new variable to get todays date.\r\n    todayDate.setDate(todayDate.getDate()) // Gets todays date.\r\n    var YYYY_today = todayDate.getFullYear(); // Gets curretn year.\r\n    var mm_today = String(todayDate.getMonth() + 1). padStart(2, '0') // Calculates curretn month.\r\n    var dd_today = String(todayDate.getDate()).padStart(2, '0') // Calculates current month.\r\n    var formated_today = YYYY_today + '-' + mm_today + '-' + dd_today // Formats date into the format the backend can read to retrieve date from the API.\r\n    // console.log(\"Today's date: \" + formated_today)\r\n\r\n    var yesterday = new Date()\r\n    var time_regulator = 1;\r\n    yesterday.setDate(yesterday.getDate() - time_regulator);\r\n    var YYYY_yesterday = yesterday.getFullYear();\r\n    var mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n    var dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n    var formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n    // console.log(\"Yesterday's date: \" + formated_yesterday)\r\n\r\n    var x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay()\r\n    // Checks if the variable formated_yesterday is a business day or not.\r\n    var wkend = 0;\r\n    var mon;\r\n\r\n    // Checks for the amount if business days over the past 7 days.\r\n    // This updates the previous busniess day and it's metrics that are requested from the backend.\r\n    for (let i = 0; i < 7; i++) {\r\n      //console.log(formated_yesterday);\r\n      if (x == false)\r\n      {\r\n        wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - time_regulator);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n      }\r\n      else if (x == true && wkend > 2)\r\n      {\r\n        if(time_now >= 18) {\r\n          yesterday.setDate(yesterday.getDate() + 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n        }\r\n        if (time_now < 18) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n        }\r\n      }\r\n      else if (x == true && wkend == 2) {\r\n        if(time_now >= 18) {\r\n          yesterday.setDate(yesterday.getDate() + 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n        }\r\n        if (time_now < 18) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n        }\r\n      }\r\n      else if (x == true && wkend == 0) {\r\n        if(time_now >= 18) {\r\n          //formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday          \r\n          if(formated_yesterday == '2021-11-25') {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          }\r\n          i = 7;\r\n        }\r\n        if (time_now < 18) {\r\n            var monCheck = yesterday;\r\n            monCheck.setDate(monCheck.getDate());\r\n            var YYYY_monCheck = monCheck.getFullYear();\r\n            var mm_monCheck = String(monCheck.getMonth() + 1). padStart(2, '0')\r\n            var dd_monCheck = String(monCheck.getDate()).padStart(2, '0')\r\n            var formated_monCheck = YYYY_monCheck + '-' + mm_monCheck + '-' + dd_monCheck\r\n            mon = moment(formated_monCheck, 'YYYY-MM-DD').isBusinessDay();\r\n          if(mon = false) {\r\n            yesterday.setDate(yesterday.getDate() - 4);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            console.log(formated_yesterday);\r\n            i = 7;\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            console.log(formated_yesterday);\r\n            i = 7;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // console.log(\"Previous Business Day date: \" + formated_yesterday)\r\n\r\n    \r\n    var monthAgo = new Date();\r\n    monthAgo.setMonth(monthAgo.getMonth() - 1)\r\n    var YYYY_monthAgo = monthAgo.getFullYear();\r\n    var mm_monthAgo = String(monthAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_monthAgo = String(monthAgo.getDate()).padStart(2, '0')\r\n    var formated_monthAgo = YYYY_monthAgo + '-' + mm_monthAgo + '-' + dd_monthAgo\r\n    // console.log(\"Month ago's date: \" + formated_monthAgo)\r\n\r\n    var threeMonthsAgo = new Date();\r\n    threeMonthsAgo.setMonth(threeMonthsAgo.getMonth() - 3)\r\n    var YYYY_threeMonthsAgo = threeMonthsAgo.getFullYear();\r\n    var mm_threeMonthsAgo = String(threeMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_threeMonthsAgo = String(threeMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_threeMonthsAgo = YYYY_threeMonthsAgo + '-' + mm_threeMonthsAgo + '-' + dd_threeMonthsAgo\r\n    // console.log(\"Three month ago's date: \" + formated_threeMonthsAgo)\r\n\r\n    var sixMonthsAgo = new Date();\r\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6)\r\n    var YYYY_sixMonthsAgo = sixMonthsAgo.getFullYear();\r\n    var mm_sixMonthsAgo = String(sixMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_sixMonthsAgo = String(sixMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_sixMonthsAgo = YYYY_sixMonthsAgo + '-' + mm_sixMonthsAgo + '-' + dd_sixMonthsAgo\r\n    // console.log(\"Six month ago's date: \" + formated_sixMonthsAgo)\r\n\r\n    var yearAgo = new Date();\r\n    yearAgo.setMonth(yearAgo.getMonth() -12)\r\n    /*console.log(\"Year ago's date\" + yearAgo)*/\r\n    var YYYY_yearAgo = yearAgo.getFullYear();\r\n    var mm_yearAgo = String(yearAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_yearAgo = String(yearAgo.getDate()).padStart(2, '0')\r\n    var formated_yearAgo = YYYY_yearAgo + '-' + mm_yearAgo + '-' + dd_yearAgo\r\n    // console.log(\"Year ago's date: \" + formated_yearAgo)\r\n\r\n  const initialTime = formated_threeMonthsAgo; // Sets 3 months ago as inital time frame to view stock data.\r\n\r\n  const [time, setTime] = useState(initialTime); \r\n\r\n  function stockChange(event){ // Sets all inputs to uppercase\r\n    setStock(event.target.value.toUpperCase());\r\n  } \r\n\r\n  let viewCandle = () => { // If the user presses the ViewCandle button, then it will hide the line chart.\r\n    setLine(\"none\");\r\n    setCandle(\"block\");\r\n  }\r\n\r\n  let viewLine = () => { // If the user presses the Line Chart button, then the candlestick chart will be hidden.\r\n    setLine(\"block\");\r\n    setCandle(\"none\");\r\n  }\r\n\r\n  let viewAbout = () => { // If the user inputs a stock name, the About Us section will be hidden to focus on the stock.\r\n    setHidden(\"block\");\r\n    setShowing(\"none\");\r\n  }\r\n\r\n   // Checks if the stock code inputted by user exsits, if not an error message will appear. If it does it will retrieve stock data.\r\n  const checker = async () => {\r\n    const response = await axios.get('https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy')\r\n    console.log(stock);\r\n    if (response.data.data.length === 0) {\r\n      console.log(\"No data recieved\")\r\n      console.log(\"Invalid Stock Code: \" + stock);\r\n      setHideError(\"block\");\r\n      setStock(currentStock);\r\n    }\r\n    else {\r\n      console.log(\"Data recieved\")\r\n      console.log(\"Valid Stock Code: \" + stock);\r\n      setCurrent(stock);\r\n      setHideError(\"none\");\r\n      getArticles();\r\n    }\r\n  }\r\n\r\n  // Retrieves stock metrics\r\n  const getStockInfo = async () => {\r\n    const info = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=2020-10-30&end_date=&latest=/latest', { mode: \"no-cors\" }\r\n    );\r\n    setStockInfo(info.data.data);\r\n    getPrevStockInfo();\r\n  };\r\n\r\n  // Retireves stock metrics on the previous business day.\r\n  const getPrevStockInfo = async () => {\r\n    const prevInfo = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + formated_yesterday + '&end_date=&latest=/' + formated_yesterday, { mode: \"no-cors\" }\r\n    );\r\n    setPrevInfo(prevInfo.data.data);\r\n  };\r\n\r\n  // Gets stock info for the charts.\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + time + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n    console.log(\"Getting Chart Data\");\r\n    console.log(priceAndDate.data);\r\n  }\r\n\r\n  // Gets articles pertaining to the stock.\r\n  const getArticles = async () => {\r\n    const res = await axios.get(\r\n      'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n    );\r\n    setArticles(res.data.data);\r\n    console.log(\"Getting News Articles\");\r\n    console.log(res); \r\n    setHidden(\"none\");\r\n    setShowing(\"block\");\r\n    getStockInfo();\r\n    getchartInfo();\r\n    setStockName(stock);\r\n  };\r\n\r\n  // When the user clicks enter on the search bar, the check function is called to verify the stock code.\r\n  const enterKey = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault()\r\n      console.log(\"Enter Pressed from About\")\r\n      checker();\r\n    }\r\n  };\r\n\r\n  // Updates chart data.\r\n  const updateChart = () => {\r\n    getchartInfo();\r\n  }\r\n\r\n  // When user clicks the month button, this calculates 1 months worth of chart data.\r\n  const month = () => {\r\n    console.log(\"Month called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Months ago's date: \" + formated_monthAgo)\r\n    setTime(formated_monthAgo); \r\n    /*Format YYYY-MM-DD*/\r\n    updateChart();\r\n  }\r\n\r\n  // When user clicks the 3 month button, this calculates 3 months worth of chart data.\r\n  const threemonths = () => {\r\n    console.log(\"3 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Three months ago's date: \" + formated_threeMonthsAgo)\r\n    setTime(formated_threeMonthsAgo); \r\n    /*Format YYYY-MM-DD*/\r\n    updateChart();\r\n  }\r\n\r\n  // When user clicks the 6 month button, this calculates 6 months worth of chart data.\r\n  const sixmonths = () => {\r\n    console.log(\"6 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Six months ago's date: \" + formated_sixMonthsAgo)\r\n    setTime(formated_sixMonthsAgo); \r\n    /*Format YYYY-MM-DD*/\r\n    updateChart();\r\n  }\r\n\r\n   // When user clicks the 1 year button, this calculates 1 year worth of chart data.\r\n  const oneYear = (e) => {\r\n    console.log(\"1 Year called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Year ago's date: \" + formated_yearAgo)\r\n    setTime(formated_yearAgo); \r\n    /*Format YYYY-MM-DD*/\r\n    updateChart();\r\n  }\r\n\r\n  // Initalizes the buttons for the news carusel.\r\n  let whirligig\r\n  const next = () => whirligig.next()\r\n  const prev = () => whirligig.prev()\r\n\r\n  return (\r\n  <div id = \"content\">\r\n    <div className=\"navBar-div\">\r\n    <Nav id =\"navBar\"\r\n        style={{ \r\n        height: '90px',\r\n        paddingTop: '0.5%',\r\n        paddingBottom: '0.5%',\r\n        backgroundImage: `url(${background})`,\r\n        backgroundCover: `cover`,\r\n        backgroundSize: '100% 100%',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor: '#000'\r\n        }}\r\n      >\r\n        <img id=\"logo\" src={Logo} />\r\n \r\n        <NavMenu id=\"menu\">\r\n\r\n        <NavLink id=\"link\" to='/index' activeStyle>\r\n          Home\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/products' activeStyle>\r\n          Products\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/about' activeStyle>\r\n          About Us\r\n        </NavLink>\r\n\r\n        <Form inline id=\"searchBar\">\r\n          <FormControl type=\"text\" autoComplete=\"off\"\r\n            id=\"searchBar\" placeholder=\"Use Stock Codes (e.g. AAPL)\"\r\n            onChange={stockChange} \r\n            onKeyPress={enterKey}\r\n        />\r\n\r\n          <Button id=\"searchButton\" \r\n            onClick={checker}>\r\n              Search\r\n            </Button>\r\n        </Form>\r\n\r\n        </NavMenu>\r\n      </Nav>\r\n\r\n    </div>\r\n\r\n    <div style = {{\r\n          textAlign: \"center\",\r\n          background: \"#fff\",\r\n          paddingTop: \"0%\",\r\n          overflow: 'hidden',\r\n          border: '1px solid #fff',\r\n          borderLeft: 'none',\r\n          borderRight: 'none',\r\n          display: hideError\r\n        }}>\r\n          <h3 id='error-message'>Invalid Stock Code! Enter A Valid Stock Code!</h3>\r\n    </div>\r\n\r\n    <div \r\n      style ={{\r\n        justifyContent: 'center',\r\n        marginLeft: '5%',\r\n        marginRight: '5%',\r\n        overflow: 'auto',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        display: show\r\n    }}> {/* Contains the stock charts, metrics, and stock news. */}\r\n        <button id=\"toggle\" onClick={viewAbout}>Back to About Us</button> {/* Button to view the About Us section. */}\r\n        <h1 style = {{\r\n          marginLeft: '10%'\r\n        }}> \r\n          {stockName} \r\n        </h1>\r\n        <div id='time-Frames'> {/* Time frame buttons to view stock data */}\r\n          <button onClick={month}>\r\n            1 Month\r\n          </button> \r\n          <button onClick={threemonths}>\r\n            3 Months\r\n          </button> \r\n          <button onClick={sixmonths}>\r\n            6 Months\r\n          </button> \r\n          <button onClick={oneYear}>\r\n            1 Year\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{\r\n            display: toggleCandle,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n\r\n        {/* Candlestick Chart */}\r\n        <CanvasJSChart\r\n          options = { {\r\n            theme: \"light1\",\r\n            exportEnabled: true,\r\n            animationEnabled: true,\r\n            height: 450,\r\n            axisY: {\r\n              minimum: Math.min(...price.map(data => data.low)) / 1.1,\r\n              maximum: Math.max(...price.map(data => data.high)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              prefix: \"$\",\r\n            },\r\n            axisX: {\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              scaleBreaks: {\r\n                spacing: 0,\r\n                fillOpacity: 0,\r\n                lineThickness: 0,\r\n                customBreaks: price.reduce((breaks, value, index, array) => {\r\n                    if (index === 0) return breaks;\r\n\r\n                    const currentDataPointUnix = Number(new Date(value.date));\r\n                    const previousDataPointUnix = Number(new Date(array[index - 1].date));\r\n\r\n                    const oneDayInMs = 86400000;\r\n\r\n                    const difference = previousDataPointUnix - currentDataPointUnix;\r\n\r\n                    return difference === oneDayInMs\r\n                        ? breaks\r\n                        : [\r\n                            ...breaks,\r\n                            {\r\n                                startValue: currentDataPointUnix,\r\n                                endValue: previousDataPointUnix - oneDayInMs\r\n                            }\r\n                        ]\r\n                  }, [])\r\n                }\r\n              },\r\n                data: [{\r\n                  type: 'candlestick',\r\n                  risingColor: \"green\",\r\n                  fallingColor: \"#E40A0A\",\r\n                  dataPoints: price.map(price => ({\r\n                      x: new Date(price.date),\r\n                      y: [\r\n                        price.open,\r\n                        price.high,\r\n                        price.low,\r\n                        price.close\r\n                    ]\r\n                  }))\r\n                }],\r\n          \r\n              }\r\n            }\r\n          />\r\n          </div>\r\n\r\n          <div style={{\r\n            display: toggleLine,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n\r\n          {/* Bar Chart is called from different file as both charts can't be initialized on the same page. */}\r\n          {stockInfo.map(({ symbol }) => (\r\n                <Line\r\n                  symbol={symbol}\r\n                  time={time}\r\n                />\r\n          ))}\r\n          </div>\r\n\r\n          {/* Buttons to change charts */}\r\n          <div id='buttons'>\r\n          <button onClick={viewCandle}\r\n            id=\"candlesticks-button\">Candlestick Chart\r\n          </button> \r\n          <button onClick={viewLine}\r\n            id=\"line-button\">Line Chart\r\n          </button> \r\n        </div>\r\n\r\n        <br></br>\r\n\r\n        {/* Current Stock metrics and previous business day metrics. */}\r\n        <div id=\"data\">\r\n          <div id=\"metrics\">\r\n          {\r\n          stockInfo.map(({ close, open, high, low, volume, dividend}) => (\r\n          <StockInformation\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n            dividend={dividend}\r\n          />\r\n          ))}\r\n          </div>\r\n          <div id=\"metrics\">\r\n          {\r\n          prevStockInfo.map(({close, open, high, low, volume}) => (\r\n          <PreviousStockInfo\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n          />\r\n          ))}\r\n          {\r\n            <h3>Prior Business Day: {formated_yesterday}</h3>\r\n          }\r\n          </div>\r\n        </div>\r\n\r\n        {/* Displays current stock name. */}\r\n        <div style = {{\r\n          marginLeft: '10%'\r\n        }}>\r\n          <h1>Recent News Articles: {stockName} </h1>\r\n        </div>\r\n\r\n        {/* Displays stock related news on a carousel. */}\r\n          <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <NewsItem\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n            {/* Slider buttons to scroll through the 25 stock news articles.  */}\r\n            <div className='buttons'>\r\n                <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                <button id='sliderbutton-next' onClick={next}>Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    <div style={{\r\n      display: hidden\r\n    }}>\r\n    \r\n    <div className = \"aboutPage\">\r\n      {/* Full height image header */}\r\n      <div class = \"firstPortion\">\r\n        <div class = \"firstTitleandSub\"> \r\n          <h1 class = \"h1Title\">TradeBreath</h1>\r\n          <p class = \"firstSubTitle\">Finanical News For Your Safe Investment</p>\r\n        </div>\r\n      </div> \r\n\r\n      {/* About Section */}\r\n      <div class = \"secondPortion\">\r\n        <h3 class = \"h3Title\">About TradeBreath</h3>\r\n        <p class = \"explain\">Our mission is to make you invest safer by providing you with our key features.</p>\r\n        <p class = \"secondSub\">Key Features of TradeBreath</p>\r\n\r\n        <div class = \"symbolContainer\">\r\n          <div class = \"column\">\r\n            <img src = {linePNG} height = \"100px\" width = \"100px\"/>\r\n            <p class = \"symbolTitle\">Line Chart</p>         \r\n            <p class = \"symbolExpain\">We provide line chart which shows closing stock price for each of the day for a year.</p>  \r\n          </div>\r\n\r\n          <div class = \"column\">\r\n            <img src = {candlePNG} height = \"100px\" width = \"100px\"/>  \r\n            <p class = \"symbolTitle\">Candlestick Chart</p>           \r\n            <p class = \"symbolExpain\">We provide candlestick chart which shows open, high, low, close for each of the day for a year.</p>  \r\n          </div>\r\n\r\n          <div class = \"column\">\r\n            <img src = {newsPNG} height = \"100px\" width = \"100px\"/>  \r\n            <p class = \"symbolTitle\">Recent News Articles</p>       \r\n            <p class = \"symbolExpain\">We provide top news articles for the day and the recent news articles for a searched stock. </p>      \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Team Section */}\r\n      <div class = \"thirdPortion\">\r\n        <h3 class = \"h3Title\">Team Members</h3>\r\n        <div class = \"peopleContainer\">\r\n          <div class = \"columns\">\r\n            <img src = {adrian}/>\r\n            <p class = \"personName\">Adrian Ramirez</p>    \r\n            <p class = \"poersonComent\">\"Blah Blah Blah\"</p>    \r\n          </div>\r\n\r\n          <div class = \"columns\">\r\n            <img src = {alex}/>\r\n            <p class = \"personName\">Alex Jun</p>  \r\n            <p class = \"poersonComent\">\"Blah Blah Blah\"</p>      \r\n          </div>\r\n\r\n          <div class = \"columns\">\r\n            <img src = {diego}/>\r\n            <p class = \"personName\">Diego Kervabon</p>    \r\n            <p class = \"poersonComent\">\"Blah Blah Blah\"</p>    \r\n          </div>\r\n\r\n          <div class = \"columns\">\r\n            <img src = {edwin}/>\r\n            <p class = \"personName\">Edwin Zhu</p>  \r\n            <p class = \"poersonComent\">\"Blah Blah Blah\"</p>      \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Who We Are Section */}    \r\n      <div class = \"fourthPortion\">\r\n        <h3 class = \"h3Title\">Who We Are</h3>\r\n        <p class = \"explain\">We are students from Hunter College and this website is a project for the class CSCI 49900.</p>\r\n        \r\n        <div class = \"hunterPic\">\r\n          <img src = {hunterPNG}/>\r\n        </div>\r\n      </div>\r\n    \r\n    \r\n    </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default About;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\productX.js",["144","145","146","147","148","149","150","151","152"],"import React, { useEffect, useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport background from './Sky.jpg';\r\nimport './productX.css';\r\nimport NewsItem from './newsItem';\r\nimport StockInformation from './stockInformation';\r\nimport axios, { Axios } from 'axios';\r\n\r\nimport { Nav, NavLink, NavMenu} from '../components/Navbar/NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport Logo from '../components/Navbar/TradeBreath.gif';\r\nimport { render } from '@testing-library/react';\r\nimport StockInfo from './stockInformation';\r\n\r\nconst Home = () => {\r\n\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState(\"\");\r\n\r\n  const [tbapp, settbapp]= useState(\"\");\r\n  const [found, setFound]= useState(false);\r\n\r\n  \r\n  function stockChange(event){\r\n    setStock(event.target.value);\r\n  } \r\n\r\n  async function tbappChange() {\r\n    try {\r\n    let response = await axios.get('/tbapp/?stock=' + stock + '&interval=Day&start_date=2021-10-14&end_date=2021-10-14' , { mode: \"no-cors\" }); \r\n    /*let response = await axios.get(\"https://goweather.herokuapp.com/weather/\"+ stock );*/  \r\n    /*The above line is for Testing pursposes to see if app connects to an external api which it does*/ \r\n      /*settbapp(response.data);*/\r\n      setStockInfo(response.data);\r\n      /* console.log(response.data); */\r\n      setFound(true);\r\n    }catch(error) {\r\n      if(error.response) {\r\n        /* console.log(error.response.data); */\r\n        setFound(false);\r\n      }\r\n    }\r\n  }\r\n\r\n/* \r\n  useEffect(() => {\r\n    const getArticles = async () => {\r\n      const res = await axios.get(\r\n        'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n      );\r\n      setArticles(res.data.data);\r\n    };\r\n    getArticles();\r\n  },[null]);\r\n*/\r\n\r\n  const getStockInfo = async () => {\r\n    const info = await axios.get (\r\n      'https://api.marketstack.com/v1/eod/latest?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + stock /*+ '&%20date_from=2021-10-15'*/ , { mode: \"no-cors\" }\r\n    );\r\n    setStockInfo(info.data.data);\r\n    console.log(info);\r\n  };\r\n\r\n  const getArticles = async () => {\r\n    const res = await axios.get(\r\n      'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n    );\r\n    setArticles(res.data.data);\r\n    console.log(res); \r\n    getStockInfo();\r\n    /* tbappChange(); */\r\n  };\r\n  \r\n\r\n    let whirligig\r\n    const next = () => whirligig.next()\r\n    const prev = () => whirligig.prev()\r\n\r\n    return (\r\n    <div>\r\n      <div>\r\n        <div className=\"navBar-div\">\r\n          <Nav id =\"navBar\"\r\n            style={{ \r\n            height: '90px',\r\n            paddingTop: '0.5%',\r\n            paddingBottom: '0.5%',\r\n            backgroundImage: `url(${background})`,\r\n            backgroundCover: `cover`,\r\n            backgroundSize: '100% 100%',\r\n            backgroundAttachment: 'fixed',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor: '#000'\r\n          }}\r\n        >\r\n          <img id=\"logo\" src={Logo} />\r\n \r\n          <NavMenu id=\"menu\">\r\n\r\n          <NavLink id=\"link\" to='/index' activeStyle>\r\n            Home\r\n          </NavLink>\r\n          <NavLink id=\"link\" to='/products' activeStyle>\r\n            Products\r\n          </NavLink>\r\n          <NavLink id=\"link\" to='/about' activeStyle>\r\n            About Us\r\n          </NavLink>\r\n\r\n          <Form inline id=\"searchBar\">\r\n              <FormControl type=\"text\" autoComplete=\"off\"\r\n              id=\"searchBar\"\r\n              onChange={stockChange} \r\n          />\r\n\r\n            <Button id=\"searchButton\" \r\n            onClick={getArticles}>\r\n              Search\r\n            </Button>\r\n          </Form>\r\n\r\n          </NavMenu>\r\n        </Nav>\r\n\r\n        </div>\r\n        <div id='chart-div'>\r\n            <h1> {stock} </h1>\r\n            \r\n\r\n        <br></br>\r\n\r\n        <div className=\"databox\">\r\n          {\r\n          stockInfo.map(({ close, open, high, low, volume }) => (\r\n          <StockInformation\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n          />\r\n          ))}\r\n\r\n          {/*}\r\n          <div>\r\n            <p>{stockInfo}</p>\r\n            {console.log(stockInfo)}\r\n          </div>\r\n          \r\n\r\n          {found ?\r\n          <div>\r\n            <h3> {stock} </h3>\r\n            <br></br>\r\n            <ul> \r\n              <li>Previous Close: {tbapp.vw} </li>\r\n\r\n              <li>Open: {tbapp.o} </li>\r\n\r\n              <li>Volume: {tbapp.c} </li>\r\n\r\n            </ul>\r\n          </div>\r\n          : <h3> No Results </h3>}\r\n          */}\r\n        </div>\r\n\r\n        <div id='product-article-title'>\r\n          <h1>Recent News Articles: {stock} </h1>\r\n        </div>\r\n\r\n          <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <NewsItem\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n            <div className='buttons'>\r\n                <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                <button id='sliderbutton-next' onClick={next}>Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Home;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Footer\\index.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\index.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\newsItem.js",["187","188","189"],"import React from \"react\";\r\n\r\nconst NewsItem = ({ title, news_url, image_url, text, date }) => {\r\n    return (\r\n        <div>\r\n            <a href={news_url} target=\"_blank\">\r\n                <img src={image_url} alt=\"New Image\" />\r\n            </a>\r\n            <h3>\r\n                <a href={news_url} target=\"_blank\">{title}</a>\r\n            </h3>\r\n            <p>{text}</p>\r\n            <p>{date}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsItem;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Navbar\\NavbarElements.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\stockInformation.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\linechartv2.js",["190","191"],"import React, { useEffect, useState } from 'react';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\nimport axios from 'axios'; \r\n\r\nconst Line = ({ symbol, time }) => {\r\n\r\n  const [price, setPrice] = useState([]);\r\n  const [stock, setStock]= useState('');\r\n  const [timeframe, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(stock !== symbol ) {\r\n      getchartInfo()\r\n      setTime(time)\r\n      setStock(symbol)\r\n    }\r\n    \r\n    else if(timeframe !== time) {\r\n      getchartInfo()\r\n      setTime(time)\r\n    }\r\n    \r\n    \r\n  });\r\n\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + symbol + '&interval=Day&start_date=' + time + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    console.log(\"LineChart called\");\r\n    console.log(stock);\r\n    setPrice(priceAndDate.data.data);\r\n  }\r\n\r\n  return ( \r\n      <div>\r\n          <CanvasJSChart id='line'\r\n            options = { {\r\n              exportEnabled: true,\r\n              animationEnabled: true,\r\n              height: 450,\r\n              axisY: {\r\n                title: \"USD\",\r\n                prefix: \"$\"\r\n              },\r\n              axisY: {\r\n                minimum: Math.min(...price.map(data => data.low)) / 1.1,\r\n                maximum: Math.max(...price.map(data => data.high)) * 1.1,\r\n                crosshair: {\r\n                  enabled: true,\r\n                  snapToDataPoint: true\r\n                },\r\n                prefix: \"$\",\r\n              },\r\n              axisX: {\r\n                crosshair: {\r\n                  enabled: true,\r\n                  snapToDataPoint: true\r\n                },\r\n              },\r\n              data: [{\r\n                type: \"line\",\r\n                yValueFormatString: \"$#,###.##\",\r\n                dataPoints : price.map(price => ({\r\n                  x: new Date(price.date),\r\n                  y: Number(price.close)\r\n                }))\r\n              }],\r\n              \r\n            } }\r\n          />\r\n      </div> \r\n    );\r\n};\r\n\r\nexport default Line;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\dailyArticles.js",["192","193"],"import React, { useEffect, useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport NewsItem from './newsItem';\r\nimport TopNews from './topNews';\r\nimport axios from 'axios'; \r\n\r\nconst DailyArticles = () => {\r\n\r\n    const [articles, setArticles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getArticles = async () => {\r\n          const res = await axios.get(\r\n            'https://stocknewsapi.com/api/v1/category?section=general&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n          );\r\n          setArticles(res.data.data);\r\n        };\r\n        getArticles();\r\n      },\r\n    [null]);\r\n\r\n    let whirligig\r\n    const next = () => whirligig.next()\r\n    const prev = () => whirligig.prev()\r\n\r\n    return (\r\n        <div style={{\r\n          \r\n        }}>\r\n            <div id='article-title'>\r\n                <h1>Top News Articles: </h1>\r\n                \r\n            </div>\r\n\r\n            <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <TopNews\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n                <div className='buttons'>\r\n                    <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                    <button id='sliderbutton-next' onClick={next}>Next</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyArticles;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\candlechartv2.js",["194","195","196","197","198"],"import React, { useEffect, useState } from 'react';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\nimport axios from 'axios'; \r\n\r\nconst Candle = ({ symbol, time }) => {\r\n\r\n  const [price, setPrice] = useState([]);\r\n  /* const [date, setDate] = useState([]); */\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState('');\r\n  const [timeframe, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(stock !== symbol ) {\r\n      getchartInfo()\r\n      setTime(time)\r\n      setStock(symbol)\r\n    }\r\n    \r\n    else if(timeframe !== time) {\r\n      getchartInfo()\r\n      setTime(time)\r\n    }\r\n    \r\n    \r\n  });\r\n\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      /*'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + symbol + '&interval=Day&start_date=2020-10-30&end_date=&latest=', { mode: \"no-cors\" }*/\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + symbol + '&interval=Day&start_date=' + time + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    console.log(\"CandleChart called\");\r\n    console.log(stock);\r\n    setPrice(priceAndDate.data.data);\r\n\r\n    // console.log(time);\r\n  }\r\n\r\n  return ( \r\n      <div>\r\n          <CanvasJSChart\r\n          options = { {\r\n            theme: \"light1\",\r\n            exportEnabled: true,\r\n            animationEnabled: true,\r\n            height: 450,\r\n            axisY: {\r\n              minimum: Math.min(...price.map(data => data.low)) / 1.1,\r\n              maximum: Math.max(...price.map(data => data.high)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              prefix: \"$\",\r\n            },\r\n            axisX: {\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              scaleBreaks: {\r\n                spacing: 0,\r\n                fillOpacity: 0,\r\n                lineThickness: 0,\r\n                customBreaks: price.reduce((breaks, value, index, array) => {\r\n                    if (index === 0) return breaks;\r\n\r\n                    const currentDataPointUnix = Number(new Date(value.date));\r\n                    const previousDataPointUnix = Number(new Date(array[index - 1].date));\r\n\r\n                    const oneDayInMs = 86400000;\r\n\r\n                    const difference = previousDataPointUnix - currentDataPointUnix;\r\n\r\n                    return difference === oneDayInMs\r\n                        ? breaks\r\n                        : [\r\n                            ...breaks,\r\n                            {\r\n                                startValue: currentDataPointUnix,\r\n                                endValue: previousDataPointUnix - oneDayInMs\r\n                            }\r\n                        ]\r\n                  }, [])\r\n                }\r\n              },\r\n                data: [{\r\n                  type: 'candlestick',\r\n                  risingColor: \"green\",\r\n                  fallingColor: \"#E40A0A\",\r\n                  dataPoints: price.map(price => ({\r\n                      x: new Date(price.date),\r\n                      y: [\r\n                        price.open,\r\n                        price.high,\r\n                        price.low,\r\n                        price.close\r\n                    ]\r\n                  }))\r\n                }],\r\n          \r\n              }\r\n            }\r\n          />\r\n      </div> \r\n    );\r\n};\r\n\r\nexport default Candle;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\topNews.js",["199","200","201"],"import React from \"react\";\r\nimport './topNews.css'\r\n\r\nconst TopNews = ({ title, news_url, image_url, text, date }) => {\r\n    return (\r\n    <div className='text-background'>\r\n        <div className=\"topNews-articles\">\r\n            <a href={news_url} target=\"_blank\">\r\n                <img src={image_url} alt=\"New Image\" />\r\n            </a>\r\n            <h3>\r\n                <a href={news_url} target=\"_blank\">{title}</a>\r\n            </h3>\r\n            <p>{text}</p>\r\n            <p>{date}</p>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default TopNews;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\previousStockInfo.js",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":3,"column":17,"nodeType":"208","messageId":"209","endLine":3,"endColumn":26},{"ruleId":"206","severity":1,"message":"210","line":12,"column":17,"nodeType":"208","messageId":"209","endLine":12,"endColumn":22},{"ruleId":"206","severity":1,"message":"211","line":26,"column":10,"nodeType":"208","messageId":"209","endLine":26,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":51,"column":20,"nodeType":"214","messageId":"215","endLine":51,"endColumn":62,"fix":"216"},{"ruleId":"212","severity":1,"message":"213","line":60,"column":24,"nodeType":"214","messageId":"215","endLine":60,"endColumn":66,"fix":"217"},{"ruleId":"218","severity":1,"message":"219","line":73,"column":13,"nodeType":"220","messageId":"221","endLine":73,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":78,"column":24,"nodeType":"214","messageId":"215","endLine":78,"endColumn":66,"fix":"222"},{"ruleId":"218","severity":1,"message":"219","line":83,"column":18,"nodeType":"220","messageId":"221","endLine":83,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":89,"column":26,"nodeType":"214","messageId":"215","endLine":89,"endColumn":68,"fix":"223"},{"ruleId":"212","severity":1,"message":"213","line":98,"column":26,"nodeType":"214","messageId":"215","endLine":98,"endColumn":68,"fix":"224"},{"ruleId":"218","severity":1,"message":"219","line":104,"column":18,"nodeType":"220","messageId":"221","endLine":104,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":104,"column":35,"nodeType":"220","messageId":"221","endLine":104,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":108,"column":26,"nodeType":"214","messageId":"215","endLine":108,"endColumn":68,"fix":"225"},{"ruleId":"212","severity":1,"message":"213","line":116,"column":26,"nodeType":"214","messageId":"215","endLine":116,"endColumn":68,"fix":"226"},{"ruleId":"218","severity":1,"message":"219","line":122,"column":18,"nodeType":"220","messageId":"221","endLine":122,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":122,"column":35,"nodeType":"220","messageId":"221","endLine":122,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":127,"column":26,"nodeType":"214","messageId":"215","endLine":127,"endColumn":68,"fix":"227"},{"ruleId":"218","severity":1,"message":"219","line":130,"column":33,"nodeType":"220","messageId":"221","endLine":130,"endColumn":35},{"ruleId":"212","severity":1,"message":"213","line":133,"column":28,"nodeType":"214","messageId":"215","endLine":133,"endColumn":70,"fix":"228"},{"ruleId":"212","severity":1,"message":"213","line":140,"column":28,"nodeType":"214","messageId":"215","endLine":140,"endColumn":70,"fix":"229"},{"ruleId":"212","severity":1,"message":"213","line":150,"column":31,"nodeType":"214","messageId":"215","endLine":150,"endColumn":72,"fix":"230"},{"ruleId":"231","severity":1,"message":"232","line":154,"column":14,"nodeType":"233","messageId":"234","endLine":154,"endColumn":25},{"ruleId":"206","severity":1,"message":"235","line":154,"column":14,"nodeType":"208","messageId":"209","endLine":154,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":157,"column":28,"nodeType":"214","messageId":"215","endLine":157,"endColumn":70,"fix":"236"},{"ruleId":"212","severity":1,"message":"213","line":166,"column":28,"nodeType":"214","messageId":"215","endLine":166,"endColumn":70,"fix":"237"},{"ruleId":"212","severity":1,"message":"213","line":180,"column":23,"nodeType":"214","messageId":"215","endLine":180,"endColumn":64,"fix":"238"},{"ruleId":"212","severity":1,"message":"213","line":188,"column":29,"nodeType":"214","messageId":"215","endLine":188,"endColumn":76,"fix":"239"},{"ruleId":"212","severity":1,"message":"213","line":196,"column":27,"nodeType":"214","messageId":"215","endLine":196,"endColumn":72,"fix":"240"},{"ruleId":"212","severity":1,"message":"213","line":205,"column":22,"nodeType":"214","messageId":"215","endLine":205,"endColumn":62,"fix":"241"},{"ruleId":"242","severity":1,"message":"243","line":386,"column":9,"nodeType":"244","endLine":386,"endColumn":37},{"ruleId":"206","severity":1,"message":"210","line":11,"column":17,"nodeType":"208","messageId":"209","endLine":11,"endColumn":22},{"ruleId":"212","severity":1,"message":"213","line":56,"column":20,"nodeType":"214","messageId":"215","endLine":56,"endColumn":62,"fix":"245"},{"ruleId":"212","severity":1,"message":"213","line":65,"column":24,"nodeType":"214","messageId":"215","endLine":65,"endColumn":66,"fix":"246"},{"ruleId":"218","severity":1,"message":"219","line":79,"column":13,"nodeType":"220","messageId":"221","endLine":79,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":84,"column":24,"nodeType":"214","messageId":"215","endLine":84,"endColumn":66,"fix":"247"},{"ruleId":"218","severity":1,"message":"219","line":89,"column":18,"nodeType":"220","messageId":"221","endLine":89,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":94,"column":26,"nodeType":"214","messageId":"215","endLine":94,"endColumn":68,"fix":"248"},{"ruleId":"212","severity":1,"message":"213","line":102,"column":26,"nodeType":"214","messageId":"215","endLine":102,"endColumn":68,"fix":"249"},{"ruleId":"218","severity":1,"message":"219","line":108,"column":18,"nodeType":"220","messageId":"221","endLine":108,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":108,"column":35,"nodeType":"220","messageId":"221","endLine":108,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":112,"column":26,"nodeType":"214","messageId":"215","endLine":112,"endColumn":68,"fix":"250"},{"ruleId":"212","severity":1,"message":"213","line":120,"column":26,"nodeType":"214","messageId":"215","endLine":120,"endColumn":68,"fix":"251"},{"ruleId":"218","severity":1,"message":"219","line":126,"column":18,"nodeType":"220","messageId":"221","endLine":126,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":126,"column":35,"nodeType":"220","messageId":"221","endLine":126,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":131,"column":26,"nodeType":"214","messageId":"215","endLine":131,"endColumn":68,"fix":"252"},{"ruleId":"218","severity":1,"message":"219","line":134,"column":33,"nodeType":"220","messageId":"221","endLine":134,"endColumn":35},{"ruleId":"212","severity":1,"message":"213","line":137,"column":28,"nodeType":"214","messageId":"215","endLine":137,"endColumn":70,"fix":"253"},{"ruleId":"212","severity":1,"message":"213","line":144,"column":28,"nodeType":"214","messageId":"215","endLine":144,"endColumn":70,"fix":"254"},{"ruleId":"212","severity":1,"message":"213","line":154,"column":31,"nodeType":"214","messageId":"215","endLine":154,"endColumn":72,"fix":"255"},{"ruleId":"231","severity":1,"message":"232","line":158,"column":14,"nodeType":"233","messageId":"234","endLine":158,"endColumn":25},{"ruleId":"206","severity":1,"message":"235","line":158,"column":14,"nodeType":"208","messageId":"209","endLine":158,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":161,"column":28,"nodeType":"214","messageId":"215","endLine":161,"endColumn":70,"fix":"256"},{"ruleId":"212","severity":1,"message":"213","line":170,"column":28,"nodeType":"214","messageId":"215","endLine":170,"endColumn":70,"fix":"257"},{"ruleId":"212","severity":1,"message":"213","line":185,"column":23,"nodeType":"214","messageId":"215","endLine":185,"endColumn":64,"fix":"258"},{"ruleId":"212","severity":1,"message":"213","line":193,"column":29,"nodeType":"214","messageId":"215","endLine":193,"endColumn":76,"fix":"259"},{"ruleId":"212","severity":1,"message":"213","line":201,"column":27,"nodeType":"214","messageId":"215","endLine":201,"endColumn":72,"fix":"260"},{"ruleId":"212","severity":1,"message":"213","line":210,"column":22,"nodeType":"214","messageId":"215","endLine":210,"endColumn":62,"fix":"261"},{"ruleId":"242","severity":1,"message":"243","line":374,"column":9,"nodeType":"244","endLine":374,"endColumn":37},{"ruleId":"242","severity":1,"message":"243","line":643,"column":13,"nodeType":"244","endLine":643,"endColumn":68},{"ruleId":"242","severity":1,"message":"243","line":649,"column":13,"nodeType":"244","endLine":649,"endColumn":70},{"ruleId":"242","severity":1,"message":"243","line":655,"column":13,"nodeType":"244","endLine":655,"endColumn":68},{"ruleId":"242","severity":1,"message":"243","line":667,"column":13,"nodeType":"244","endLine":667,"endColumn":34},{"ruleId":"242","severity":1,"message":"243","line":673,"column":13,"nodeType":"244","endLine":673,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":679,"column":13,"nodeType":"244","endLine":679,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":685,"column":13,"nodeType":"244","endLine":685,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":698,"column":11,"nodeType":"244","endLine":698,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"210","line":7,"column":17,"nodeType":"208","messageId":"209","endLine":7,"endColumn":22},{"ruleId":"206","severity":1,"message":"262","line":12,"column":10,"nodeType":"208","messageId":"209","endLine":12,"endColumn":16},{"ruleId":"206","severity":1,"message":"263","line":13,"column":8,"nodeType":"208","messageId":"209","endLine":13,"endColumn":17},{"ruleId":"206","severity":1,"message":"264","line":21,"column":10,"nodeType":"208","messageId":"209","endLine":21,"endColumn":15},{"ruleId":"206","severity":1,"message":"265","line":21,"column":17,"nodeType":"208","messageId":"209","endLine":21,"endColumn":25},{"ruleId":"206","severity":1,"message":"266","line":22,"column":10,"nodeType":"208","messageId":"209","endLine":22,"endColumn":15},{"ruleId":"206","severity":1,"message":"267","line":29,"column":18,"nodeType":"208","messageId":"209","endLine":29,"endColumn":29},{"ruleId":"242","severity":1,"message":"243","line":98,"column":11,"nodeType":"244","endLine":98,"endColumn":39},{"ruleId":"206","severity":1,"message":"268","line":8,"column":8,"nodeType":"208","messageId":"209","endLine":8,"endColumn":14},{"ruleId":"212","severity":1,"message":"213","line":52,"column":20,"nodeType":"214","messageId":"215","endLine":52,"endColumn":62,"fix":"269"},{"ruleId":"212","severity":1,"message":"213","line":61,"column":24,"nodeType":"214","messageId":"215","endLine":61,"endColumn":66,"fix":"270"},{"ruleId":"218","severity":1,"message":"219","line":74,"column":13,"nodeType":"220","messageId":"221","endLine":74,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":79,"column":24,"nodeType":"214","messageId":"215","endLine":79,"endColumn":66,"fix":"271"},{"ruleId":"218","severity":1,"message":"219","line":84,"column":18,"nodeType":"220","messageId":"221","endLine":84,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":90,"column":26,"nodeType":"214","messageId":"215","endLine":90,"endColumn":68,"fix":"272"},{"ruleId":"212","severity":1,"message":"213","line":99,"column":26,"nodeType":"214","messageId":"215","endLine":99,"endColumn":68,"fix":"273"},{"ruleId":"218","severity":1,"message":"219","line":105,"column":18,"nodeType":"220","messageId":"221","endLine":105,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":105,"column":35,"nodeType":"220","messageId":"221","endLine":105,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":109,"column":26,"nodeType":"214","messageId":"215","endLine":109,"endColumn":68,"fix":"274"},{"ruleId":"212","severity":1,"message":"213","line":117,"column":26,"nodeType":"214","messageId":"215","endLine":117,"endColumn":68,"fix":"275"},{"ruleId":"218","severity":1,"message":"219","line":123,"column":18,"nodeType":"220","messageId":"221","endLine":123,"endColumn":20},{"ruleId":"218","severity":1,"message":"219","line":123,"column":35,"nodeType":"220","messageId":"221","endLine":123,"endColumn":37},{"ruleId":"212","severity":1,"message":"213","line":128,"column":26,"nodeType":"214","messageId":"215","endLine":128,"endColumn":68,"fix":"276"},{"ruleId":"218","severity":1,"message":"219","line":131,"column":33,"nodeType":"220","messageId":"221","endLine":131,"endColumn":35},{"ruleId":"218","severity":1,"message":"219","line":131,"column":83,"nodeType":"220","messageId":"221","endLine":131,"endColumn":85},{"ruleId":"212","severity":1,"message":"213","line":134,"column":28,"nodeType":"214","messageId":"215","endLine":134,"endColumn":70,"fix":"277"},{"ruleId":"212","severity":1,"message":"213","line":141,"column":28,"nodeType":"214","messageId":"215","endLine":141,"endColumn":70,"fix":"278"},{"ruleId":"212","severity":1,"message":"213","line":151,"column":31,"nodeType":"214","messageId":"215","endLine":151,"endColumn":72,"fix":"279"},{"ruleId":"231","severity":1,"message":"232","line":155,"column":14,"nodeType":"233","messageId":"234","endLine":155,"endColumn":25},{"ruleId":"206","severity":1,"message":"235","line":155,"column":14,"nodeType":"208","messageId":"209","endLine":155,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":158,"column":28,"nodeType":"214","messageId":"215","endLine":158,"endColumn":70,"fix":"280"},{"ruleId":"212","severity":1,"message":"213","line":166,"column":28,"nodeType":"214","messageId":"215","endLine":166,"endColumn":70,"fix":"281"},{"ruleId":"218","severity":1,"message":"219","line":170,"column":35,"nodeType":"220","messageId":"221","endLine":170,"endColumn":37},{"ruleId":"218","severity":1,"message":"219","line":170,"column":85,"nodeType":"220","messageId":"221","endLine":170,"endColumn":87},{"ruleId":"212","severity":1,"message":"213","line":173,"column":30,"nodeType":"214","messageId":"215","endLine":173,"endColumn":72,"fix":"282"},{"ruleId":"212","severity":1,"message":"213","line":187,"column":23,"nodeType":"214","messageId":"215","endLine":187,"endColumn":64,"fix":"283"},{"ruleId":"212","severity":1,"message":"213","line":195,"column":29,"nodeType":"214","messageId":"215","endLine":195,"endColumn":76,"fix":"284"},{"ruleId":"212","severity":1,"message":"213","line":203,"column":27,"nodeType":"214","messageId":"215","endLine":203,"endColumn":72,"fix":"285"},{"ruleId":"212","severity":1,"message":"213","line":212,"column":22,"nodeType":"214","messageId":"215","endLine":212,"endColumn":62,"fix":"286"},{"ruleId":"287","severity":1,"message":"288","line":277,"column":3,"nodeType":"289","endLine":277,"endColumn":9,"suggestions":"290"},{"ruleId":"287","severity":1,"message":"291","line":277,"column":4,"nodeType":"292","endLine":277,"endColumn":8},{"ruleId":"242","severity":1,"message":"243","line":410,"column":11,"nodeType":"244","endLine":410,"endColumn":39},{"ruleId":"293","severity":1,"message":"294","line":6,"column":13,"nodeType":"244","messageId":"295","endLine":6,"endColumn":48,"fix":"296"},{"ruleId":"297","severity":1,"message":"298","line":7,"column":17,"nodeType":"244","endLine":7,"endColumn":56},{"ruleId":"293","severity":1,"message":"294","line":10,"column":17,"nodeType":"244","messageId":"295","endLine":10,"endColumn":52,"fix":"299"},{"ruleId":"287","severity":1,"message":"300","line":11,"column":3,"nodeType":"208","endLine":11,"endColumn":12,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":46,"column":15,"nodeType":"304","messageId":"221","endLine":46,"endColumn":20},{"ruleId":"206","severity":1,"message":"305","line":3,"column":8,"nodeType":"208","messageId":"209","endLine":3,"endColumn":16},{"ruleId":"287","severity":1,"message":"291","line":20,"column":6,"nodeType":"292","endLine":20,"endColumn":10},{"ruleId":"206","severity":1,"message":"306","line":9,"column":10,"nodeType":"208","messageId":"209","endLine":9,"endColumn":19},{"ruleId":"206","severity":1,"message":"307","line":9,"column":21,"nodeType":"208","messageId":"209","endLine":9,"endColumn":33},{"ruleId":"206","severity":1,"message":"308","line":10,"column":10,"nodeType":"208","messageId":"209","endLine":10,"endColumn":18},{"ruleId":"206","severity":1,"message":"309","line":10,"column":20,"nodeType":"208","messageId":"209","endLine":10,"endColumn":31},{"ruleId":"287","severity":1,"message":"300","line":14,"column":3,"nodeType":"208","endLine":14,"endColumn":12,"suggestions":"310"},{"ruleId":"293","severity":1,"message":"294","line":8,"column":13,"nodeType":"244","messageId":"295","endLine":8,"endColumn":48,"fix":"311"},{"ruleId":"297","severity":1,"message":"298","line":9,"column":17,"nodeType":"244","endLine":9,"endColumn":56},{"ruleId":"293","severity":1,"message":"294","line":12,"column":17,"nodeType":"244","messageId":"295","endLine":12,"endColumn":52,"fix":"312"},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'hidden' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property padStart.","MemberExpression","unexpectedWhitespace",{"range":"315","text":"316"},{"range":"317","text":"316"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"318","text":"316"},{"range":"319","text":"316"},{"range":"320","text":"316"},{"range":"321","text":"316"},{"range":"322","text":"316"},{"range":"323","text":"316"},{"range":"324","text":"316"},{"range":"325","text":"316"},{"range":"326","text":"316"},"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'mon' is assigned a value but never used.",{"range":"327","text":"316"},{"range":"328","text":"316"},{"range":"329","text":"316"},{"range":"330","text":"316"},{"range":"331","text":"316"},{"range":"332","text":"316"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"333","text":"316"},{"range":"334","text":"316"},{"range":"335","text":"316"},{"range":"336","text":"316"},{"range":"337","text":"316"},{"range":"338","text":"316"},{"range":"339","text":"316"},{"range":"340","text":"316"},{"range":"341","text":"316"},{"range":"342","text":"316"},{"range":"343","text":"316"},{"range":"344","text":"316"},{"range":"345","text":"316"},{"range":"346","text":"316"},{"range":"347","text":"316"},{"range":"348","text":"316"},{"range":"349","text":"316"},"'render' is defined but never used.","'StockInfo' is defined but never used.","'tbapp' is assigned a value but never used.","'settbapp' is assigned a value but never used.","'found' is assigned a value but never used.","'tbappChange' is defined but never used.","'Candle' is defined but never used.",{"range":"350","text":"316"},{"range":"351","text":"316"},{"range":"352","text":"316"},{"range":"353","text":"316"},{"range":"354","text":"316"},{"range":"355","text":"316"},{"range":"356","text":"316"},{"range":"357","text":"316"},{"range":"358","text":"316"},{"range":"359","text":"316"},{"range":"360","text":"316"},{"range":"361","text":"316"},{"range":"362","text":"316"},{"range":"363","text":"316"},{"range":"364","text":"316"},{"range":"365","text":"316"},{"range":"366","text":"316"},{"range":"367","text":"316"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getStockInfo', 'getchartInfo', and 'stock'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrent' needs the current value of 'stock'.","ArrayExpression",["368"],"The null literal is not a valid dependency because it never changes. You can safely remove it.","Literal","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"369","text":"370"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"range":"371","text":"370"},"React Hook useEffect contains a call to 'setTime'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stock, symbol, timeframe, time, getchartInfo] as a second argument to the useEffect Hook.",["372"],"no-dupe-keys","Duplicate key 'axisY'.","ObjectExpression","'NewsItem' is defined but never used.","'stockInfo' is assigned a value but never used.","'setStockInfo' is assigned a value but never used.","'articles' is assigned a value but never used.","'setArticles' is assigned a value but never used.",["373"],{"range":"374","text":"370"},{"range":"375","text":"370"},"no-global-assign","no-unsafe-negation",[2001,2003],".",[2585,2587],[3567,3569],[4147,4149],[4675,4677],[5193,5195],[5597,5599],[6140,6142],[6553,6555],[6935,6937],[7399,7401],[7861,7863],[8313,8315],[8864,8866],[9322,9324],[9814,9816],[10305,10307],[2156,2158],[2740,2742],[3642,3644],[4142,4144],[4546,4548],[5002,5004],[5406,5408],[5949,5951],[6362,6364],[6744,6746],[7208,7210],[7670,7672],[8122,8124],[8675,8677],[9133,9135],[9625,9627],[10116,10118],[2040,2042],[2628,2630],[3584,3586],[4249,4251],[4777,4779],[5291,5293],[5695,5697],[6238,6240],[6690,6692],[7072,7074],[7536,7538],[7998,8000],[8404,8406],[8878,8880],[9423,9425],[9881,9883],[10373,10375],[10864,10866],{"desc":"376","fix":"377"},[173,173]," rel=\"noreferrer\"",[319,319],{"desc":"378","fix":"379"},{"desc":"378","fix":"380"},[264,264],[410,410],"Update the dependencies array to be: [getStockInfo, getchartInfo, stock]",{"range":"381","text":"382"},"Add dependencies array: [stock, symbol, timeframe, time, getchartInfo]",{"range":"383","text":"384"},{"range":"385","text":"384"},[13224,13230],"[getStockInfo, getchartInfo, stock]",[543,543],", [stock, symbol, timeframe, time, getchartInfo]",[692,692]]