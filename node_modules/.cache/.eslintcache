[{"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\index.js":"1","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\App.js":"2","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\reportWebVitals.js":"3","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\about.js":"4","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\products.js":"5","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Footer\\index.js":"6","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\stockInformation.js":"7","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\newsItem.js":"8","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\index.js":"9","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Navbar\\NavbarElements.js":"10","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\previousStockInfo.js":"11","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\linechartv2.js":"12","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\dailyArticles.js":"13","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\candlechartv2.js":"14","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\topNews.js":"15"},{"size":302,"mtime":1634856134869,"results":"16","hashOfConfig":"17"},{"size":1881,"mtime":1638397160363,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1634856134884,"results":"19","hashOfConfig":"17"},{"size":39784,"mtime":1639092819516,"results":"20","hashOfConfig":"17"},{"size":39693,"mtime":1639092872056,"results":"21","hashOfConfig":"17"},{"size":1464,"mtime":1638398486068,"results":"22","hashOfConfig":"17"},{"size":585,"mtime":1638986142619,"results":"23","hashOfConfig":"17"},{"size":460,"mtime":1634856134878,"results":"24","hashOfConfig":"17"},{"size":38089,"mtime":1639092734166,"results":"25","hashOfConfig":"17"},{"size":618,"mtime":1634856134729,"results":"26","hashOfConfig":"17"},{"size":578,"mtime":1638374838089,"results":"27","hashOfConfig":"17"},{"size":6211,"mtime":1639069706991,"results":"28","hashOfConfig":"17"},{"size":1877,"mtime":1639069706983,"results":"29","hashOfConfig":"17"},{"size":3912,"mtime":1639069706960,"results":"30","hashOfConfig":"17"},{"size":562,"mtime":1634856134883,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1avdvw7",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":77,"fixableErrorCount":0,"fixableWarningCount":33,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":70,"fixableErrorCount":0,"fixableWarningCount":33,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":71,"fixableErrorCount":0,"fixableWarningCount":33,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"71","usedDeprecatedRules":"34"},"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\index.js",[],["72","73"],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\App.js",["74"],"import 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Footer from './components/Footer';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport Home from './pages'\r\nimport Products from './pages/products';\r\nimport About from './pages/about';\r\nimport {Redirect} from 'react-router-dom';\r\nimport background from './pages/Sky.jpg';\r\n\r\n/* <Navbar /> */\r\n\r\nfunction App() {\r\nconst [hide, setHide] = useState(\"none\");\r\n\r\nconst hideLandPage = () => {\r\n  setHide(\"none\");\r\n};\r\n\r\n  return (\r\n    \r\n    <Router>\r\n      <Redirect from='/' to='/index' exact component={Home}/>\r\n\r\n      <div className='landing-Background'\r\n        style={{ \r\n          height: '100%',\r\n          backgroundImage: `url(${background})`,\r\n          backgroundCover: `cover`,\r\n          backgroundSize: '100% 100%',\r\n          backgroundAttachment: 'fixed',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundColor: '#000',\r\n          paddingTop: '5%',\r\n          paddingBottom: '10%',\r\n          marginBottom: '-5%',\r\n          display: hide\r\n        }}>\r\n          <h1>Welcome to TradeBreath</h1>   \r\n          \r\n          <Link id=\"buttons\" to=\"/index\">\r\n            <button onClick={hideLandPage}><h3>Enter</h3></button>\r\n          </Link>\r\n        </div>\r\n\r\n        <Switch>\r\n          \r\n          <Route path='/index' exact component={Home} />\r\n          <Redirect from='/index' to='/index'/>\r\n          <Route path='/products' exact component={Products} />\r\n          <Redirect from='/products' to='/products'/>\r\n          <Route path='/about' exact component={About} />\r\n          <Redirect from='/about' to='/about'/>\r\n        </Switch>\r\n        <Footer />\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\reportWebVitals.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\about.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import React, { useEffect, useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport background from './Sky.jpg';\r\nimport { Nav, NavLink, NavMenu} from '../components/Navbar/NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport Logo from '../components/Navbar/TradeBreath.gif';\r\nimport NewsItem from './newsItem';\r\nimport StockInformation from './stockInformation';\r\nimport PreviousStockInfo from './previousStockInfo';\r\nimport Line from './linechartv2';\r\nimport axios, { Axios } from 'axios';\r\nimport './about.css';\r\nimport adrian from './Adrian.png'\r\nimport alex from './Alex.png'\r\nimport diego from './Diego.png'\r\nimport edwin from './Edwin.png'\r\n\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\n\r\nimport candlePNG from './candle.png'\r\nimport linePNG from './line.png'\r\nimport newsPNG from './news.png'\r\nimport hunterPNG from './hunter.png'\r\n\r\nconst About = () => {\r\n  // States that will be changed as the website is used. \r\n  const [stockName, setStockName] = useState(\"\");\r\n  const [currentStock, setCurrent] = useState(\"\");\r\n  const [price, setPrice] = useState([]);\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [prevStockInfo, setPrevInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState(\"\");\r\n\r\n  const [Data, setData] = useState([]);\r\n  const [y1, sety1] = useState();\r\n  const [y2, sety2] = useState();\r\n\r\n  const [yearlow, setYearLow] = useState();\r\n  const [yearHigh, setYearHigh] = useState();\r\n\r\n  const [toggleLineAndCandle, setLineAndCandle] = useState(\"block\");\r\n  const [toggleVolume, setVolume] = useState(\"none\");\r\n\r\n  const [hidden, setHidden] = useState(\"block\");\r\n  const [show, setShowing] = useState(\"none\");\r\n  const [hideError, setHideError] = useState(\"none\");\r\n  const [hideTimeFrames, setHideTimeFrames] = useState(\"block\");\r\n  const [view, setView] = useState(\"3 Months\");\r\n\r\n  const [linehide, setHideLine] = useState(\"line\");\r\n  const [candlehide, setHideCandle] = useState(\"\");\r\n  const [scatterhide, setScatter] = useState(\"\");\r\n  const [forecasthide, setForecast] = useState(\"\");\r\n\r\n  const [fixClick, setFixClick] = useState(\"\")\r\n\r\n  /*Time Frames*/\r\n    var moment = require('moment-business-days');\r\n   \r\n    moment.updateLocale('us', {\r\n      holidayFormat: 'YYYY-MM-DD'\r\n    });\r\n\r\n    /* ----------Dates Calculation---------- */\r\n    const today = new Date(), // New todays date.\r\n    time_now = today.getHours() + ':' + today.getMinutes(); // Gets current hour.\r\n    var hour_now = Number(today.getHours());\r\n    var min_now = Number(today.getMinutes());\r\n\r\n    var todayDate = new Date() // Sets a new variable to get todays date.\r\n    todayDate.setDate(todayDate.getDate()) // Gets todays date.\r\n    var YYYY_today = todayDate.getFullYear(); // Gets curretn year.\r\n    var mm_today = String(todayDate.getMonth() + 1). padStart(2, '0') // Calculates curretn month.\r\n    var dd_today = String(todayDate.getDate()).padStart(2, '0') // Calculates current month.\r\n    var formated_today = YYYY_today + '-' + mm_today + '-' + dd_today // Formats date into the format the backend can read to retrieve date from the API.\r\n    // console.log(\"Today's date: \" + formated_today)\r\n\r\n    var yesterday = new Date()\r\n    var time_regulator = 1;\r\n    yesterday.setDate(yesterday.getDate() - time_regulator);\r\n    var YYYY_yesterday = yesterday.getFullYear();\r\n    var mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n    var dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n    var formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n    var dayName = yesterday.toLocaleString(\"default\", { weekday: \"long\" });\r\n    var todaydayName = todayDate.toLocaleString(\"default\", { weekday: \"long\" });\r\n    // console.log(\"Yesterday's date: \" + formated_yesterday)\r\n    \r\n    var x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay() \r\n    // Checks if the variable formated_yesterday is a business day or not.\r\n    var wkend = 0; // Keeps track of non buswiness days.\r\n    var mon;\r\n    var test;\r\n\r\n    // Checks for the amount if business days over the past 7 days.\r\n    // This updates the previous busniess day and it's metrics that are requested from the backend.\r\n    for (let i = 0; i < 7; i++) {\r\n      if (x == false && todaydayName == \"Sunday\") {\r\n        //wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - 2);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n      }\r\n      if (x == false && todaydayName == \"Saturday\") {\r\n        //wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - 1);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n      }\r\n\r\n      if (x == false && todaydayName == \"Monday\") {\r\n        //wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - 3);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate() + 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate() + 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday past 6pm\"\r\n        }\r\n        else if (hour_now < 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday before 5:30pm\"\r\n        }\r\n      }\r\n\r\n      // \r\n      if (x == true && dayName == \"Monday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Tuesday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 3);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Tuesday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Tuesday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 3 /*- 1*/);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Tuesday before 5:30pm!\"\r\n        }\r\n      }\r\n      \r\n      if (x == true && dayName == \"Tuesday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Wednesday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Wednesday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Wednesday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Wednesday before 5:30pm\"\r\n        }\r\n      }\r\n      if (x == true && dayName == \"Wednesday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Thursday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Thursday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Thursday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Thursday before 5:30pm\"\r\n        }\r\n      }\r\n      if (x == true && dayName == \"Thursday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Friday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Friday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Friday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Friday before 5:30pm\"\r\n        }\r\n      }\r\n      if (x == true && dayName == \"Friday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday before 5:30pm\"\r\n        }\r\n      }\r\n    } \r\n    \r\n    var monthAgo = new Date();\r\n    monthAgo.setMonth(monthAgo.getMonth() - 1)\r\n    var YYYY_monthAgo = monthAgo.getFullYear();\r\n    var mm_monthAgo = String(monthAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_monthAgo = String(monthAgo.getDate()).padStart(2, '0')\r\n    var formated_monthAgo = YYYY_monthAgo + '-' + mm_monthAgo + '-' + dd_monthAgo\r\n    // console.log(\"Month ago's date: \" + formated_monthAgo)\r\n\r\n    var threeMonthsAgo = new Date();\r\n    threeMonthsAgo.setMonth(threeMonthsAgo.getMonth() - 3)\r\n    var YYYY_threeMonthsAgo = threeMonthsAgo.getFullYear();\r\n    var mm_threeMonthsAgo = String(threeMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_threeMonthsAgo = String(threeMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_threeMonthsAgo = YYYY_threeMonthsAgo + '-' + mm_threeMonthsAgo + '-' + dd_threeMonthsAgo\r\n    // console.log(\"Three month ago's date: \" + formated_threeMonthsAgo)\r\n\r\n    var sixMonthsAgo = new Date();\r\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6)\r\n    var YYYY_sixMonthsAgo = sixMonthsAgo.getFullYear();\r\n    var mm_sixMonthsAgo = String(sixMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_sixMonthsAgo = String(sixMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_sixMonthsAgo = YYYY_sixMonthsAgo + '-' + mm_sixMonthsAgo + '-' + dd_sixMonthsAgo\r\n    // console.log(\"Six month ago's date: \" + formated_sixMonthsAgo)\r\n\r\n    var yearAgo = new Date();\r\n    yearAgo.setMonth(yearAgo.getMonth() -12)\r\n    /*console.log(\"Year ago's date\" + yearAgo)*/\r\n    var YYYY_yearAgo = yearAgo.getFullYear();\r\n    var mm_yearAgo = String(yearAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_yearAgo = String(yearAgo.getDate()).padStart(2, '0')\r\n    var formated_yearAgo = YYYY_yearAgo + '-' + mm_yearAgo + '-' + dd_yearAgo\r\n    // console.log(\"Year ago's date: \" + formated_yearAgo)\r\n\r\n  const initialTime = formated_threeMonthsAgo; // Sets 3 months ago as inital time frame to view stock data.\r\n\r\n  const [time, setTime] = useState(initialTime); \r\n\r\n  function stockChange(event){ // Sets all inputs to uppercase\r\n    setStock(event.target.value.toUpperCase());\r\n  } \r\n\r\n  let viewVolumeChart = () => { // If the user presses the ViewCandle button, then it will hide the line chart.\r\n    setVolume(\"block\");\r\n    setLineAndCandle(\"none\");\r\n  }\r\n\r\n  let viewLineAndCandleChart = () => { // If the user presses the Line Chart button, then the candlestick chart will be hidden.\r\n    setLineAndCandle(\"block\");\r\n    setVolume(\"none\");\r\n  }\r\n\r\n  let pressCandle = () => { // If the user presses the ViewCandle button, then it will hide the other charts.\r\n    setHideLine(\"\");\r\n    setScatter(\"\");\r\n    setForecast(\"\");\r\n    setHideCandle(\"candlestick\");\r\n    setHideTimeFrames(\"block\");\r\n    viewLineAndCandleChart();\r\n  }\r\n\r\n  let pressLine = () => { // If the user presses the Line Chart button, then the other charts will be hidden.\r\n    setHideCandle(\"\");\r\n    setScatter(\"\");\r\n    setForecast(\"\");\r\n    setHideLine(\"line\");\r\n    setHideTimeFrames(\"block\");\r\n    viewLineAndCandleChart();\r\n  }\r\n\r\n  let pressForecast = () => { // If the user presses the Forecast Chart button, other charts will be hidden along with time frame buttons.\r\n    oneYear();\r\n    setHideTimeFrames(\"none\");\r\n    setVolume(\"none\");\r\n    setLineAndCandle(\"block\");\r\n    setHideCandle(\"\");\r\n    setHideLine(\"\");\r\n    setScatter(\"scatter\");\r\n    setForecast(\"line\");\r\n  }\r\n\r\n  let pressVolume = () => { // If the user press the Volume Chart, other charts will be hidden. \r\n    viewVolumeChart();\r\n  }\r\n\r\n  let viewAbout = () => { // If the user inputs a stock name, the About Us section will be hidden to focus on the stock.\r\n    setHidden(\"block\");\r\n    setShowing(\"none\");\r\n  }\r\n\r\n   // Checks if the stock code inputted by user exsits, if not an error message will appear. If it does it will retrieve stock data.\r\n  const checker = async () => {\r\n    const response = await axios.get('https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy')\r\n    console.log(stock);\r\n    if (response.data.data.length === 0) {\r\n      console.log(\"No data recieved\")\r\n      console.log(\"Invalid Stock Code: \" + stock);\r\n      setHideError(\"block\");\r\n      setStock(currentStock);\r\n    }\r\n    else {\r\n      console.log(\"Data recieved\")\r\n      console.log(\"Valid Stock Code: \" + stock);\r\n      setCurrent(stock);\r\n      setHideError(\"none\");\r\n      getArticles();\r\n    }\r\n  }\r\n\r\n  // Retrieves stock metrics\r\n  const getStockInfo = async () => {\r\n    const info = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=2020-10-30&end_date=&latest=/latest', { mode: \"no-cors\" }\r\n    );\r\n    setStockInfo(info.data.data);\r\n    getPrevStockInfo();\r\n\r\n    var temp = JSON.stringify(info.data.data);\r\n    setData(temp);\r\n    setData(Data);\r\n  };\r\n\r\n  // Retireves stock metrics on the previous business day.\r\n  const getPrevStockInfo = async () => {\r\n    const prevInfo = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + formated_yesterday + '&end_date=&latest=/' + formated_yesterday, { mode: \"no-cors\" }\r\n    );\r\n    setPrevInfo(prevInfo.data.data);\r\n\r\n    var temp = JSON.stringify(prevInfo.data.data);\r\n    setData(temp);\r\n    setData(Data);\r\n  };\r\n\r\n  // Gets stock info for the charts.\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + time + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n    console.log(\"Getting Chart Data\");\r\n    console.log(priceAndDate.data);\r\n\r\n    var temp = JSON.stringify(priceAndDate.data.data);\r\n    setData(temp);\r\n    setData(Data);\r\n  }\r\n\r\n  // Gets articles pertaining to the stock.\r\n  const getArticles = async () => {\r\n    const res = await axios.get(\r\n      'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n    );\r\n    setArticles(res.data.data);\r\n    console.log(\"Getting News Articles\");\r\n    console.log(res); \r\n    setHidden(\"none\");\r\n    setShowing(\"block\");\r\n    getStockInfo();\r\n    getchartInfo();\r\n    setStockName(stock);\r\n    oneYearHighAndLow();\r\n    MLForecast();\r\n  };\r\n  \r\n  // Gets one year high and low. \r\n  const oneYearHighAndLow = async () => {\r\n    const HighAndLow = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + formated_yearAgo + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    console.log(HighAndLow.data);\r\n\r\n    var temp = HighAndLow.data.data[0].low\r\n    var temp2 = HighAndLow.data.data[0].high\r\n\r\n    for (let t = 1; t < HighAndLow.data.data.length; t++) {\r\n      if (HighAndLow.data.data[t].low < temp) {\r\n          temp = HighAndLow.data.data[t].low\r\n          //console.log(t);\r\n        }\r\n      if (HighAndLow.data.data[t].high > temp2) {\r\n          temp2 = HighAndLow.data.data[t].high\r\n      }\r\n    }\r\n\r\n    setYearLow(temp);\r\n    setYearHigh(temp2);\r\n  }\r\n\r\n    // Will send currert Stock to backend and will get Forecasting data\r\n    const MLForecast = async () => {\r\n      const forecast = await axios.get (\r\n        'https://doraboots99.herokuapp.com/tbapp/?stock=' + stock, { mode: \"no-cors\",  }\r\n      );\r\n      var temp = [];\r\n      var temp2;\r\n      var temp3;\r\n      var y1;\r\n      var y2;\r\n      \r\n      temp = forecast.data;\r\n      //console.log(temp);\r\n  \r\n      // Gets y1 and y2 for the Forecasting Chart\r\n      for (let i = temp.length; i > 0; i--) {\r\n        if (temp[i] == '[') {\r\n          temp2 = temp.slice(i + 1, temp.length);\r\n          i = 0;\r\n          for (let j = temp2.length; j > 0; j--) {\r\n            if (temp2[j] == ']') {\r\n              temp2 = temp2.slice(i, temp2.length - 1);\r\n              j = 0;\r\n            }\r\n  \r\n            for (let z = temp2.length; z > 0; z--) {\r\n              if (temp2[z] == ',') {\r\n                y2 = temp2.slice(z + 2, temp2.length - 1);\r\n                z = 0;\r\n              }\r\n            }\r\n  \r\n            for (let x = temp2.length; x > 0; x--) {\r\n              if (temp2[x] == '(') {\r\n                temp3 = temp2.slice(0 , x - 2)\r\n                x = 0;\r\n              }\r\n            }\r\n  \r\n            for (let y = temp3.length; y > 0; y--) {\r\n              if (temp3[y] == ',') {\r\n                y1 = temp3.slice(y + 2, temp3.length - 1);\r\n                y = 0;\r\n              }\r\n            }\r\n  \r\n          }\r\n        }\r\n      }  \r\n  \r\n      y2 = Number(y2);\r\n      y2 = Math.round((y2 + Number.EPSILON) * 100) / 100;\r\n  \r\n      //console.log('y2 = ' + y2);\r\n  \r\n      y1 = Number(y1);\r\n      y1 = Math.round((y1 + Number.EPSILON) * 100) / 100;\r\n  \r\n      //console.log('y1 = ' + y1);\r\n  \r\n      sety1(y1);\r\n      sety2(y2);\r\n    }\r\n\r\n  // When the user clicks enter on the search bar, the check function is called to verify the stock code.\r\n  const enterKey = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault()\r\n      console.log(\"Enter Pressed from About\")\r\n      checker();\r\n    }\r\n  };\r\n\r\n  // Updates chart data.\r\n  const updateChart = () => {\r\n    getchartInfo();\r\n  }\r\n\r\n  // When user clicks the month button, this calculates 1 months worth of chart data.\r\n  const month = () => {\r\n    console.log(\"Month called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Months ago's date: \" + formated_monthAgo)\r\n    setTime(formated_monthAgo); \r\n    setView(\"1 Month\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"1\")\r\n  }\r\n\r\n  // When user clicks the 3 month button, this calculates 3 months worth of chart data.\r\n  const threemonths = () => {\r\n    console.log(\"3 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Three months ago's date: \" + formated_threeMonthsAgo)\r\n    setTime(formated_threeMonthsAgo); \r\n    setView(\"3 Months\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"3\")\r\n  }\r\n\r\n  // When user clicks the 6 month button, this calculates 6 months worth of chart data.\r\n  const sixmonths = () => {\r\n    console.log(\"6 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Six months ago's date: \" + formated_sixMonthsAgo)\r\n    setTime(formated_sixMonthsAgo); \r\n    setView(\"6 Months\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"6\")\r\n  }\r\n\r\n   // When user clicks the 1 year button, this calculates 1 year worth of chart data.\r\n  const oneYear = (e) => {\r\n    console.log(\"1 Year called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Year ago's date: \" + formated_yearAgo)\r\n    setTime(formated_yearAgo); \r\n    setView(\"1 Year\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"12\")\r\n  }\r\n\r\n  // Initalizes the buttons for the news carusel.\r\n  let whirligig\r\n  const next = () => whirligig.next()\r\n  const prev = () => whirligig.prev()\r\n\r\n  // Fix to the double click issue. \r\n  useEffect(() => {\r\n    getchartInfo();\r\n  },\r\n  [fixClick]);\r\n\r\n  return (\r\n  <div id = \"content\">\r\n    <div className=\"navBar-div\">\r\n    <Nav id =\"navBar\"\r\n        style={{ \r\n        height: '90px',\r\n        paddingTop: '0.5%',\r\n        paddingBottom: '0.5%',\r\n        backgroundImage: `url(${background})`,\r\n        backgroundCover: `cover`,\r\n        backgroundSize: '100% 100%',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor: '#000'\r\n        }}\r\n      >\r\n        <img id=\"logo\" src={Logo} />\r\n \r\n        <NavMenu id=\"menu\">\r\n\r\n        <NavLink id=\"link\" to='/index' activeStyle>\r\n          Home\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/products' activeStyle>\r\n          Products\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/about' activeStyle>\r\n          About Us\r\n        </NavLink>\r\n\r\n        <Form inline id=\"searchBar\">\r\n          <FormControl type=\"text\" autoComplete=\"off\"\r\n            id=\"searchBar\" placeholder=\"Use Stock Codes (e.g. AAPL)\"\r\n            onChange={stockChange} \r\n            onKeyPress={enterKey}\r\n        />\r\n\r\n          <Button id=\"searchButton\" \r\n            onClick={checker}>\r\n              Search\r\n            </Button>\r\n        </Form>\r\n\r\n        </NavMenu>\r\n      </Nav>\r\n\r\n    </div>\r\n\r\n    <div style = {{\r\n          textAlign: \"center\",\r\n          background: \"#fff\",\r\n          paddingTop: \"0%\",\r\n          overflow: 'hidden',\r\n          border: '1px solid #fff',\r\n          borderLeft: 'none',\r\n          borderRight: 'none',\r\n          display: hideError\r\n        }}>\r\n          <h3 id='error-message'>Invalid Stock Code! Enter A Valid Stock Code!</h3>\r\n    </div>\r\n\r\n    <div \r\n      style ={{\r\n        justifyContent: 'center',\r\n        marginLeft: '5%',\r\n        marginRight: '5%',\r\n        overflow: 'auto',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        display: show\r\n    }}> {/* Contains the stock charts, metrics, and stock news. */}\r\n        <button id=\"toggle\" onClick={viewAbout}>Back to About Us</button> {/* Button to view the About Us section. */}\r\n        <h1 style = {{\r\n          marginLeft: '10%'\r\n        }}> \r\n          {stockName} \r\n        </h1>\r\n        <h3 style = {{\r\n          marginLeft: '10%'\r\n        }} >View: {view}</h3>\r\n        <div id='time-Frames' style ={{\r\n          display: hideTimeFrames\r\n        }}> {/* Time frame buttons to view stock data */}\r\n          <button onClick={month}>\r\n            1 Month\r\n          </button> \r\n          <button onClick={threemonths}>\r\n            3 Months\r\n          </button> \r\n          <button onClick={sixmonths}>\r\n            6 Months\r\n          </button> \r\n          <button onClick={oneYear}>\r\n            1 Year\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{\r\n            display: toggleVolume,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n\r\n        {/* Candlestick Chart */}\r\n        <CanvasJSChart\r\n          options = { {\r\n            exportEnabled: true,\r\n            animationEnabled: true,\r\n            height: 450,\r\n            axisY: {\r\n              title: \"\",\r\n              prefix: \"\"\r\n            },\r\n            axisY: {\r\n              minimum: Math.min(...price.map(data => data.volume)) / 1.1,\r\n              maximum: Math.max(...price.map(data => data.volume)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              prefix: \"\",\r\n            },\r\n            axisX: {\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n            },\r\n            data: [{\r\n              type: \"area\",\r\n              yValueFormatString: \"\",\r\n              color: \"#2E2EFF\",\r\n              dataPoints : price.map(price => ({\r\n                x: new Date(price.date),\r\n                y: Number(price.volume)\r\n              }))\r\n            }],\r\n          \r\n              }\r\n            }\r\n          />\r\n          </div>\r\n\r\n          <div style={{\r\n            display: toggleLineAndCandle,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n\r\n          {/* Bar Chart is called from different file as both charts can't be initialized on the same page. */}\r\n          {stockInfo.map(({ symbol }) => (\r\n                <Line\r\n                  symbol={symbol}\r\n                  time={time}\r\n                  displayLineChart={linehide}\r\n                  displayCandleStickChart={candlehide}\r\n                  displayScatterChart={scatterhide}\r\n                  displayForecastingChart={forecasthide}\r\n                  y1={y1}\r\n                  y2={y2}\r\n                />\r\n          ))}\r\n          </div>\r\n\r\n          {/* Buttons to change charts */}\r\n          <div id='buttons'>\r\n          <button onClick={pressCandle/*viewCandle*/}\r\n            id=\"candlesticks-button\">Candlestick Chart\r\n          </button> \r\n          <button onClick={pressLine/*viewLine*/}\r\n            id=\"line-button\">Line Chart\r\n          </button> \r\n          <button onClick={pressVolume/*viewLine*/}\r\n            id=\"volumechart-button\" >Volume Based Chart\r\n          </button> \r\n          <button onClick={pressForecast}\r\n            id=\"forecasting-button\">\r\n            Stock Forecasting\r\n          </button>\r\n        </div>\r\n\r\n        <br></br>\r\n\r\n        {/* Current Stock metrics and previous business day metrics. */}\r\n        <div id=\"data\">\r\n          <div id=\"metrics\">\r\n          {\r\n          stockInfo.map(({ close, open, high, low, volume}) => (\r\n          <StockInformation\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n            yearlow={yearlow}\r\n            yearHigh={yearHigh}\r\n          />\r\n          ))}\r\n            {/*<h3>{test}</h3>*/}\r\n          </div>\r\n          <div id=\"metrics\">\r\n          {\r\n          prevStockInfo.map(({close, open, high, low, volume}) => (\r\n          <PreviousStockInfo\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n            formated_yesterday={formated_yesterday}\r\n          />\r\n          ))}\r\n            {/* \r\n            <h3>{dayName}</h3>\r\n            <h3>{test}</h3> \r\n            */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Displays current stock name. */}\r\n        <div style = {{\r\n          marginLeft: '10%'\r\n        }}>\r\n          <h1>Recent News Articles: {stockName} </h1>\r\n        </div>\r\n\r\n        {/* Displays stock related news on a carousel. */}\r\n          <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <NewsItem\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n            {/* Slider buttons to scroll through the 25 stock news articles.  */}\r\n            <div className='buttons'>\r\n                <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                <button id='sliderbutton-next' onClick={next}>Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    <div style={{\r\n      display: hidden\r\n    }}>\r\n    \r\n    <div className = \"aboutPage\">\r\n      {/* Full height image header */}\r\n      <div class = \"firstPortion\">\r\n        <div class = \"firstTitleandSub\"> \r\n          <h1 class = \"h1Title\">TradeBreath</h1>\r\n          <p class = \"firstSubTitle\">Finanical News For Your Safe Investment</p>\r\n        </div>\r\n      </div> \r\n\r\n      {/* About Section */}\r\n      <div class = \"secondPortion\">\r\n        <h3 class = \"h3Title\">About TradeBreath</h3>\r\n        <p class = \"explain\">Our mission is to make you invest safer by providing you with our key features.</p>\r\n        <p class = \"secondSub\">Key Features of TradeBreath</p>\r\n\r\n        <div class = \"symbolContainer\">\r\n          <div class = \"column\">\r\n            <img src = {linePNG} height = \"100px\" width = \"100px\"/>\r\n            <p class = \"symbolTitle\">Line Chart</p>         \r\n            <p class = \"symbolExpain\">We provide line chart which shows closing stock price for each of the day for a year.</p>  \r\n          </div>\r\n\r\n          <div class = \"column\">\r\n            <img src = {candlePNG} height = \"100px\" width = \"100px\"/>  \r\n            <p class = \"symbolTitle\">Candlestick Chart</p>           \r\n            <p class = \"symbolExpain\">We provide candlestick chart which shows open, high, low, close for each of the day for a year.</p>  \r\n          </div>\r\n\r\n          <div class = \"column\">\r\n            <img src = {newsPNG} height = \"100px\" width = \"100px\"/>  \r\n            <p class = \"symbolTitle\">Recent News Articles</p>       \r\n            <p class = \"symbolExpain\">We provide top news articles for the day and the recent news articles for a searched stock. </p>      \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Team Section */}\r\n      <div class = \"thirdPortion\">\r\n        <h3 class = \"h3Title\">Team Members</h3>\r\n        <div class = \"peopleContainer\">\r\n          <div class = \"columns\">\r\n            <img src = {adrian}/>\r\n            <p class = \"personName\">Adrian Ramirez</p>    \r\n            <p class = \"poersonComent\">Front-End</p>    \r\n          </div>\r\n\r\n          <div class = \"columns\">\r\n            <img src = {alex}/>\r\n            <p class = \"personName\">Alex Jun</p>  \r\n            <p class = \"poersonComent\">Front-End</p>      \r\n          </div>\r\n\r\n          <div class = \"columns\">\r\n            <img src = {diego}/>\r\n            <p class = \"personName\">Diego Kervabon</p>    \r\n            <p class = \"poersonComent\">Back-End</p>    \r\n          </div>\r\n\r\n          <div class = \"columns\">\r\n            <img src = {edwin}/>\r\n            <p class = \"personName\">Edwin Zhu</p>  \r\n            <p class = \"poersonComent\">Back-End</p>      \r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Who We Are Section */}    \r\n      <div class = \"fourthPortion\">\r\n        <h3 class = \"h3Title\">Who We Are</h3>\r\n        <p class = \"explain\">We are students from Hunter College and this website is a project for the class CSCI 49900.</p>\r\n        \r\n        <div class = \"hunterPic\">\r\n          <img src = {hunterPNG}/>\r\n        </div>\r\n      </div>\r\n    \r\n    \r\n    </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default About;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\products.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"import React, { useEffect, useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport background from './Sky.jpg';\r\nimport { Nav, NavLink, NavMenu} from '../components/Navbar/NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport Logo from '../components/Navbar/TradeBreath.gif';\r\nimport NewsItem from './newsItem';\r\nimport Line from './linechartv2';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\nimport StockInformation from './stockInformation';\r\nimport PreviousStockInfo from './previousStockInfo';\r\nimport axios, { Axios } from 'axios';\r\nimport './products.css';\r\n\r\nconst Home = () => {\r\n  // States that will be changed as the website is used. \r\n  const [stockName, setStockName] = useState(\"\");\r\n  const [currentStock, setCurrent] = useState(\"\");\r\n  const [price, setPrice] = useState([]);\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [prevStockInfo, setPrevInfo] = useState([]);\r\n  const [stock, setStock]= useState(\"\");\r\n\r\n  const [Data, setData] = useState([]);\r\n  const [y1, sety1] = useState();\r\n  const [y2, sety2] = useState();\r\n\r\n  const [yearlow, setYearLow] = useState();\r\n  const [yearHigh, setYearHigh] = useState();\r\n\r\n  const [hidden, setHidden] = useState(\"block\");\r\n  const [show, setShowing] = useState(\"none\");\r\n  const [hideError, setHideError] = useState(\"none\");\r\n  const [hideTimeFrames, setHideTimeFrames] = useState(\"block\");\r\n  const [view, setView] = useState(\"3 Months\");\r\n\r\n  const [show_List, set_show_List] = useState(\"block\");\r\n\r\n  const [toggleLineAndCandle, setLineAndCandle] = useState(\"block\");\r\n  const [toggleVolume, setVolume] = useState(\"none\");\r\n\r\n  const [linehide, setHideLine] = useState(\"line\");\r\n  const [candlehide, setHideCandle] = useState(\"\");\r\n  const [scatterhide, setScatter] = useState(\"\");\r\n  const [forecasthide, setForecast] = useState(\"\");\r\n\r\n  const [fixClick, setFixClick] = useState(\"\")\r\n\r\n  /*Time Frames*/\r\n\r\n    // Sets up US business days and format of the dates.\r\n    var moment = require('moment-business-days');\r\n   \r\n    moment.updateLocale('us', {\r\n      holidayFormat: 'YYYY-MM-DD'\r\n    });\r\n\r\n    /* ----------Dates Calculation---------- */\r\n    const today = new Date(), // New todays date.\r\n    time_now = today.getHours() + ':' + today.getMinutes(); // Gets current hour.\r\n    var hour_now = Number(today.getHours());\r\n    var min_now = Number(today.getMinutes());\r\n\r\n    var todayDate = new Date() // Sets a new variable to get todays date.\r\n    todayDate.setDate(todayDate.getDate()) // Gets todays date.\r\n    var YYYY_today = todayDate.getFullYear(); // Gets curretn year.\r\n    var mm_today = String(todayDate.getMonth() + 1). padStart(2, '0') // Calculates curretn month.\r\n    var dd_today = String(todayDate.getDate()).padStart(2, '0') // Calculates current month.\r\n    var formated_today = YYYY_today + '-' + mm_today + '-' + dd_today // Formats date into the format the backend can read to retrieve date from the API.\r\n    // console.log(\"Today's date: \" + formated_today)\r\n\r\n    var yesterday = new Date()\r\n    var time_regulator = 1;\r\n    yesterday.setDate(yesterday.getDate() - time_regulator);\r\n    var YYYY_yesterday = yesterday.getFullYear();\r\n    var mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n    var dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n    var formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n    var dayName = yesterday.toLocaleString(\"default\", { weekday: \"long\" });\r\n    var todaydayName = todayDate.toLocaleString(\"default\", { weekday: \"long\" });\r\n    // console.log(\"Yesterday's date: \" + formated_yesterday)\r\n\r\n    var x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay()\r\n    // Checks if the variable formated_yesterday is a business day or not.\r\n    var wkend = 0; // Keeps track of non buswiness days.\r\n    var mon;\r\n    var test;\r\n\r\n    // Checks for the amount if business days over the past 7 days.\r\n    // This updates the previous busniess day and it's metrics that are requested from the backend.\r\n    for (let i = 0; i < 7; i++) {\r\n      if (x == false && todaydayName == \"Sunday\") {\r\n        //wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - 2);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n      }\r\n      if (x == false && todaydayName == \"Saturday\") {\r\n        //wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - 1);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n      }\r\n      if (x == false && todaydayName == \"Monday\") {\r\n        //wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - 3);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate() + 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate() + 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday past 6pm\"\r\n        }\r\n        else if (hour_now < 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday before 5:30pm\"\r\n        }\r\n      }\r\n      \r\n      // \r\n      if (x == true && dayName == \"Monday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Tuesday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 3);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Tuesday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Tuesday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 3 /*- 1*/);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Tuesday before 5:30pm!\"\r\n        }\r\n      }\r\n\r\n      if (x == true && dayName == \"Tuesday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Wednesday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Wednesday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Wednesday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Wednesday before 5:30pm\"\r\n        }\r\n      }\r\n      if (x == true && dayName == \"Wednesday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Thursday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Thursday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Thursday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Thursday before 5:30pm\"\r\n        }\r\n      }\r\n      if (x == true && dayName == \"Thursday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Friday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Friday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Friday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Friday before 5:30pm\"\r\n        }\r\n      }\r\n      if (x == true && dayName == \"Friday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday before 5:30pm\"\r\n        }\r\n      }\r\n    } \r\n    \r\n    var monthAgo = new Date();\r\n    monthAgo.setMonth(monthAgo.getMonth() - 1)\r\n    var YYYY_monthAgo = monthAgo.getFullYear();\r\n    var mm_monthAgo = String(monthAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_monthAgo = String(monthAgo.getDate()).padStart(2, '0')\r\n    var formated_monthAgo = YYYY_monthAgo + '-' + mm_monthAgo + '-' + dd_monthAgo\r\n    // console.log(\"Month ago's date: \" + formated_monthAgo)\r\n\r\n    var threeMonthsAgo = new Date();\r\n    threeMonthsAgo.setMonth(threeMonthsAgo.getMonth() - 3)\r\n    var YYYY_threeMonthsAgo = threeMonthsAgo.getFullYear();\r\n    var mm_threeMonthsAgo = String(threeMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_threeMonthsAgo = String(threeMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_threeMonthsAgo = YYYY_threeMonthsAgo + '-' + mm_threeMonthsAgo + '-' + dd_threeMonthsAgo\r\n    // console.log(\"Three month ago's date: \" + formated_threeMonthsAgo)\r\n\r\n    var sixMonthsAgo = new Date();\r\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6)\r\n    var YYYY_sixMonthsAgo = sixMonthsAgo.getFullYear();\r\n    var mm_sixMonthsAgo = String(sixMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_sixMonthsAgo = String(sixMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_sixMonthsAgo = YYYY_sixMonthsAgo + '-' + mm_sixMonthsAgo + '-' + dd_sixMonthsAgo\r\n    // console.log(\"Six month ago's date: \" + formated_sixMonthsAgo)\r\n\r\n    var yearAgo = new Date();\r\n    yearAgo.setMonth(yearAgo.getMonth() -12)\r\n    /*console.log(\"Year ago's date\" + yearAgo)*/\r\n    var YYYY_yearAgo = yearAgo.getFullYear();\r\n    var mm_yearAgo = String(yearAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_yearAgo = String(yearAgo.getDate()).padStart(2, '0')\r\n    var formated_yearAgo = YYYY_yearAgo + '-' + mm_yearAgo + '-' + dd_yearAgo\r\n    // console.log(\"Year ago's date: \" + formated_yearAgo)\r\n\r\n  const initialTime = formated_threeMonthsAgo; // Sets 3 months ago as inital time frame to view stock data.\r\n\r\n  const [time, setTime] = useState(initialTime); \r\n\r\n  function stockChange(event){ // Sets all inputs to uppercase\r\n    setStock(event.target.value.toUpperCase());\r\n  } \r\n\r\n  const clickedStock = (value) => { // If the user presses a listed stock button, then it will hide the list and get stock data.\r\n    setStock(value);\r\n    setStockName(value);\r\n    listCall();\r\n  }\r\n\r\n  const listCall = () => { // If the view list button is pressed, then it will hide stock data and bring back the list.\r\n    setHideError(\"none\");\r\n    getArticles();\r\n  }\r\n \r\n  let viewVolumeChart = () => { // If the user presses the ViewCandle button, then it will hide the line chart.\r\n    setVolume(\"block\");\r\n    setLineAndCandle(\"none\");\r\n    setHideTimeFrames(\"block\");\r\n  }\r\n\r\n  let viewLineAndCandleChart = () => { // If the user presses the Line Chart button, then the candlestick chart will be hidden.\r\n    setLineAndCandle(\"block\");\r\n    setVolume(\"none\");\r\n  }\r\n\r\n  let pressCandle = () => { // If the user presses the ViewCandle button, then it will hide the line chart.\r\n    setHideLine(\"\");\r\n    setScatter(\"\");\r\n    setForecast(\"\");\r\n    setHideCandle(\"candlestick\");\r\n    setHideTimeFrames(\"block\");\r\n    viewLineAndCandleChart();\r\n  }\r\n\r\n  let pressLine = () => { // If the user presses the Line Chart button, then the candlestick chart will be hidden.\r\n    setHideCandle(\"\");\r\n    setScatter(\"\");\r\n    setForecast(\"\");\r\n    setHideLine(\"line\");\r\n    setHideTimeFrames(\"block\");\r\n    viewLineAndCandleChart();\r\n  }\r\n\r\n  let pressForecast = () => { // If the user presses the Forecast Chart button, other charts will be hidden along with time frame buttons.\r\n    oneYear();\r\n    setHideTimeFrames(\"none\");\r\n    setVolume(\"none\");\r\n    setLineAndCandle(\"block\");\r\n    setHideCandle(\"\");\r\n    setHideLine(\"\");\r\n    setScatter(\"scatter\");\r\n    setForecast(\"line\");\r\n  }\r\n\r\n  let pressVolume = () => { // If the user press the Volume Chart, other charts will be hidden. \r\n    viewVolumeChart();\r\n  }\r\n\r\n  let viewList = () => { // If the view list button is pressed, then it will hide stock data and bring back the list.\r\n    setHidden(\"block\");\r\n    setShowing(\"none\");\r\n    set_show_List(\"block\");\r\n    setStock(\"\");\r\n  }\r\n\r\n  // Checks if the stock code inputted by user exsits, if not an error message will appear. If it does it will retrieve stock data.\r\n  const checker = async () => {\r\n    const response = await axios.get('https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy')\r\n    console.log(stock);\r\n    if (response.data.data.length === 0) {\r\n      console.log(\"No data recieved\")\r\n      console.log(\"Invalid Stock Code: \" + stock);\r\n      setHideError(\"block\");\r\n      setStock(currentStock);\r\n    }\r\n    else {\r\n      console.log(\"Data recieved\")\r\n      console.log(\"Valid Stock Code: \" + stock);\r\n      setCurrent(stock);\r\n      setHideError(\"none\");\r\n      getArticles();\r\n    }\r\n  }\r\n\r\n  // Retrieves stock metrics\r\n  const getStockInfo = async () => {\r\n    const info = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=2020-10-30&end_date=&latest=/latest', { mode: \"no-cors\" }\r\n    );\r\n    setStockInfo(info.data.data);\r\n    getPrevStockInfo();\r\n\r\n    var temp = JSON.stringify(info.data.data);\r\n    setData(temp);\r\n    setData(Data);\r\n  };\r\n\r\n  // Retireves stock metrics on the previous business day.\r\n  const getPrevStockInfo = async () => {\r\n    const prevInfo = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + formated_yesterday + '&end_date=&latest=/' + formated_yesterday, { mode: \"no-cors\" }\r\n    );\r\n    setPrevInfo(prevInfo.data.data);\r\n\r\n    var temp = JSON.stringify(prevInfo.data.data);\r\n    setData(temp);\r\n    setData(Data);\r\n  };\r\n\r\n  // Gets stock info for the charts.\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + time + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n    console.log(\"Getting Chart Data\");\r\n    console.log(priceAndDate.data);\r\n\r\n    var temp = JSON.stringify(priceAndDate.data.data);\r\n    setData(temp);\r\n    setData(Data);\r\n  }\r\n\r\n  // Gets articles pertaining to the stock.\r\n  const getArticles = async () => {\r\n    const res = await axios.get(\r\n      'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n    );\r\n    setArticles(res.data.data);\r\n    console.log(\"Getting News Articles\");\r\n    console.log(res); \r\n    setHidden(\"none\");\r\n    setShowing(\"block\"); \r\n    set_show_List(\"none\");\r\n    getStockInfo();\r\n    getchartInfo();\r\n    setStockName(stock);\r\n    oneYearHighAndLow();\r\n    MLForecast();\r\n  };\r\n\r\n  // Gets one year high and low.\r\n  const oneYearHighAndLow = async () => {\r\n    const HighAndLow = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + formated_yearAgo + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    console.log(HighAndLow.data);\r\n\r\n    var temp = HighAndLow.data.data[0].low\r\n    var temp2 = HighAndLow.data.data[0].high\r\n\r\n    for (let t = 1; t < HighAndLow.data.data.length; t++) {\r\n      if (HighAndLow.data.data[t].low < temp) {\r\n          temp = HighAndLow.data.data[t].low\r\n          //console.log(t);\r\n        }\r\n      if (HighAndLow.data.data[t].high > temp2) {\r\n          temp2 = HighAndLow.data.data[t].high\r\n      }\r\n    }\r\n\r\n    setYearLow(temp);\r\n    setYearHigh(temp2);\r\n  }\r\n\r\n    // Work in Progress\r\n    const MLForecast = async () => {\r\n      const forecast = await axios.get (\r\n        'https://doraboots99.herokuapp.com/tbapp/?stock=' + stock, { mode: \"no-cors\",  }\r\n      );\r\n      var temp = [];\r\n      var temp2;\r\n      var temp3;\r\n      var y1;\r\n      var y2;\r\n      \r\n      temp = forecast.data;\r\n      //console.log(temp);\r\n  \r\n      // Gets y1 and y2 for the Forecasting Chart\r\n      for (let i = temp.length; i > 0; i--) {\r\n        if (temp[i] == '[') {\r\n          temp2 = temp.slice(i + 1, temp.length);\r\n          i = 0;\r\n          for (let j = temp2.length; j > 0; j--) {\r\n            if (temp2[j] == ']') {\r\n              temp2 = temp2.slice(i, temp2.length - 1);\r\n              j = 0;\r\n            }\r\n  \r\n            for (let z = temp2.length; z > 0; z--) {\r\n              if (temp2[z] == ',') {\r\n                y2 = temp2.slice(z + 2, temp2.length - 1);\r\n                z = 0;\r\n              }\r\n            }\r\n  \r\n            for (let x = temp2.length; x > 0; x--) {\r\n              if (temp2[x] == '(') {\r\n                temp3 = temp2.slice(0 , x - 2)\r\n                x = 0;\r\n              }\r\n            }\r\n  \r\n            for (let y = temp3.length; y > 0; y--) {\r\n              if (temp3[y] == ',') {\r\n                y1 = temp3.slice(y + 2, temp3.length - 1);\r\n                y = 0;\r\n              }\r\n            }\r\n  \r\n          }\r\n        }\r\n      }  \r\n  \r\n      y2 = Number(y2);\r\n      y2 = Math.round((y2 + Number.EPSILON) * 100) / 100;\r\n  \r\n      //console.log('y2 = ' + y2);\r\n  \r\n      y1 = Number(y1);\r\n      y1 = Math.round((y1 + Number.EPSILON) * 100) / 100;\r\n  \r\n      //console.log('y1 = ' + y1);\r\n  \r\n      sety1(y1);\r\n      sety2(y2);\r\n    }\r\n  \r\n  // When the user clicks enter on the search bar, the check function is called to verify the stock code.\r\n  const enterKey = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault()\r\n      console.log(\"Enter Pressed from Products\")\r\n      /*getArticles();*/\r\n      checker();\r\n    }\r\n  };\r\n\r\n  // Updates chart data.\r\n  const updateChart = () => {\r\n    getchartInfo();\r\n  }\r\n\r\n  // When user clicks the month button, this calculates 1 months worth of chart data.\r\n  const month = () => {\r\n    console.log(\"Month called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Months ago's date: \" + formated_monthAgo)\r\n    setTime(formated_monthAgo); \r\n    setView(\"1 Month\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"1\")\r\n  }\r\n\r\n  // When user clicks the 3 month button, this calculates 3 months worth of chart data.\r\n  const threemonths = () => {\r\n    console.log(\"3 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Three months ago's date: \" + formated_threeMonthsAgo)\r\n    setTime(formated_threeMonthsAgo); \r\n    setView(\"3 Months\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"3\")\r\n  }\r\n\r\n  // When user clicks the 6 month button, this calculates 6 months worth of chart data.\r\n  const sixmonths = () => {\r\n    console.log(\"6 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Six months ago's date: \" + formated_sixMonthsAgo)\r\n    setTime(formated_sixMonthsAgo); \r\n    setView(\"6 Months\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"6\")\r\n  }\r\n\r\n  // When user clicks the 1 year button, this calculates 1 year worth of chart data.\r\n  const oneYear = (e) => {\r\n    console.log(\"1 Year called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Year ago's date: \" + formated_yearAgo)\r\n    setTime(formated_yearAgo); \r\n    setView(\"1 Year\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"12\")\r\n  }\r\n\r\n  // Initalizes the buttons for the news carusel.\r\n  let whirligig\r\n  const next = () => whirligig.next()\r\n  const prev = () => whirligig.prev()\r\n\r\n  // Fix to the double click issue. \r\n  useEffect(() => {\r\n    getArticles();\r\n  },\r\n  [stockName, fixClick]);\r\n\r\n  return (\r\n    <div id='products'>\r\n      \r\n      <div className=\"navBar-div\">\r\n    <Nav id =\"navBar\"\r\n        style={{ \r\n        height: '90px',\r\n        paddingTop: '0.5%',\r\n        paddingBottom: '0.5%',\r\n        backgroundImage: `url(${background})`,\r\n        backgroundCover: `cover`,\r\n        backgroundSize: '100% 100%',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor: '#000'\r\n        }}\r\n      >\r\n        <img id=\"logo\" src={Logo} />\r\n \r\n        <NavMenu id=\"menu\">\r\n\r\n        <NavLink id=\"link\" to='/index' activeStyle>\r\n          Home\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/products' activeStyle>\r\n          Products\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/about' activeStyle>\r\n          About Us\r\n        </NavLink>\r\n\r\n        <Form inline id=\"searchBar\">\r\n          <FormControl type=\"text\" autoComplete=\"off\"\r\n            id=\"searchBar\" placeholder=\"Use Stock Codes (e.g. AAPL)\"\r\n            onChange={stockChange} \r\n            onKeyPress={enterKey}\r\n        />\r\n\r\n          <Button id=\"searchButton\" \r\n            /*onClick={getArticles}>*/\r\n            onClick={checker}>\r\n              Search\r\n            </Button>\r\n        </Form>\r\n\r\n        </NavMenu>\r\n      </Nav>\r\n\r\n    </div>\r\n\r\n    <div style = {{\r\n          textAlign: \"center\",\r\n          background: \"#fff\",\r\n          paddingTop: \"0%\",\r\n          overflow: 'hidden',\r\n          border: '1px solid #fff',\r\n          borderLeft: 'none',\r\n          borderRight: 'none',\r\n          display: hideError\r\n        }}>\r\n          <h3 id='error-message'>Invalid Stock Code! Enter A Valid Stock Code!</h3>\r\n    </div>\r\n\r\n    <div \r\n      style ={{\r\n        justifyContent: 'center',\r\n        marginLeft: '5%',\r\n        marginRight: '5%',\r\n        marginBottom: '2%',\r\n        overflow: 'auto',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        display: show\r\n    }}> {/* Contains the stock charts, metrics, and stock news. */}\r\n        <button id=\"toggle\" onClick={viewList}>Back to List</button> {/* Button to view stock list. */}\r\n        <h1 style = {{\r\n          marginLeft: '10%'\r\n        }}> \r\n          {stockName} \r\n        </h1>\r\n        <h3 style = {{\r\n          marginLeft: '10%'\r\n        }} >View: {view}</h3>\r\n        <div id='time-Frames'style ={{\r\n          display: hideTimeFrames\r\n        }}> {/* Time frame buttons to view stock data */}\r\n          <button onClick={month}>\r\n            1 Month\r\n          </button> \r\n          <button onClick={threemonths}>\r\n            3 Months\r\n          </button> \r\n          <button onClick={sixmonths}>\r\n            6 Months\r\n          </button> \r\n          <button onClick={oneYear}>\r\n            1 Year\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{\r\n            display: toggleVolume,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n\r\n        {/* Volume Chart */}\r\n        <CanvasJSChart\r\n          options = { {\r\n            exportEnabled: true,\r\n            animationEnabled: true,\r\n            height: 450,\r\n            axisY: {\r\n              title: \"\",\r\n              prefix: \"\"\r\n            },\r\n            axisY: {\r\n              minimum: Math.min(...price.map(data => data.volume)) / 1.1,\r\n              maximum: Math.max(...price.map(data => data.volume)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              prefix: \"\",\r\n            },\r\n            axisX: {\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n            },\r\n            data: [{\r\n              type: \"area\",\r\n              yValueFormatString: \"\",\r\n              color: \"#2E2EFF\",\r\n              dataPoints : price.map(price => ({\r\n                x: new Date(price.date),\r\n                y: Number(price.volume)\r\n              }))\r\n            }],\r\n          \r\n              }\r\n            }\r\n          />\r\n          </div>\r\n\r\n          <div style={{\r\n            display: toggleLineAndCandle,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n            {/* Bar Chart is called from different file as both charts can't be initialized on the same page. */}\r\n          {stockInfo.map(({ symbol }) => (\r\n                <Line\r\n                  symbol={symbol}\r\n                  time={time}\r\n                  displayLineChart={linehide}\r\n                  displayCandleStickChart={candlehide}\r\n                  displayScatterChart={scatterhide}\r\n                  displayForecastingChart={forecasthide}\r\n                  y1={y1}\r\n                  y2={y2}\r\n                />\r\n          ))}\r\n          </div>\r\n\r\n          {/* Buttons to change charts */}\r\n          <div id='buttons'>\r\n          <button onClick={pressCandle/*viewCandle*/}\r\n            id=\"candlesticks-button\">Candlestick Chart\r\n          </button> \r\n          <button onClick={pressLine/*viewLine*/}\r\n            id=\"line-button\">Line Chart\r\n          </button> \r\n          <button onClick={pressVolume/*viewLine*/}\r\n            id=\"volumechart-button\" >Volume Based Chart\r\n          </button> \r\n          <button onClick={pressForecast}\r\n            id=\"forecasting-button\">\r\n            Stock Forecasting\r\n          </button>\r\n        </div>\r\n\r\n        <br></br>\r\n\r\n        {/* Current Stock metrics and previous business day metrics. */}\r\n        <div id=\"data\">\r\n          <div id=\"metrics\">\r\n          {\r\n          stockInfo.map(({ close, open, high, low, volume}) => (\r\n          <StockInformation\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n            yearlow={yearlow}\r\n            yearHigh={yearHigh}\r\n          />\r\n          ))}\r\n            {/*<h3>{test}</h3>*/}\r\n          </div>\r\n          <div id=\"metrics\">\r\n          {\r\n          prevStockInfo.map(({close, open, high, low, volume}) => (\r\n          <PreviousStockInfo\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n            formated_yesterday={formated_yesterday}\r\n          />\r\n          ))}\r\n            {/* \r\n            <h3>{dayName}</h3>\r\n            <h3>{test}</h3> \r\n            */}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Displays current stock name. */}\r\n        <div style = {{\r\n          marginLeft: '10%'\r\n        }}>\r\n          <h1>Recent News Articles: {stockName} </h1>\r\n        </div>\r\n\r\n        {/* Displays stock related news on a carousel. */}\r\n          <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <NewsItem\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n            {/* Slider buttons to scroll through the 25 stock news articles.  */}\r\n            <div className='buttons'>\r\n                <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                <button id='sliderbutton-next' onClick={next}>Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    <div id='list' style = {{\r\n      display: show_List,\r\n    }}>\r\n      <div id='products-title'>\r\n        <h1> Products </h1> \r\n      </div>\r\n\r\n      <Form inline id=\"productSearchBar\">\r\n        <FormControl type=\"text\" onChange={stockChange} id=\"productSearchBar\" \r\n        autoComplete=\"off\" placeholder=\"Use Stock Codes (e.g. AAPL)\" onKeyPress={enterKey}/>\r\n        <Button id=\"productSearchButton\" onClick={checker}>\r\n          Search\r\n        </Button>   \r\n      </Form>\r\n\r\n        <ul className='product-List'> \r\n          <li><button onClick={() => clickedStock(\"AAPL\")}><p>Apple</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"AMZN\")}><p>Amazon</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"AMC\")}><p>AMC Entertainement</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"AMD\")}><p>AMD</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"BA\")}><p>Boeing</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"KO\")}><p>Coca-Cola</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"COIN\")}><p>Coinbase</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"DIS\")}><p>Disney</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"GME\")}><p>Gamestop</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"MSFT\")}><p>Microsoft</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"MRNA\")}><p>Moderna</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NFLX\")}><p>Netflix</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NKE\")}><p>Nike</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NIO\")}><p>NIO</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NVDA\")}><p>NVDIA</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"RYCEY\")}><p>Rolls-Royce</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"LUV\")}><p>Southwest Airlines</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"SONY\")}><p>Sony</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"SBUX\")}><p>Starbucks</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"TSLA\")}><p>Tesla</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"TWTR\")}><p>Twitter</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"UBER\")}><p>Uber</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"WMT\")}><p>Walmart</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"ZM\")}><p>Zoom</p></button></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default Home;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Footer\\index.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\stockInformation.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\newsItem.js",["222","223","224"],"import React from \"react\";\r\n\r\nconst NewsItem = ({ title, news_url, image_url, text, date }) => {\r\n    return (\r\n        <div>\r\n            <a href={news_url} target=\"_blank\">\r\n                <img src={image_url} alt=\"New Image\" />\r\n            </a>\r\n            <h3>\r\n                <a href={news_url} target=\"_blank\">{title}</a>\r\n            </h3>\r\n            <p>{text}</p>\r\n            <p>{date}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsItem;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\index.js",["225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"import React, { useEffect, useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport './index.css'\r\nimport background from './Sky.jpg';\r\nimport DailyArticles from './dailyArticles';\r\nimport NewsItem from './newsItem';\r\nimport Line from './linechartv2';\r\nimport Candle from './candlechartv2';\r\nimport { Nav, NavLink, NavMenu} from '../components/Navbar/NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport StockInformation from './stockInformation';\r\nimport PreviousStockInfo from './previousStockInfo';\r\nimport axios from 'axios'; \r\n\r\nimport Logo from '../components/Navbar/TradeBreath.gif';\r\n\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\n\r\nconst Home = () => {\r\n  // States that will be changed as the website is used. \r\n  const [stockName, setStockName] = useState(\"\");\r\n  const [currentStock, setCurrent] = useState(\"\");\r\n  const [price, setPrice] = useState([]);\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [prevStockInfo, setPrevInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock] = useState(\"TSLA\");\r\n\r\n  const [Data, setData] = useState([]);\r\n  const [y1, sety1] = useState();\r\n  const [y2, sety2] = useState();\r\n\r\n  const [yearlow, setYearLow] = useState();\r\n  const [yearHigh, setYearHigh] = useState();\r\n\r\n  const [toggleLineAndCandle, setLineAndCandle] = useState(\"block\");\r\n  const [toggleVolume, setVolume] = useState(\"none\");\r\n\r\n  const [hidden, setHidden] = useState(\"block\");\r\n  const [hideButton, setHiddenButton] = useState(\"none\");\r\n  const [hideError, setHideError] = useState(\"none\");\r\n  const [hideTimeFrames, setHideTimeFrames] = useState(\"block\");\r\n  const [view, setView] = useState(\"3 Months\");\r\n\r\n  const [linehide, setHideLine] = useState(\"line\");\r\n  const [candlehide, setHideCandle] = useState(\"\");\r\n  const [scatterhide, setScatter] = useState(\"\");\r\n  const [forecasthide, setForecast] = useState(\"\");\r\n\r\n  const [fixClick, setFixClick] = useState(\"\")\r\n\r\n  /*Time Frames*/\r\n\r\n    // Sets up US business days and format of the dates.\r\n    var moment = require('moment-business-days');\r\n   \r\n    moment.updateLocale('us', {\r\n      holidayFormat: 'YYYY-MM-DD'\r\n    });\r\n\r\n    /* ----------Dates Calculation---------- */\r\n    const today = new Date(), // New todays date.\r\n\r\n    time_now = today.getHours() + ':' + today.getMinutes(); // Gets current hour.\r\n    var hour_now = Number(today.getHours());\r\n    var min_now = Number(today.getMinutes());\r\n\r\n    var todayDate = new Date() // Sets a new variable to get todays date.\r\n    todayDate.setDate(todayDate.getDate()) // Gets todays date.\r\n    var YYYY_today = todayDate.getFullYear(); // Gets curretn year.\r\n    var mm_today = String(todayDate.getMonth() + 1). padStart(2, '0') // Calculates curretn month.\r\n    var dd_today = String(todayDate.getDate()).padStart(2, '0') // Calculates current month.\r\n    var formated_today = YYYY_today + '-' + mm_today + '-' + dd_today // Formats date into the format the backend can read to retrieve date from the API.\r\n    // console.log(\"Today's date: \" + formated_today)\r\n    \r\n    var yesterday = new Date()\r\n    var time_regulator = 1;\r\n    yesterday.setDate(yesterday.getDate() - time_regulator);\r\n    var YYYY_yesterday = yesterday.getFullYear();\r\n    var mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n    var dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n    var formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n    var dayName = yesterday.toLocaleString(\"default\", { weekday: \"long\" });\r\n    var todaydayName = todayDate.toLocaleString(\"default\", { weekday: \"long\" });\r\n    // console.log(\"Yesterday's date: \" + formated_yesterday)\r\n    \r\n    var x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay() \r\n    // Checks if the variable formated_yesterday is a business day or not.\r\n    var wkend = 0; // Keeps track of non buswiness days.\r\n    var mon;\r\n    var test;\r\n\r\n    // Checks for the amount if business days over the past 7 days.\r\n    // This updates the previous busniess day and it's metrics that are requested from the backend.\r\n    for (let i = 0; i < 7; i++) {\r\n      if (x == false && todaydayName == \"Sunday\") {\r\n        //wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - 2);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n      }\r\n      if (x == false && todaydayName == \"Saturday\") {\r\n        //wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - 1);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n      }\r\n\r\n      if (x == false && todaydayName == \"Monday\") {\r\n        //wkend = wkend + 1;\r\n        yesterday.setDate(yesterday.getDate() - 3);\r\n        YYYY_yesterday = yesterday.getFullYear();\r\n        mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n        dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n        formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n        x = moment(formated_yesterday, 'YYYY-MM-DD').isBusinessDay();\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate() + 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate() + 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday past 6pm\"\r\n        }\r\n        else if (hour_now < 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday before 5:30pm\"\r\n        }\r\n      }\r\n\r\n      //\r\n      if (x == true && dayName == \"Monday\") {\r\n        if (hour_now == 17 ) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Tuesday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 3);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Tuesday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Tuesday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 3 /*- 1*/);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Tuesday before 5:30pm!\"\r\n        }\r\n      }\r\n      \r\n      if (x == true && dayName == \"Tuesday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Wednesday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Wednesday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Wednesday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Wednesday before 5:30pm\"\r\n        }\r\n      }\r\n      if (x == true && dayName == \"Wednesday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Thursday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Thursday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Thursday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Thursday before 5:30pm\"\r\n        }\r\n      }\r\n      if (x == true && dayName == \"Thursday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Friday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Friday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate());\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Friday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 1);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Friday before 5:30pm\"\r\n        }\r\n      }\r\n      if (x == true && dayName == \"Friday\") {\r\n        if (hour_now == 17 /*&& min_now >= 30 time_now >= '17:30'*/) {\r\n          if (min_now >= 30) {\r\n            yesterday.setDate(yesterday.getDate());\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday 5:30pm or past 5:30pm\"\r\n          }\r\n          else {\r\n            yesterday.setDate(yesterday.getDate() - 1);\r\n            YYYY_yesterday = yesterday.getFullYear();\r\n            mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n            dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n            formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n            i = 7;\r\n            test = \"It's Monday before 5:30pm\"\r\n          }\r\n        }\r\n        else if (hour_now > 17) {\r\n          yesterday.setDate(yesterday.getDate() - 3);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday past 6pm\"\r\n        }\r\n        else if (hour_now < 17 /*&& min_now < 30 time_now < '17:30'*/) {\r\n          yesterday.setDate(yesterday.getDate() - 5);\r\n          YYYY_yesterday = yesterday.getFullYear();\r\n          mm_yesterday = String(yesterday.getMonth() + 1). padStart(2, '0')\r\n          dd_yesterday = String(yesterday.getDate()).padStart(2, '0')\r\n          formated_yesterday = YYYY_yesterday + '-' + mm_yesterday + '-' + dd_yesterday\r\n          i = 7;\r\n          test = \"It's Monday before 5:30pm\"\r\n        }\r\n      }\r\n    } \r\n\r\n    var monthAgo = new Date();\r\n    monthAgo.setMonth(monthAgo.getMonth() - 1)\r\n    var YYYY_monthAgo = monthAgo.getFullYear();\r\n    var mm_monthAgo = String(monthAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_monthAgo = String(monthAgo.getDate()).padStart(2, '0')\r\n    var formated_monthAgo = YYYY_monthAgo + '-' + mm_monthAgo + '-' + dd_monthAgo\r\n    // console.log(\"Month ago's date: \" + formated_monthAgo)\r\n\r\n    var threeMonthsAgo = new Date();\r\n    threeMonthsAgo.setMonth(threeMonthsAgo.getMonth() - 3)\r\n    var YYYY_threeMonthsAgo = threeMonthsAgo.getFullYear();\r\n    var mm_threeMonthsAgo = String(threeMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_threeMonthsAgo = String(threeMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_threeMonthsAgo = YYYY_threeMonthsAgo + '-' + mm_threeMonthsAgo + '-' + dd_threeMonthsAgo\r\n    // console.log(\"Three month ago's date: \" + formated_threeMonthsAgo)\r\n\r\n    var sixMonthsAgo = new Date();\r\n    sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6)\r\n    var YYYY_sixMonthsAgo = sixMonthsAgo.getFullYear();\r\n    var mm_sixMonthsAgo = String(sixMonthsAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_sixMonthsAgo = String(sixMonthsAgo.getDate()).padStart(2, '0')\r\n    var formated_sixMonthsAgo = YYYY_sixMonthsAgo + '-' + mm_sixMonthsAgo + '-' + dd_sixMonthsAgo\r\n    // console.log(\"Six month ago's date: \" + formated_sixMonthsAgo)\r\n\r\n    var yearAgo = new Date();\r\n    yearAgo.setMonth(yearAgo.getMonth() -12)\r\n    /*console.log(\"Year ago's date\" + yearAgo)*/\r\n    var YYYY_yearAgo = yearAgo.getFullYear();\r\n    var mm_yearAgo = String(yearAgo.getMonth() + 1). padStart(2, '0')\r\n    var dd_yearAgo = String(yearAgo.getDate()).padStart(2, '0')\r\n    var formated_yearAgo = YYYY_yearAgo + '-' + mm_yearAgo + '-' + dd_yearAgo\r\n    // console.log(\"Year ago's date: \" + formated_yearAgo)\r\n\r\n  const initialTime = formated_threeMonthsAgo; // Sets 3 months ago as inital time frame to view stock data.\r\n\r\n  const [time, setTime] = useState(initialTime); \r\n  \r\n  function stockChange(event){ // Sets all inputs to uppercase\r\n    setStock(event.target.value.toUpperCase());\r\n  } \r\n\r\n  let viewVolumeChart = () => { // If the user presses the ViewCandle button, then it will hide the line chart.\r\n    setVolume(\"block\");\r\n    setLineAndCandle(\"none\");\r\n    setHideTimeFrames(\"block\");\r\n  }\r\n\r\n  let viewLineAndCandleChart = () => { // If the user presses the Line Chart button, then the candlestick chart will be hidden.\r\n    setLineAndCandle(\"block\");\r\n    setVolume(\"none\");\r\n  }\r\n\r\n  let pressCandle = () => { // If the user presses the ViewCandle button, then it will hide the line chart.\r\n    setHideLine(\"\");\r\n    setScatter(\"\");\r\n    setForecast(\"\");\r\n    setHideCandle(\"candlestick\");\r\n    setHideTimeFrames(\"block\");\r\n    viewLineAndCandleChart();\r\n  }\r\n\r\n  let pressLine = () => { // If the user presses the Line Chart button, then the candlestick chart will be hidden.\r\n    setHideCandle(\"\");\r\n    setScatter(\"\");\r\n    setForecast(\"\");\r\n    setHideLine(\"line\");\r\n    setHideTimeFrames(\"block\");\r\n    viewLineAndCandleChart();\r\n  }\r\n\r\n  let pressForecast = () => { // If the user presses the Forecast Chart button, other charts will be hidden along with time frame buttons.\r\n    oneYear();\r\n    setHideTimeFrames(\"none\");\r\n    setVolume(\"none\");\r\n    setLineAndCandle(\"block\");\r\n    setHideCandle(\"\");\r\n    setHideLine(\"\");\r\n    setScatter(\"scatter\");\r\n    setForecast(\"line\");\r\n  }\r\n\r\n  let pressVolume = () => { // If the user press the Volume Chart, other charts will be hidden.\r\n    viewVolumeChart();\r\n  }\r\n\r\n  let viewNews= () => { // If the user inputs a stock name, the overall news will be hidden to focus on the stock.\r\n    setHidden(\"block\");\r\n    setHiddenButton(\"none\");\r\n  }\r\n\r\n  // Checks if the stock code inputted by user exsits, if not an error message will appear. If it does it will retrieve stock data.\r\n  const checker = async () => {\r\n      const response = await axios.get('https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy')\r\n      console.log(stock);\r\n      if (response.data.data.length === 0) {\r\n        console.log(\"No data recieved\")\r\n        console.log(\"Invalid Stock Code: \" + stock);\r\n        setHideError(\"block\");\r\n        setStock(currentStock);\r\n      }\r\n      else {\r\n        console.log(\"Data recieved\")\r\n        console.log(\"Valid Stock Code: \" + stock);\r\n        setCurrent(stock);\r\n        setHideError(\"none\");\r\n        setHiddenButton(\"block\");\r\n        getArticles();\r\n      }\r\n  }\r\n\r\n  // Used to get inital data for the stock Tesla when the page is loaded.\r\n  useEffect(() => {\r\n    \r\n    setCurrent(stock);\r\n    const getArticles2 = async () => {\r\n      const res = await axios.get(\r\n        'https://stocknewsapi.com/api/v1?tickers=TSLA&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n      );\r\n      setArticles(res.data.data);\r\n      console.log(\"Getting News Articles\");\r\n      console.log(res);\r\n      getStockInfo();\r\n      //getchartInfo();\r\n      setStockName(stock);\r\n      oneYearHighAndLow();\r\n      MLForecast();\r\n    };\r\n    getArticles2();\r\n    \r\n  },\r\n  [null]);\r\n\r\n  // Retrieves stock metrics\r\n  const getStockInfo = async () => {\r\n    const info = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=2021-10-11&end_date=&latest=/latest', { mode: \"no-cors\" }\r\n    );\r\n    setStockInfo(info.data.data);\r\n    getPrevStockInfo();\r\n\r\n    var temp = JSON.stringify(info.data.data);\r\n    setData(temp);\r\n    setData(Data);\r\n  };\r\n\r\n  // Retireves stock metrics on the previous business day.\r\n  const getPrevStockInfo = async () => {\r\n    const prevInfo = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + formated_yesterday + '&end_date=&latest=/' + formated_yesterday, { mode: \"no-cors\" }\r\n    );\r\n    setPrevInfo(prevInfo.data.data);\r\n\r\n    var temp = JSON.stringify(prevInfo.data.data);\r\n    setData(temp);\r\n    setData(Data);\r\n  };\r\n\r\n  // Gets stock info for the charts.\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + time + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n      );\r\n    setPrice(priceAndDate.data.data);\r\n    console.log(\"Getting Chart Data\");\r\n    console.log(priceAndDate.data);\r\n\r\n    var temp = JSON.stringify(priceAndDate.data.data);\r\n    setData(temp);\r\n    setData(Data);\r\n  }\r\n\r\n  // Gets articles pertaining to the stock.\r\n  const getArticles = async () => {\r\n    const res = await axios.get(\r\n      'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n    );\r\n    setArticles(res.data.data);\r\n    setHidden(\"none\");\r\n    console.log(\"Getting News Articles\");\r\n    console.log(res); \r\n    getStockInfo();\r\n    getchartInfo();\r\n    setStockName(stock);\r\n    oneYearHighAndLow();\r\n    MLForecast();\r\n  };\r\n\r\n  // Gets one year high and low. \r\n  const oneYearHighAndLow = async () => {\r\n    const HighAndLow = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=' + formated_yearAgo + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    //console.log(HighAndLow.data);\r\n\r\n    var temp = HighAndLow.data.data[0].low\r\n    var temp2 = HighAndLow.data.data[0].high\r\n\r\n    for (let t = 1; t < HighAndLow.data.data.length; t++) {\r\n      if (HighAndLow.data.data[t].low < temp) {\r\n          temp = HighAndLow.data.data[t].low\r\n        }\r\n      if (HighAndLow.data.data[t].high > temp2) {\r\n          temp2 = HighAndLow.data.data[t].high\r\n      }\r\n    }\r\n\r\n    setYearLow(temp);\r\n    setYearHigh(temp2);\r\n  }\r\n\r\n  // Will send currert Stock to backend and will get Forecasting data\r\n  const MLForecast = async () => {\r\n    const forecast = await axios.get (\r\n      'https://doraboots99.herokuapp.com/tbapp/?stock=' + stock, { mode: \"no-cors\",  }\r\n    );\r\n    var temp = [];\r\n    var temp2;\r\n    var temp3;\r\n    var y1;\r\n    var y2;\r\n    \r\n    temp = forecast.data;\r\n    //console.log(temp);\r\n\r\n    // Gets y1 and y2 for the Forecasting Chart\r\n    for (let i = temp.length; i > 0; i--) {\r\n      if (temp[i] == '[') {\r\n        temp2 = temp.slice(i + 1, temp.length);\r\n        i = 0;\r\n        for (let j = temp2.length; j > 0; j--) {\r\n          if (temp2[j] == ']') {\r\n            temp2 = temp2.slice(i, temp2.length - 1);\r\n            j = 0;\r\n          }\r\n\r\n          for (let z = temp2.length; z > 0; z--) {\r\n            if (temp2[z] == ',') {\r\n              y2 = temp2.slice(z + 2, temp2.length - 1);\r\n              z = 0;\r\n            }\r\n          }\r\n\r\n          for (let x = temp2.length; x > 0; x--) {\r\n            if (temp2[x] == '(') {\r\n              temp3 = temp2.slice(0 , x - 2)\r\n              x = 0;\r\n            }\r\n          }\r\n\r\n          for (let y = temp3.length; y > 0; y--) {\r\n            if (temp3[y] == ',') {\r\n              y1 = temp3.slice(y + 2, temp3.length - 1);\r\n              y = 0;\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    }  \r\n\r\n    y2 = Number(y2);\r\n    y2 = Math.round((y2 + Number.EPSILON) * 100) / 100;\r\n\r\n    //console.log('y2 = ' + y2);\r\n\r\n    y1 = Number(y1);\r\n    y1 = Math.round((y1 + Number.EPSILON) * 100) / 100;\r\n\r\n    //console.log('y1 = ' + y1);\r\n\r\n    sety1(y1);\r\n    sety2(y2);\r\n  }\r\n\r\n  // If the user wants to see general news, they can press this button to make it appear.\r\n  const back2Home = () => {\r\n    setHidden(\"block\");\r\n  }\r\n\r\n  // When the user clicks enter on the search bar, the check function is called to verify the stock code.\r\n  const enterKey = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault()\r\n      console.log(\"Enter Pressed from Home\")\r\n      checker();\r\n    }\r\n  };\r\n\r\n  // Updates chart data.\r\n  const updateChart = () => {\r\n    getchartInfo();\r\n  }\r\n\r\n  // When user clicks the month button, this calculates 1 months worth of chart data.\r\n  const month = () => {\r\n    console.log(\"Month called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Months ago's date: \" + formated_monthAgo)\r\n    setTime(formated_monthAgo); \r\n    setView(\"1 Month\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"1\");\r\n  }\r\n\r\n  // When user clicks the 3 month button, this calculates 3 months worth of chart data.\r\n  const threemonths = () => {\r\n    console.log(\"3 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Three months ago's date: \" + formated_threeMonthsAgo)\r\n    setTime(formated_threeMonthsAgo); \r\n    setView(\"3 Months\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"3\")\r\n  }\r\n\r\n  // When user clicks the 6 month button, this calculates 6 months worth of chart data.\r\n  const sixmonths = () => {\r\n    console.log(\"6 Months called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Six months ago's date: \" + formated_sixMonthsAgo)\r\n    setTime(formated_sixMonthsAgo); \r\n    setView(\"6 Months\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"6\")\r\n  }\r\n\r\n  // When user clicks the 1 year button, this calculates 1 year worth of chart data.\r\n  const oneYear = () => {\r\n    console.log(\"1 Year called\");\r\n    console.log(\"Today's date: \" + formated_today)\r\n    console.log(\"Year ago's date: \" + formated_yearAgo)\r\n    setTime(formated_yearAgo); \r\n    setView(\"1 Year\");\r\n    /*Format YYYY-MM-DD*/\r\n    setFixClick(\"12\")\r\n  }\r\n\r\n  // Initalizes the buttons for the news carusel.\r\n  let whirligig\r\n  const next = () => whirligig.next()\r\n  const prev = () => whirligig.prev()\r\n\r\n    // Fix to the double click issue. \r\n    useEffect(() => {\r\n      getchartInfo();\r\n    },\r\n    [fixClick]);\r\n\r\n  return (\r\n    <div id='content'>\r\n\r\n      <div id='background'\r\n      style={{ \r\n        backgroundImage: `url(${background})`,\r\n        backgroundCover: `cover`,\r\n        backgroundSize: '100% 100%',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor: '#000'\r\n      }}>\r\n\r\n        <div className=\"navBar-div\">\r\n          <Nav id =\"navBar\"\r\n            style={{ \r\n            backgroundImage: `url(${background})`,\r\n            backgroundCover: `cover`,\r\n            backgroundSize: '100% 100%',\r\n            backgroundAttachment: 'fixed',\r\n            backgroundRepeat: 'no-repeat',\r\n            height: '90px',\r\n            paddingTop: '0.5%',\r\n            paddingBottom: '0.5%'\r\n          }}\r\n        >\r\n          <img id=\"logo\" src={Logo} />\r\n \r\n          <NavMenu id=\"menu\">\r\n\r\n          <NavLink id=\"link\" to='/index' onClick={back2Home} activeStyle>\r\n            Home\r\n          </NavLink>\r\n          <NavLink id=\"link\" to='/products' activeStyle>\r\n            Products\r\n          </NavLink>\r\n          <NavLink id=\"link\" to='/about' activeStyle>\r\n            About Us\r\n          </NavLink>\r\n\r\n          <Form inline id=\"searchBar\">\r\n              <FormControl type=\"text\" autoComplete=\"off\"\r\n              id=\"searchBar\" placeholder=\"Use Stock Codes (e.g. AAPL)\"\r\n              /* value={inputValue} */\r\n               onChange={stockChange} \r\n               onKeyPress={enterKey}\r\n          />\r\n\r\n            <Button id=\"searchButton\" \r\n              /*onClick={getArticles}>*/\r\n              onClick={checker}>\r\n              Search \r\n            </Button>\r\n          </Form>\r\n\r\n          </NavMenu>\r\n        </Nav>\r\n\r\n        </div>\r\n        \r\n        <div style = {{\r\n          textAlign: \"center\",\r\n          background: \"#fff\",\r\n          paddingTop: \"0%\",\r\n          overflow: 'hidden',\r\n          border: '1px solid #fff',\r\n          borderLeft: 'none',\r\n          borderRight: 'none',\r\n          display: hideError\r\n        }}>\r\n          <h3 id='error-message'>Invalid Stock Code! Enter A Valid Stock Code!</h3>\r\n        </div>\r\n\r\n        <div id='statement-and-articles'\r\n        style={{\r\n          paddingTop: '8%',\r\n          paddingBottom: '2%',\r\n          overflow: 'hidden',\r\n          display: hidden,\r\n          height: '100%'\r\n        }}>\r\n          <div id='statement'>\r\n            <h1>Our mission is to let <br/> you invest safely</h1>\r\n          </div>\r\n\r\n          <hr style={{\r\n            marginLeft: '0%',\r\n            marginRight: '0%'\r\n          }}></hr>\r\n\r\n          <div id='newsArticles'>\r\n            <div className='daily-News'>\r\n              <DailyArticles></DailyArticles>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n        \r\n    <div id='chart-div'> {/* Contains the stock charts, metrics, and stock news. */}\r\n      <button id=\"toggle\" style = {{\r\n        display: hideButton\r\n      }} \r\n      onClick={viewNews}>Back to News</button> {/* Button to view general news. */}\r\n      <div id='chart-container'>\r\n        <h1> {stockName} </h1>\r\n        <h3 style = {{\r\n          marginLeft: '10%'\r\n        }} >View: {view}</h3>\r\n        <div id='time-Frames' style = {{\r\n          display: hideTimeFrames\r\n        }}> {/* Time frame buttons to view stock data */}\r\n          <button onClick={month}>\r\n            1 Month\r\n          </button> \r\n          <button onClick={threemonths}>\r\n            3 Months\r\n          </button> \r\n          <button onClick={sixmonths}>\r\n            6 Months\r\n          </button> \r\n          <button onClick={oneYear}>\r\n            1 Year\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{\r\n            display: toggleVolume,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n        \r\n        {/* Volume Chart */}\r\n        <div>\r\n        <CanvasJSChart\r\n          options = { {\r\n            exportEnabled: true,\r\n            animationEnabled: true,\r\n            height: 450,\r\n            axisY: {\r\n              title: \"\",\r\n              prefix: \"\"\r\n            },\r\n            axisY: {\r\n              minimum: Math.min(...price.map(data => data.volume)) / 1.1,\r\n              maximum: Math.max(...price.map(data => data.volume)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              prefix: \"\",\r\n            },\r\n            axisX: {\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n            },\r\n            data: [{\r\n              type: \"area\",\r\n              yValueFormatString: \"\",\r\n              color: \"#2E2EFF\",\r\n              dataPoints : price.map(price => ({\r\n                x: new Date(price.date),\r\n                y: Number(price.volume)\r\n              }))\r\n            }],\r\n            \r\n          }\r\n            }\r\n          />\r\n          </div>\r\n          </div>\r\n\r\n          <div style={{\r\n            display: toggleLineAndCandle,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n\r\n          {/* Bar Chart is called from different file as both charts can't be initialized on the same page. */}\r\n          {stockInfo.map(({ symbol }) => (\r\n                <Line\r\n                  symbol={symbol}\r\n                  time={time}\r\n                  displayLineChart={linehide}\r\n                  displayCandleStickChart={candlehide}\r\n                  displayScatterChart={scatterhide}\r\n                  displayForecastingChart={forecasthide}\r\n                  y1={y1}\r\n                  y2={y2}\r\n                />\r\n          ))}\r\n          \r\n          </div>\r\n\r\n          {/* Buttons to change charts */}\r\n          <div id='buttons'>\r\n          <button onClick={pressCandle}\r\n            id=\"candlesticks-button\">Candlestick Chart\r\n          </button> \r\n          <button onClick={pressLine}\r\n            id=\"line-button\">Line Chart\r\n          </button> \r\n          <button onClick={pressVolume}\r\n            id=\"volumechart-button\" >Volume Based Chart\r\n          </button> \r\n          <button onClick={pressForecast}\r\n            id=\"forecasting-button\">\r\n            Stock Forecasting\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n      <div id='chart-div'>\r\n        \r\n        <br></br>\r\n\r\n        {/* Current Stock metrics and previous business day metrics. */}\r\n        <div id=\"data\">\r\n          <div id=\"metrics\">\r\n          {\r\n          stockInfo.map(({ close, open, high, low, volume}) => (\r\n          <StockInformation\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n            yearlow={yearlow}\r\n            yearHigh={yearHigh}\r\n          />\r\n          ))}\r\n          </div>\r\n          <div id=\"metrics\">\r\n          {\r\n          prevStockInfo.map(({close, open, high, low, volume}) => (\r\n          <PreviousStockInfo\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n            formated_yesterday={formated_yesterday}\r\n          />\r\n          ))}\r\n          { \r\n            //<h3>{test}</h3>\r\n           //<h3>{testData}</h3>\r\n          }\r\n          </div>\r\n        </div>\r\n\r\n        {/* Displays current stock name. */}\r\n        <div id='product-article-title'>\r\n          <h1>Recent News Articles: {stockName} </h1>\r\n        </div>\r\n\r\n        {/* Displays stock related news on a carousel. */}\r\n          <div id='product-article'>\r\n            <Whirligig id ='product-news-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <NewsItem\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n\r\n            {/* Slider buttons to scroll through the 25 stock news articles.  */}\r\n            <div className='buttons'>\r\n              <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n              <button id='sliderbutton-next' onClick={next}>Next</button>\r\n            </div>\r\n\r\n          </div>\r\n      </div>\r\n              \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Navbar\\NavbarElements.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\previousStockInfo.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\linechartv2.js",["296","297"],"import React, { useEffect, useState } from 'react';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\nimport axios from 'axios'; \r\n\r\nconst Line = ({ symbol, time, volume, displayLineChart, displayCandleStickChart, displayScatterChart, displayForecastingChart, y1, y2}) => {\r\n\r\n  const [price, setPrice] = useState([]);\r\n  const [stock, setStock]= useState('');\r\n  const [timeframe, setTime] = useState('');\r\n  const [lineChart, setlinechart] = useState('');\r\n  const [candlestickChart, setcandlestick] = useState('');\r\n  const [scatterChart, setscatter] = useState('');\r\n  const [forecastChart, setForecast] = useState('');\r\n\r\n  const [y1_Forecast, sety1_Forecast] = useState(0);\r\n  const [y2_Forecast, sety2_Forecast] = useState(0);\r\n  const [date1YAgo, setdate1YAgo] = useState([]);\r\n  const [dateRecent, setdateRecent] = useState([]);\r\n\r\n  // const [volume, setVolume] = useState([])\r\n  var vol = [];\r\n\r\n  useEffect(() => {\r\n    if(stock !== symbol ) {\r\n      getchartInfo()\r\n      setTime(time)\r\n      setStock(symbol)\r\n    }\r\n    \r\n    else if(timeframe !== time) {\r\n      getchartInfo()\r\n      setTime(time)\r\n    }\r\n\r\n    if(lineChart !== displayLineChart) {\r\n      setlinechart(lineChart);\r\n    }\r\n\r\n    if(candlestickChart !== displayCandleStickChart) {\r\n      setcandlestick(candlestickChart);\r\n    }\r\n\r\n    if(scatterChart !== displayScatterChart) {\r\n      setscatter(scatterChart);\r\n    }\r\n\r\n    if(forecastChart !== displayForecastingChart) {\r\n      setForecast(displayForecastingChart);\r\n    }\r\n\r\n    if(y1_Forecast !== y1) {\r\n      sety1_Forecast(y1);\r\n      sety2_Forecast(y2);\r\n    }\r\n\r\n    if(y2_Forecast !== y2) {\r\n      sety1_Forecast(y1);\r\n      sety2_Forecast(y2);\r\n    }\r\n  });\r\n\r\n    // Getting chart information. \r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + symbol + '&interval=Day&start_date=' + time + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    console.log(\"LineChart called\");\r\n    console.log(stock);\r\n    setPrice(priceAndDate.data.data);\r\n\r\n    setdate1YAgo(priceAndDate.data.data[priceAndDate.data.data.length - 1].date);\r\n    setdateRecent(priceAndDate.data.data[0].date);\r\n\r\n    //console.log(priceAndDate.data.data[priceAndDate.data.data.length - 1].date);\r\n    //console.log(priceAndDate.data.data[0].date);\r\n    \r\n  }\r\n\r\n  return ( \r\n      <div>\r\n          <CanvasJSChart id='line'\r\n            options = {\r\n            {\r\n              theme: \"light1\",\r\n              exportEnabled: true,\r\n              animationEnabled: true,\r\n              height: 450,\r\n              axisY: {\r\n                // Minimum and Maximum value is +- 10% to display the graph slightly bigger.\r\n                minimum: Math.min(...price.map(data => data.low)) / 1.1,\r\n                maximum: Math.max(...price.map(data => data.high)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n                prefix: \"$\",\r\n              },\r\n              axisX: {\r\n                crosshair: {\r\n                    enabled: true,\r\n                    snapToDataPoint: true\r\n              },\r\n              scaleBreaks: {\r\n                spacing: 0,\r\n                lineThickness: 0,\r\n                customBreaks: price.reduce((breaks, value, index, array) => {\r\n                  if (index === 0) return breaks;\r\n                  \r\n                  // Getting time\r\n                  const currentDataPointUnix = Number(new Date(value.date));\r\n                  const previousDataPointUnix = Number(new Date(array[index - 1].date));\r\n\r\n                  // Converting a day to ms. \r\n                  const oneDayInMs = 86400000;\r\n\r\n                  // Calculating the difference. \r\n                  const difference = previousDataPointUnix - currentDataPointUnix;\r\n\r\n                  return difference === oneDayInMs\r\n                      // If the difference is 1 day, scale break is not needed. \r\n                      ? breaks\r\n\r\n                      // If more than 1, create a new scale break. \r\n                      : [\r\n                          ...breaks,\r\n                          {\r\n                              startValue: currentDataPointUnix,\r\n                              endValue: previousDataPointUnix - oneDayInMs\r\n                          }\r\n                      ]\r\n                }, [])\r\n              }\r\n            },\r\n              data: [\r\n              {        \r\n                type: displayCandleStickChart,//'candlestick',\r\n                risingColor: \"green\",\r\n                fillOpacity: .3,\r\n                fallingColor: \"#E40A0A\",\r\n                dataPoints: price.map(price => ({\r\n                    x: new Date(price.date),\r\n                    y: [\r\n                      price.open,\r\n                      price.high,\r\n                      price.low,\r\n                      price.close\r\n                  ]\r\n                }))\r\n              },\r\n              {\r\n                type: displayLineChart, //\"line\",\r\n                yValueFormatString: \"$#,###.##\",\r\n                fillOpacity: .3,\r\n                color: \"blue\",\r\n                dataPoints : price.map(price => ({\r\n                x: new Date(price.date),\r\n                y: Number(price.close)\r\n                }))\r\n              },\r\n              {\r\n                type: displayScatterChart, //\"line\",\r\n                yValueFormatString: \"$#,###.##\",\r\n                fillOpacity: .3,\r\n                color: \"blue\",\r\n                dataPoints : price.map(price => ({\r\n                x: new Date(price.date),\r\n                y: Number(price.close)\r\n                }))\r\n              },\r\n              {\r\n                type: forecastChart, //\"line\",\r\n                yValueFormatString: \"$#,###.##\",\r\n                fillOpacity: .3,\r\n                color: \"red\",\r\n                dataPoints : [\r\n                  {x: new Date(date1YAgo), y: y1},\r\n                  {x: new Date(dateRecent), y: y2}\r\n                ]\r\n              }\r\n                \r\n              ]\r\n            }\r\n          }\r\n          />\r\n      </div> \r\n    );\r\n};\r\n\r\nexport default Line;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\dailyArticles.js",["298","299"],"import React, { useEffect, useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport NewsItem from './newsItem';\r\nimport TopNews from './topNews';\r\nimport axios from 'axios'; \r\n\r\nconst DailyArticles = () => {\r\n\r\n    const [articles, setArticles] = useState([]);\r\n    \r\n    useEffect(() => {\r\n      // Getting articles. \r\n        const getArticles = async () => {\r\n          const res = await axios.get(\r\n            'https://stocknewsapi.com/api/v1/category?section=general&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n          );\r\n          setArticles(res.data.data);\r\n        };\r\n        getArticles();\r\n      },\r\n    [null]);\r\n\r\n    let whirligig\r\n    const next = () => whirligig.next()\r\n    const prev = () => whirligig.prev()\r\n\r\n    return (\r\n        <div style={{\r\n          \r\n        }}>\r\n            <div id='article-title'>\r\n                <h1>Top News Articles: </h1>\r\n                \r\n            </div>\r\n\r\n            <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <TopNews\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n                <div className='buttons'>\r\n                    <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                    <button id='sliderbutton-next' onClick={next}>Next</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyArticles;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\candlechartv2.js",["300","301","302","303","304"],"import React, { useEffect, useState } from 'react';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\nimport axios from 'axios'; \r\n\r\nconst Candle = ({ symbol, time }) => {\r\n\r\n  const [price, setPrice] = useState([]);\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState('');\r\n  const [timeframe, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(stock !== symbol ) {\r\n      getchartInfo()\r\n      setTime(time)\r\n      setStock(symbol)\r\n    }\r\n    \r\n    else if(timeframe !== time) {\r\n      getchartInfo()\r\n      setTime(time)\r\n    }\r\n    \r\n    \r\n  });\r\n\r\n  // Getting chart information. \r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      /*'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + symbol + '&interval=Day&start_date=2020-10-30&end_date=&latest=', { mode: \"no-cors\" }*/\r\n      'https://young-harbor33717.herokuapp.com/tbapp/?stock=' + symbol + '&interval=Day&start_date=' + time + '&end_date=&latest=', { mode: \"no-cors\",  }\r\n    );\r\n    console.log(\"CandleChart called\");\r\n    console.log(stock);\r\n    setPrice(priceAndDate.data.data);\r\n\r\n    // console.log(time);\r\n  }\r\n\r\n  return ( \r\n      <div>\r\n          <CanvasJSChart\r\n          options = { {\r\n            theme: \"light1\",\r\n            exportEnabled: true,\r\n            animationEnabled: true,\r\n            height: 450,\r\n            axisY: {\r\n              // Minimum and Maximum value is +- 10% to display the graph slightly bigger.\r\n              minimum: Math.min(...price.map(data => data.low)) / 1.1,\r\n              maximum: Math.max(...price.map(data => data.high)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              prefix: \"$\",\r\n            },\r\n            axisX: {\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              scaleBreaks: {\r\n                spacing: 0,\r\n                fillOpacity: 0,\r\n                lineThickness: 0,\r\n                customBreaks: price.reduce((breaks, value, index, array) => {\r\n                    if (index === 0) return breaks;\r\n\r\n                    // Getting time\r\n                    const currentDataPointUnix = Number(new Date(value.date));\r\n                    const previousDataPointUnix = Number(new Date(array[index - 1].date));\r\n\r\n                    // Converting a day to ms. \r\n                    const oneDayInMs = 86400000;\r\n\r\n                    // Calculating the difference. \r\n                    const difference = previousDataPointUnix - currentDataPointUnix;\r\n\r\n                    return difference === oneDayInMs\r\n                    // If the difference is 1 day, scale break is not needed. \r\n                        ? breaks\r\n\r\n                        // If more than 1, create a new scale break. \r\n                        : [\r\n                            ...breaks,\r\n                            {\r\n                                startValue: currentDataPointUnix,\r\n                                endValue: previousDataPointUnix - oneDayInMs\r\n                            }\r\n                        ]\r\n                  }, [])\r\n                }\r\n              },\r\n                data: [{\r\n                  type: 'candlestick',\r\n                  risingColor: \"green\",\r\n                  fallingColor: \"#E40A0A\",\r\n                  dataPoints: price.map(price => ({\r\n                      x: new Date(price.date),\r\n                      y: [\r\n                        price.open,\r\n                        price.high,\r\n                        price.low,\r\n                        price.close\r\n                    ]\r\n                  }))\r\n                }],\r\n          \r\n              }\r\n            }\r\n          />\r\n      </div> \r\n    );\r\n};\r\n\r\nexport default Candle;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\topNews.js",["305","306","307"],"import React from \"react\";\r\nimport './topNews.css'\r\n\r\nconst TopNews = ({ title, news_url, image_url, text, date }) => {\r\n    return (\r\n    <div className='text-background'>\r\n        <div className=\"topNews-articles\">\r\n            <a href={news_url} target=\"_blank\">\r\n                <img src={image_url} alt=\"New Image\" />\r\n            </a>\r\n            <h3>\r\n                <a href={news_url} target=\"_blank\">{title}</a>\r\n            </h3>\r\n            <p>{text}</p>\r\n            <p>{date}</p>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default TopNews;",{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","severity":1,"message":"313","line":3,"column":17,"nodeType":"314","messageId":"315","endLine":3,"endColumn":26},{"ruleId":"312","severity":1,"message":"316","line":11,"column":17,"nodeType":"314","messageId":"315","endLine":11,"endColumn":22},{"ruleId":"312","severity":1,"message":"317","line":67,"column":5,"nodeType":"314","messageId":"315","endLine":67,"endColumn":13},{"ruleId":"318","severity":1,"message":"319","line":74,"column":20,"nodeType":"320","messageId":"321","endLine":74,"endColumn":62,"fix":"322"},{"ruleId":"318","severity":1,"message":"319","line":83,"column":24,"nodeType":"320","messageId":"321","endLine":83,"endColumn":66,"fix":"323"},{"ruleId":"312","severity":1,"message":"324","line":92,"column":9,"nodeType":"314","messageId":"315","endLine":92,"endColumn":14},{"ruleId":"312","severity":1,"message":"325","line":93,"column":9,"nodeType":"314","messageId":"315","endLine":93,"endColumn":12},{"ruleId":"326","severity":1,"message":"327","line":99,"column":13,"nodeType":"328","messageId":"329","endLine":99,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":99,"column":38,"nodeType":"328","messageId":"329","endLine":99,"endColumn":40},{"ruleId":"318","severity":1,"message":"319","line":103,"column":24,"nodeType":"320","messageId":"321","endLine":103,"endColumn":66,"fix":"330"},{"ruleId":"326","severity":1,"message":"327","line":108,"column":13,"nodeType":"328","messageId":"329","endLine":108,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":108,"column":38,"nodeType":"328","messageId":"329","endLine":108,"endColumn":40},{"ruleId":"318","severity":1,"message":"319","line":112,"column":24,"nodeType":"320","messageId":"321","endLine":112,"endColumn":66,"fix":"331"},{"ruleId":"326","severity":1,"message":"327","line":118,"column":13,"nodeType":"328","messageId":"329","endLine":118,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":118,"column":38,"nodeType":"328","messageId":"329","endLine":118,"endColumn":40},{"ruleId":"318","severity":1,"message":"319","line":122,"column":24,"nodeType":"320","messageId":"321","endLine":122,"endColumn":66,"fix":"332"},{"ruleId":"326","severity":1,"message":"327","line":126,"column":22,"nodeType":"328","messageId":"329","endLine":126,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":130,"column":28,"nodeType":"320","messageId":"321","endLine":130,"endColumn":70,"fix":"333"},{"ruleId":"318","severity":1,"message":"319","line":139,"column":28,"nodeType":"320","messageId":"321","endLine":139,"endColumn":70,"fix":"334"},{"ruleId":"318","severity":1,"message":"319","line":149,"column":26,"nodeType":"320","messageId":"321","endLine":149,"endColumn":68,"fix":"335"},{"ruleId":"318","severity":1,"message":"319","line":158,"column":26,"nodeType":"320","messageId":"321","endLine":158,"endColumn":68,"fix":"336"},{"ruleId":"326","severity":1,"message":"327","line":167,"column":13,"nodeType":"328","messageId":"329","endLine":167,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":167,"column":32,"nodeType":"328","messageId":"329","endLine":167,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":168,"column":22,"nodeType":"328","messageId":"329","endLine":168,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":172,"column":28,"nodeType":"320","messageId":"321","endLine":172,"endColumn":70,"fix":"337"},{"ruleId":"318","severity":1,"message":"319","line":181,"column":28,"nodeType":"320","messageId":"321","endLine":181,"endColumn":70,"fix":"338"},{"ruleId":"318","severity":1,"message":"319","line":191,"column":26,"nodeType":"320","messageId":"321","endLine":191,"endColumn":68,"fix":"339"},{"ruleId":"318","severity":1,"message":"319","line":200,"column":26,"nodeType":"320","messageId":"321","endLine":200,"endColumn":68,"fix":"340"},{"ruleId":"326","severity":1,"message":"327","line":208,"column":13,"nodeType":"328","messageId":"329","endLine":208,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":208,"column":32,"nodeType":"328","messageId":"329","endLine":208,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":209,"column":22,"nodeType":"328","messageId":"329","endLine":209,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":213,"column":28,"nodeType":"320","messageId":"321","endLine":213,"endColumn":70,"fix":"341"},{"ruleId":"318","severity":1,"message":"319","line":222,"column":28,"nodeType":"320","messageId":"321","endLine":222,"endColumn":70,"fix":"342"},{"ruleId":"318","severity":1,"message":"319","line":232,"column":26,"nodeType":"320","messageId":"321","endLine":232,"endColumn":68,"fix":"343"},{"ruleId":"318","severity":1,"message":"319","line":241,"column":26,"nodeType":"320","messageId":"321","endLine":241,"endColumn":68,"fix":"344"},{"ruleId":"326","severity":1,"message":"327","line":248,"column":13,"nodeType":"328","messageId":"329","endLine":248,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":248,"column":32,"nodeType":"328","messageId":"329","endLine":248,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":249,"column":22,"nodeType":"328","messageId":"329","endLine":249,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":253,"column":28,"nodeType":"320","messageId":"321","endLine":253,"endColumn":70,"fix":"345"},{"ruleId":"318","severity":1,"message":"319","line":262,"column":28,"nodeType":"320","messageId":"321","endLine":262,"endColumn":70,"fix":"346"},{"ruleId":"318","severity":1,"message":"319","line":272,"column":26,"nodeType":"320","messageId":"321","endLine":272,"endColumn":68,"fix":"347"},{"ruleId":"318","severity":1,"message":"319","line":281,"column":26,"nodeType":"320","messageId":"321","endLine":281,"endColumn":68,"fix":"348"},{"ruleId":"326","severity":1,"message":"327","line":288,"column":13,"nodeType":"328","messageId":"329","endLine":288,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":288,"column":32,"nodeType":"328","messageId":"329","endLine":288,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":289,"column":22,"nodeType":"328","messageId":"329","endLine":289,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":293,"column":28,"nodeType":"320","messageId":"321","endLine":293,"endColumn":70,"fix":"349"},{"ruleId":"318","severity":1,"message":"319","line":302,"column":28,"nodeType":"320","messageId":"321","endLine":302,"endColumn":70,"fix":"350"},{"ruleId":"318","severity":1,"message":"319","line":312,"column":26,"nodeType":"320","messageId":"321","endLine":312,"endColumn":68,"fix":"351"},{"ruleId":"318","severity":1,"message":"319","line":321,"column":26,"nodeType":"320","messageId":"321","endLine":321,"endColumn":68,"fix":"352"},{"ruleId":"326","severity":1,"message":"327","line":328,"column":13,"nodeType":"328","messageId":"329","endLine":328,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":328,"column":32,"nodeType":"328","messageId":"329","endLine":328,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":329,"column":22,"nodeType":"328","messageId":"329","endLine":329,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":333,"column":28,"nodeType":"320","messageId":"321","endLine":333,"endColumn":70,"fix":"353"},{"ruleId":"318","severity":1,"message":"319","line":342,"column":28,"nodeType":"320","messageId":"321","endLine":342,"endColumn":70,"fix":"354"},{"ruleId":"318","severity":1,"message":"319","line":352,"column":26,"nodeType":"320","messageId":"321","endLine":352,"endColumn":68,"fix":"355"},{"ruleId":"318","severity":1,"message":"319","line":361,"column":26,"nodeType":"320","messageId":"321","endLine":361,"endColumn":68,"fix":"356"},{"ruleId":"312","severity":1,"message":"357","line":365,"column":11,"nodeType":"314","messageId":"315","endLine":365,"endColumn":15},{"ruleId":"318","severity":1,"message":"319","line":373,"column":23,"nodeType":"320","messageId":"321","endLine":373,"endColumn":64,"fix":"358"},{"ruleId":"318","severity":1,"message":"319","line":381,"column":29,"nodeType":"320","messageId":"321","endLine":381,"endColumn":76,"fix":"359"},{"ruleId":"318","severity":1,"message":"319","line":389,"column":27,"nodeType":"320","messageId":"321","endLine":389,"endColumn":72,"fix":"360"},{"ruleId":"318","severity":1,"message":"319","line":398,"column":22,"nodeType":"320","messageId":"321","endLine":398,"endColumn":62,"fix":"361"},{"ruleId":"326","severity":1,"message":"327","line":574,"column":21,"nodeType":"328","messageId":"329","endLine":574,"endColumn":23},{"ruleId":"326","severity":1,"message":"327","line":578,"column":26,"nodeType":"328","messageId":"329","endLine":578,"endColumn":28},{"ruleId":"326","severity":1,"message":"327","line":584,"column":28,"nodeType":"328","messageId":"329","endLine":584,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":591,"column":28,"nodeType":"328","messageId":"329","endLine":591,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":598,"column":28,"nodeType":"328","messageId":"329","endLine":598,"endColumn":30},{"ruleId":"312","severity":1,"message":"362","line":632,"column":9,"nodeType":"314","messageId":"315","endLine":632,"endColumn":20},{"ruleId":"363","severity":1,"message":"364","line":689,"column":3,"nodeType":"365","endLine":689,"endColumn":13,"suggestions":"366"},{"ruleId":"367","severity":1,"message":"368","line":707,"column":9,"nodeType":"369","endLine":707,"endColumn":37},{"ruleId":"370","severity":1,"message":"371","line":807,"column":13,"nodeType":"372","messageId":"329","endLine":807,"endColumn":18},{"ruleId":"367","severity":1,"message":"368","line":971,"column":13,"nodeType":"369","endLine":971,"endColumn":68},{"ruleId":"367","severity":1,"message":"368","line":977,"column":13,"nodeType":"369","endLine":977,"endColumn":70},{"ruleId":"367","severity":1,"message":"368","line":983,"column":13,"nodeType":"369","endLine":983,"endColumn":68},{"ruleId":"367","severity":1,"message":"368","line":995,"column":13,"nodeType":"369","endLine":995,"endColumn":34},{"ruleId":"367","severity":1,"message":"368","line":1001,"column":13,"nodeType":"369","endLine":1001,"endColumn":32},{"ruleId":"367","severity":1,"message":"368","line":1007,"column":13,"nodeType":"369","endLine":1007,"endColumn":33},{"ruleId":"367","severity":1,"message":"368","line":1013,"column":13,"nodeType":"369","endLine":1013,"endColumn":33},{"ruleId":"367","severity":1,"message":"368","line":1026,"column":11,"nodeType":"369","endLine":1026,"endColumn":35},{"ruleId":"312","severity":1,"message":"316","line":12,"column":17,"nodeType":"314","messageId":"315","endLine":12,"endColumn":22},{"ruleId":"312","severity":1,"message":"373","line":32,"column":10,"nodeType":"314","messageId":"315","endLine":32,"endColumn":16},{"ruleId":"312","severity":1,"message":"317","line":61,"column":5,"nodeType":"314","messageId":"315","endLine":61,"endColumn":13},{"ruleId":"318","severity":1,"message":"319","line":68,"column":20,"nodeType":"320","messageId":"321","endLine":68,"endColumn":62,"fix":"374"},{"ruleId":"318","severity":1,"message":"319","line":77,"column":24,"nodeType":"320","messageId":"321","endLine":77,"endColumn":66,"fix":"375"},{"ruleId":"312","severity":1,"message":"324","line":86,"column":9,"nodeType":"314","messageId":"315","endLine":86,"endColumn":14},{"ruleId":"312","severity":1,"message":"325","line":87,"column":9,"nodeType":"314","messageId":"315","endLine":87,"endColumn":12},{"ruleId":"326","severity":1,"message":"327","line":93,"column":13,"nodeType":"328","messageId":"329","endLine":93,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":93,"column":38,"nodeType":"328","messageId":"329","endLine":93,"endColumn":40},{"ruleId":"318","severity":1,"message":"319","line":97,"column":24,"nodeType":"320","messageId":"321","endLine":97,"endColumn":66,"fix":"376"},{"ruleId":"326","severity":1,"message":"327","line":102,"column":13,"nodeType":"328","messageId":"329","endLine":102,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":102,"column":38,"nodeType":"328","messageId":"329","endLine":102,"endColumn":40},{"ruleId":"318","severity":1,"message":"319","line":106,"column":24,"nodeType":"320","messageId":"321","endLine":106,"endColumn":66,"fix":"377"},{"ruleId":"326","severity":1,"message":"327","line":111,"column":13,"nodeType":"328","messageId":"329","endLine":111,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":111,"column":38,"nodeType":"328","messageId":"329","endLine":111,"endColumn":40},{"ruleId":"318","severity":1,"message":"319","line":115,"column":24,"nodeType":"320","messageId":"321","endLine":115,"endColumn":66,"fix":"378"},{"ruleId":"326","severity":1,"message":"327","line":119,"column":22,"nodeType":"328","messageId":"329","endLine":119,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":123,"column":28,"nodeType":"320","messageId":"321","endLine":123,"endColumn":70,"fix":"379"},{"ruleId":"318","severity":1,"message":"319","line":132,"column":28,"nodeType":"320","messageId":"321","endLine":132,"endColumn":70,"fix":"380"},{"ruleId":"318","severity":1,"message":"319","line":142,"column":26,"nodeType":"320","messageId":"321","endLine":142,"endColumn":68,"fix":"381"},{"ruleId":"318","severity":1,"message":"319","line":151,"column":26,"nodeType":"320","messageId":"321","endLine":151,"endColumn":68,"fix":"382"},{"ruleId":"326","severity":1,"message":"327","line":160,"column":13,"nodeType":"328","messageId":"329","endLine":160,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":160,"column":32,"nodeType":"328","messageId":"329","endLine":160,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":161,"column":22,"nodeType":"328","messageId":"329","endLine":161,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":165,"column":28,"nodeType":"320","messageId":"321","endLine":165,"endColumn":70,"fix":"383"},{"ruleId":"318","severity":1,"message":"319","line":174,"column":28,"nodeType":"320","messageId":"321","endLine":174,"endColumn":70,"fix":"384"},{"ruleId":"318","severity":1,"message":"319","line":184,"column":26,"nodeType":"320","messageId":"321","endLine":184,"endColumn":68,"fix":"385"},{"ruleId":"318","severity":1,"message":"319","line":193,"column":26,"nodeType":"320","messageId":"321","endLine":193,"endColumn":68,"fix":"386"},{"ruleId":"326","severity":1,"message":"327","line":201,"column":13,"nodeType":"328","messageId":"329","endLine":201,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":201,"column":32,"nodeType":"328","messageId":"329","endLine":201,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":202,"column":22,"nodeType":"328","messageId":"329","endLine":202,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":206,"column":28,"nodeType":"320","messageId":"321","endLine":206,"endColumn":70,"fix":"387"},{"ruleId":"318","severity":1,"message":"319","line":215,"column":28,"nodeType":"320","messageId":"321","endLine":215,"endColumn":70,"fix":"388"},{"ruleId":"318","severity":1,"message":"319","line":225,"column":26,"nodeType":"320","messageId":"321","endLine":225,"endColumn":68,"fix":"389"},{"ruleId":"318","severity":1,"message":"319","line":234,"column":26,"nodeType":"320","messageId":"321","endLine":234,"endColumn":68,"fix":"390"},{"ruleId":"326","severity":1,"message":"327","line":241,"column":13,"nodeType":"328","messageId":"329","endLine":241,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":241,"column":32,"nodeType":"328","messageId":"329","endLine":241,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":242,"column":22,"nodeType":"328","messageId":"329","endLine":242,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":246,"column":28,"nodeType":"320","messageId":"321","endLine":246,"endColumn":70,"fix":"391"},{"ruleId":"318","severity":1,"message":"319","line":255,"column":28,"nodeType":"320","messageId":"321","endLine":255,"endColumn":70,"fix":"392"},{"ruleId":"318","severity":1,"message":"319","line":265,"column":26,"nodeType":"320","messageId":"321","endLine":265,"endColumn":68,"fix":"393"},{"ruleId":"318","severity":1,"message":"319","line":274,"column":26,"nodeType":"320","messageId":"321","endLine":274,"endColumn":68,"fix":"394"},{"ruleId":"326","severity":1,"message":"327","line":281,"column":13,"nodeType":"328","messageId":"329","endLine":281,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":281,"column":32,"nodeType":"328","messageId":"329","endLine":281,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":282,"column":22,"nodeType":"328","messageId":"329","endLine":282,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":286,"column":28,"nodeType":"320","messageId":"321","endLine":286,"endColumn":70,"fix":"395"},{"ruleId":"318","severity":1,"message":"319","line":295,"column":28,"nodeType":"320","messageId":"321","endLine":295,"endColumn":70,"fix":"396"},{"ruleId":"318","severity":1,"message":"319","line":305,"column":26,"nodeType":"320","messageId":"321","endLine":305,"endColumn":68,"fix":"397"},{"ruleId":"318","severity":1,"message":"319","line":314,"column":26,"nodeType":"320","messageId":"321","endLine":314,"endColumn":68,"fix":"398"},{"ruleId":"326","severity":1,"message":"327","line":321,"column":13,"nodeType":"328","messageId":"329","endLine":321,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":321,"column":32,"nodeType":"328","messageId":"329","endLine":321,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":322,"column":22,"nodeType":"328","messageId":"329","endLine":322,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":326,"column":28,"nodeType":"320","messageId":"321","endLine":326,"endColumn":70,"fix":"399"},{"ruleId":"318","severity":1,"message":"319","line":335,"column":28,"nodeType":"320","messageId":"321","endLine":335,"endColumn":70,"fix":"400"},{"ruleId":"318","severity":1,"message":"319","line":345,"column":26,"nodeType":"320","messageId":"321","endLine":345,"endColumn":68,"fix":"401"},{"ruleId":"318","severity":1,"message":"319","line":354,"column":26,"nodeType":"320","messageId":"321","endLine":354,"endColumn":68,"fix":"402"},{"ruleId":"312","severity":1,"message":"357","line":358,"column":11,"nodeType":"314","messageId":"315","endLine":358,"endColumn":15},{"ruleId":"318","severity":1,"message":"319","line":366,"column":23,"nodeType":"320","messageId":"321","endLine":366,"endColumn":64,"fix":"403"},{"ruleId":"318","severity":1,"message":"319","line":374,"column":29,"nodeType":"320","messageId":"321","endLine":374,"endColumn":76,"fix":"404"},{"ruleId":"318","severity":1,"message":"319","line":382,"column":27,"nodeType":"320","messageId":"321","endLine":382,"endColumn":72,"fix":"405"},{"ruleId":"318","severity":1,"message":"319","line":391,"column":22,"nodeType":"320","messageId":"321","endLine":391,"endColumn":62,"fix":"406"},{"ruleId":"326","severity":1,"message":"327","line":582,"column":21,"nodeType":"328","messageId":"329","endLine":582,"endColumn":23},{"ruleId":"326","severity":1,"message":"327","line":586,"column":26,"nodeType":"328","messageId":"329","endLine":586,"endColumn":28},{"ruleId":"326","severity":1,"message":"327","line":592,"column":28,"nodeType":"328","messageId":"329","endLine":592,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":599,"column":28,"nodeType":"328","messageId":"329","endLine":599,"endColumn":30},{"ruleId":"326","severity":1,"message":"327","line":606,"column":28,"nodeType":"328","messageId":"329","endLine":606,"endColumn":30},{"ruleId":"312","severity":1,"message":"362","line":641,"column":9,"nodeType":"314","messageId":"315","endLine":641,"endColumn":20},{"ruleId":"363","severity":1,"message":"407","line":698,"column":3,"nodeType":"365","endLine":698,"endColumn":24,"suggestions":"408"},{"ruleId":"367","severity":1,"message":"368","line":717,"column":9,"nodeType":"369","endLine":717,"endColumn":37},{"ruleId":"370","severity":1,"message":"371","line":819,"column":13,"nodeType":"372","messageId":"329","endLine":819,"endColumn":18},{"ruleId":"409","severity":1,"message":"410","line":6,"column":13,"nodeType":"369","messageId":"411","endLine":6,"endColumn":48,"fix":"412"},{"ruleId":"413","severity":1,"message":"414","line":7,"column":17,"nodeType":"369","endLine":7,"endColumn":56},{"ruleId":"409","severity":1,"message":"410","line":10,"column":17,"nodeType":"369","messageId":"411","endLine":10,"endColumn":52,"fix":"415"},{"ruleId":"312","severity":1,"message":"416","line":8,"column":8,"nodeType":"314","messageId":"315","endLine":8,"endColumn":14},{"ruleId":"312","severity":1,"message":"317","line":64,"column":5,"nodeType":"314","messageId":"315","endLine":64,"endColumn":13},{"ruleId":"318","severity":1,"message":"319","line":71,"column":20,"nodeType":"320","messageId":"321","endLine":71,"endColumn":62,"fix":"417"},{"ruleId":"318","severity":1,"message":"319","line":80,"column":24,"nodeType":"320","messageId":"321","endLine":80,"endColumn":66,"fix":"418"},{"ruleId":"312","severity":1,"message":"324","line":89,"column":9,"nodeType":"314","messageId":"315","endLine":89,"endColumn":14},{"ruleId":"312","severity":1,"message":"325","line":90,"column":9,"nodeType":"314","messageId":"315","endLine":90,"endColumn":12},{"ruleId":"326","severity":1,"message":"327","line":96,"column":13,"nodeType":"328","messageId":"329","endLine":96,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":96,"column":38,"nodeType":"328","messageId":"329","endLine":96,"endColumn":40},{"ruleId":"318","severity":1,"message":"319","line":100,"column":24,"nodeType":"320","messageId":"321","endLine":100,"endColumn":66,"fix":"419"},{"ruleId":"326","severity":1,"message":"327","line":105,"column":13,"nodeType":"328","messageId":"329","endLine":105,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":105,"column":38,"nodeType":"328","messageId":"329","endLine":105,"endColumn":40},{"ruleId":"318","severity":1,"message":"319","line":109,"column":24,"nodeType":"320","messageId":"321","endLine":109,"endColumn":66,"fix":"420"},{"ruleId":"326","severity":1,"message":"327","line":115,"column":13,"nodeType":"328","messageId":"329","endLine":115,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":115,"column":38,"nodeType":"328","messageId":"329","endLine":115,"endColumn":40},{"ruleId":"318","severity":1,"message":"319","line":119,"column":24,"nodeType":"320","messageId":"321","endLine":119,"endColumn":66,"fix":"421"},{"ruleId":"326","severity":1,"message":"327","line":123,"column":22,"nodeType":"328","messageId":"329","endLine":123,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":127,"column":28,"nodeType":"320","messageId":"321","endLine":127,"endColumn":70,"fix":"422"},{"ruleId":"318","severity":1,"message":"319","line":136,"column":28,"nodeType":"320","messageId":"321","endLine":136,"endColumn":70,"fix":"423"},{"ruleId":"318","severity":1,"message":"319","line":146,"column":26,"nodeType":"320","messageId":"321","endLine":146,"endColumn":68,"fix":"424"},{"ruleId":"318","severity":1,"message":"319","line":155,"column":26,"nodeType":"320","messageId":"321","endLine":155,"endColumn":68,"fix":"425"},{"ruleId":"326","severity":1,"message":"327","line":164,"column":13,"nodeType":"328","messageId":"329","endLine":164,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":164,"column":32,"nodeType":"328","messageId":"329","endLine":164,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":165,"column":22,"nodeType":"328","messageId":"329","endLine":165,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":169,"column":28,"nodeType":"320","messageId":"321","endLine":169,"endColumn":70,"fix":"426"},{"ruleId":"318","severity":1,"message":"319","line":178,"column":28,"nodeType":"320","messageId":"321","endLine":178,"endColumn":70,"fix":"427"},{"ruleId":"318","severity":1,"message":"319","line":188,"column":26,"nodeType":"320","messageId":"321","endLine":188,"endColumn":68,"fix":"428"},{"ruleId":"318","severity":1,"message":"319","line":197,"column":26,"nodeType":"320","messageId":"321","endLine":197,"endColumn":68,"fix":"429"},{"ruleId":"326","severity":1,"message":"327","line":205,"column":13,"nodeType":"328","messageId":"329","endLine":205,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":205,"column":32,"nodeType":"328","messageId":"329","endLine":205,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":206,"column":22,"nodeType":"328","messageId":"329","endLine":206,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":210,"column":28,"nodeType":"320","messageId":"321","endLine":210,"endColumn":70,"fix":"430"},{"ruleId":"318","severity":1,"message":"319","line":219,"column":28,"nodeType":"320","messageId":"321","endLine":219,"endColumn":70,"fix":"431"},{"ruleId":"318","severity":1,"message":"319","line":229,"column":26,"nodeType":"320","messageId":"321","endLine":229,"endColumn":68,"fix":"432"},{"ruleId":"318","severity":1,"message":"319","line":238,"column":26,"nodeType":"320","messageId":"321","endLine":238,"endColumn":68,"fix":"433"},{"ruleId":"326","severity":1,"message":"327","line":245,"column":13,"nodeType":"328","messageId":"329","endLine":245,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":245,"column":32,"nodeType":"328","messageId":"329","endLine":245,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":246,"column":22,"nodeType":"328","messageId":"329","endLine":246,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":250,"column":28,"nodeType":"320","messageId":"321","endLine":250,"endColumn":70,"fix":"434"},{"ruleId":"318","severity":1,"message":"319","line":259,"column":28,"nodeType":"320","messageId":"321","endLine":259,"endColumn":70,"fix":"435"},{"ruleId":"318","severity":1,"message":"319","line":269,"column":26,"nodeType":"320","messageId":"321","endLine":269,"endColumn":68,"fix":"436"},{"ruleId":"318","severity":1,"message":"319","line":278,"column":26,"nodeType":"320","messageId":"321","endLine":278,"endColumn":68,"fix":"437"},{"ruleId":"326","severity":1,"message":"327","line":285,"column":13,"nodeType":"328","messageId":"329","endLine":285,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":285,"column":32,"nodeType":"328","messageId":"329","endLine":285,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":286,"column":22,"nodeType":"328","messageId":"329","endLine":286,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":290,"column":28,"nodeType":"320","messageId":"321","endLine":290,"endColumn":70,"fix":"438"},{"ruleId":"318","severity":1,"message":"319","line":299,"column":28,"nodeType":"320","messageId":"321","endLine":299,"endColumn":70,"fix":"439"},{"ruleId":"318","severity":1,"message":"319","line":309,"column":26,"nodeType":"320","messageId":"321","endLine":309,"endColumn":68,"fix":"440"},{"ruleId":"318","severity":1,"message":"319","line":318,"column":26,"nodeType":"320","messageId":"321","endLine":318,"endColumn":68,"fix":"441"},{"ruleId":"326","severity":1,"message":"327","line":325,"column":13,"nodeType":"328","messageId":"329","endLine":325,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":325,"column":32,"nodeType":"328","messageId":"329","endLine":325,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":326,"column":22,"nodeType":"328","messageId":"329","endLine":326,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":330,"column":28,"nodeType":"320","messageId":"321","endLine":330,"endColumn":70,"fix":"442"},{"ruleId":"318","severity":1,"message":"319","line":339,"column":28,"nodeType":"320","messageId":"321","endLine":339,"endColumn":70,"fix":"443"},{"ruleId":"318","severity":1,"message":"319","line":349,"column":26,"nodeType":"320","messageId":"321","endLine":349,"endColumn":68,"fix":"444"},{"ruleId":"318","severity":1,"message":"319","line":358,"column":26,"nodeType":"320","messageId":"321","endLine":358,"endColumn":68,"fix":"445"},{"ruleId":"312","severity":1,"message":"357","line":362,"column":11,"nodeType":"314","messageId":"315","endLine":362,"endColumn":15},{"ruleId":"318","severity":1,"message":"319","line":370,"column":23,"nodeType":"320","messageId":"321","endLine":370,"endColumn":64,"fix":"446"},{"ruleId":"318","severity":1,"message":"319","line":378,"column":29,"nodeType":"320","messageId":"321","endLine":378,"endColumn":76,"fix":"447"},{"ruleId":"318","severity":1,"message":"319","line":386,"column":27,"nodeType":"320","messageId":"321","endLine":386,"endColumn":72,"fix":"448"},{"ruleId":"318","severity":1,"message":"319","line":395,"column":22,"nodeType":"320","messageId":"321","endLine":395,"endColumn":62,"fix":"449"},{"ruleId":"363","severity":1,"message":"450","line":497,"column":3,"nodeType":"365","endLine":497,"endColumn":9,"suggestions":"451"},{"ruleId":"363","severity":1,"message":"452","line":497,"column":4,"nodeType":"453","endLine":497,"endColumn":8},{"ruleId":"326","severity":1,"message":"327","line":593,"column":19,"nodeType":"328","messageId":"329","endLine":593,"endColumn":21},{"ruleId":"326","severity":1,"message":"327","line":597,"column":24,"nodeType":"328","messageId":"329","endLine":597,"endColumn":26},{"ruleId":"326","severity":1,"message":"327","line":603,"column":26,"nodeType":"328","messageId":"329","endLine":603,"endColumn":28},{"ruleId":"326","severity":1,"message":"327","line":610,"column":26,"nodeType":"328","messageId":"329","endLine":610,"endColumn":28},{"ruleId":"326","severity":1,"message":"327","line":617,"column":26,"nodeType":"328","messageId":"329","endLine":617,"endColumn":28},{"ruleId":"312","severity":1,"message":"362","line":656,"column":9,"nodeType":"314","messageId":"315","endLine":656,"endColumn":20},{"ruleId":"363","severity":1,"message":"364","line":713,"column":5,"nodeType":"365","endLine":713,"endColumn":15,"suggestions":"454"},{"ruleId":"367","severity":1,"message":"368","line":741,"column":11,"nodeType":"369","endLine":741,"endColumn":39},{"ruleId":"370","severity":1,"message":"371","line":860,"column":13,"nodeType":"372","messageId":"329","endLine":860,"endColumn":18},{"ruleId":"312","severity":1,"message":"455","line":21,"column":7,"nodeType":"314","messageId":"315","endLine":21,"endColumn":10},{"ruleId":"363","severity":1,"message":"456","line":23,"column":3,"nodeType":"314","endLine":23,"endColumn":12,"suggestions":"457"},{"ruleId":"312","severity":1,"message":"458","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":16},{"ruleId":"363","severity":1,"message":"452","line":21,"column":6,"nodeType":"453","endLine":21,"endColumn":10},{"ruleId":"312","severity":1,"message":"459","line":8,"column":10,"nodeType":"314","messageId":"315","endLine":8,"endColumn":19},{"ruleId":"312","severity":1,"message":"460","line":8,"column":21,"nodeType":"314","messageId":"315","endLine":8,"endColumn":33},{"ruleId":"312","severity":1,"message":"461","line":9,"column":10,"nodeType":"314","messageId":"315","endLine":9,"endColumn":18},{"ruleId":"312","severity":1,"message":"462","line":9,"column":20,"nodeType":"314","messageId":"315","endLine":9,"endColumn":31},{"ruleId":"363","severity":1,"message":"463","line":13,"column":3,"nodeType":"314","endLine":13,"endColumn":12,"suggestions":"464"},{"ruleId":"409","severity":1,"message":"410","line":8,"column":13,"nodeType":"369","messageId":"411","endLine":8,"endColumn":48,"fix":"465"},{"ruleId":"413","severity":1,"message":"414","line":9,"column":17,"nodeType":"369","endLine":9,"endColumn":56},{"ruleId":"409","severity":1,"message":"410","line":12,"column":17,"nodeType":"369","messageId":"411","endLine":12,"endColumn":52,"fix":"466"},"no-native-reassign",["467"],"no-negated-in-lhs",["468"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'time_now' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property padStart.","MemberExpression","unexpectedWhitespace",{"range":"469","text":"470"},{"range":"471","text":"470"},"'wkend' is assigned a value but never used.","'mon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"range":"472","text":"470"},{"range":"473","text":"470"},{"range":"474","text":"470"},{"range":"475","text":"470"},{"range":"476","text":"470"},{"range":"477","text":"470"},{"range":"478","text":"470"},{"range":"479","text":"470"},{"range":"480","text":"470"},{"range":"481","text":"470"},{"range":"482","text":"470"},{"range":"483","text":"470"},{"range":"484","text":"470"},{"range":"485","text":"470"},{"range":"486","text":"470"},{"range":"487","text":"470"},{"range":"488","text":"470"},{"range":"489","text":"470"},{"range":"490","text":"470"},{"range":"491","text":"470"},{"range":"492","text":"470"},{"range":"493","text":"470"},{"range":"494","text":"470"},{"range":"495","text":"470"},{"range":"496","text":"470"},{"range":"497","text":"470"},{"range":"498","text":"470"},"'test' is assigned a value but never used.",{"range":"499","text":"470"},{"range":"500","text":"470"},{"range":"501","text":"470"},{"range":"502","text":"470"},"'updateChart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getchartInfo'. Either include it or remove the dependency array.","ArrayExpression",["503"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'axisY'.","ObjectExpression","'hidden' is assigned a value but never used.",{"range":"504","text":"470"},{"range":"505","text":"470"},{"range":"506","text":"470"},{"range":"507","text":"470"},{"range":"508","text":"470"},{"range":"509","text":"470"},{"range":"510","text":"470"},{"range":"511","text":"470"},{"range":"512","text":"470"},{"range":"513","text":"470"},{"range":"514","text":"470"},{"range":"515","text":"470"},{"range":"516","text":"470"},{"range":"517","text":"470"},{"range":"518","text":"470"},{"range":"519","text":"470"},{"range":"520","text":"470"},{"range":"521","text":"470"},{"range":"522","text":"470"},{"range":"523","text":"470"},{"range":"524","text":"470"},{"range":"525","text":"470"},{"range":"526","text":"470"},{"range":"527","text":"470"},{"range":"528","text":"470"},{"range":"529","text":"470"},{"range":"530","text":"470"},{"range":"531","text":"470"},{"range":"532","text":"470"},{"range":"533","text":"470"},{"range":"534","text":"470"},{"range":"535","text":"470"},{"range":"536","text":"470"},"React Hook useEffect has a missing dependency: 'getArticles'. Either include it or remove the dependency array.",["537"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"538","text":"539"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"range":"540","text":"539"},"'Candle' is defined but never used.",{"range":"541","text":"470"},{"range":"542","text":"470"},{"range":"543","text":"470"},{"range":"544","text":"470"},{"range":"545","text":"470"},{"range":"546","text":"470"},{"range":"547","text":"470"},{"range":"548","text":"470"},{"range":"549","text":"470"},{"range":"550","text":"470"},{"range":"551","text":"470"},{"range":"552","text":"470"},{"range":"553","text":"470"},{"range":"554","text":"470"},{"range":"555","text":"470"},{"range":"556","text":"470"},{"range":"557","text":"470"},{"range":"558","text":"470"},{"range":"559","text":"470"},{"range":"560","text":"470"},{"range":"561","text":"470"},{"range":"562","text":"470"},{"range":"563","text":"470"},{"range":"564","text":"470"},{"range":"565","text":"470"},{"range":"566","text":"470"},{"range":"567","text":"470"},{"range":"568","text":"470"},{"range":"569","text":"470"},{"range":"570","text":"470"},{"range":"571","text":"470"},{"range":"572","text":"470"},{"range":"573","text":"470"},"React Hook useEffect has missing dependencies: 'MLForecast', 'getStockInfo', 'oneYearHighAndLow', and 'stock'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrent' needs the current value of 'stock'.",["574"],"The null literal is not a valid dependency because it never changes. You can safely remove it.","Literal",["575"],"'vol' is assigned a value but never used.","React Hook useEffect contains a call to 'setTime'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stock, symbol, timeframe, time, lineChart, displayLineChart, candlestickChart, displayCandleStickChart, scatterChart, displayScatterChart, forecastChart, displayForecastingChart, y1_Forecast, y1, y2_Forecast, y2, getchartInfo] as a second argument to the useEffect Hook.",["576"],"'NewsItem' is defined but never used.","'stockInfo' is assigned a value but never used.","'setStockInfo' is assigned a value but never used.","'articles' is assigned a value but never used.","'setArticles' is assigned a value but never used.","React Hook useEffect contains a call to 'setTime'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stock, symbol, timeframe, time, getchartInfo] as a second argument to the useEffect Hook.",["577"],{"range":"578","text":"539"},{"range":"579","text":"539"},"no-global-assign","no-unsafe-negation",[2889,2891],".",[3473,3475],[4560,4562],[5060,5062],[5560,5562],[6082,6084],[6540,6542],[7016,7018],[7462,7464],[8057,8059],[8520,8522],[8993,8995],[9491,9493],[10084,10086],[10549,10551],[11024,11026],[11516,11518],[12104,12106],[12568,12570],[13042,13044],[13533,13535],[14119,14121],[14581,14583],[15053,15055],[15542,15544],[16124,16126],[16586,16588],[17058,17060],[17547,17549],[18007,18009],[18465,18467],[18957,18959],[19448,19450],{"desc":"580","fix":"581"},[2730,2732],[3314,3316],[4396,4398],[4896,4898],[5394,5396],[5916,5918],[6374,6376],[6850,6852],[7296,7298],[7897,7899],[8360,8362],[8833,8835],[9331,9333],[9918,9920],[10383,10385],[10858,10860],[11350,11352],[11938,11940],[12402,12404],[12876,12878],[13367,13369],[13953,13955],[14415,14417],[14887,14889],[15376,15378],[15958,15960],[16420,16422],[16892,16894],[17381,17383],[17841,17843],[18299,18301],[18791,18793],[19282,19284],{"desc":"582","fix":"583"},[173,173]," rel=\"noreferrer\"",[319,319],[2764,2766],[3352,3354],[4439,4441],[4939,4941],[5439,5441],[5961,5963],[6419,6421],[6895,6897],[7341,7343],[7895,7897],[8358,8360],[8831,8833],[9329,9331],[9922,9924],[10387,10389],[10862,10864],[11354,11356],[11942,11944],[12406,12408],[12880,12882],[13371,13373],[13957,13959],[14419,14421],[14891,14893],[15380,15382],[15962,15964],[16424,16426],[16900,16902],[17389,17391],[17845,17847],[18303,18305],[18795,18797],[19286,19288],{"desc":"584","fix":"585"},{"desc":"580","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},[264,264],[410,410],"Update the dependencies array to be: [fixClick, getchartInfo]",{"range":"591","text":"592"},"Update the dependencies array to be: [stockName, fixClick, getArticles]",{"range":"593","text":"594"},"Update the dependencies array to be: [MLForecast, getStockInfo, oneYearHighAndLow, stock]",{"range":"595","text":"596"},{"range":"597","text":"592"},"Add dependencies array: [stock, symbol, timeframe, time, lineChart, displayLineChart, candlestickChart, displayCandleStickChart, scatterChart, displayScatterChart, forecastChart, displayForecastingChart, y1_Forecast, y1, y2_Forecast, y2, getchartInfo]",{"range":"598","text":"599"},"Add dependencies array: [stock, symbol, timeframe, time, getchartInfo]",{"range":"600","text":"601"},[28887,28897],"[fixClick, getchartInfo]",[29186,29207],"[stockName, fixClick, getArticles]",[22814,22820],"[MLForecast, getStockInfo, oneYearHighAndLow, stock]",[29415,29425],[1704,1704],", [stock, symbol, timeframe, time, lineChart, displayLineChart, candlestickChart, displayCandleStickChart, scatterChart, displayScatterChart, forecastChart, displayForecastingChart, y1_Forecast, y1, y2_Forecast, y2, getchartInfo]",[645,645],", [stock, symbol, timeframe, time, getchartInfo]"]