[{"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\index.js":"1","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\reportWebVitals.js":"2","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\App.js":"3","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\products.js":"4","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\about.js":"5","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\productX.js":"6","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\index.js":"7","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Footer\\index.js":"8","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\stockInformation.js":"9","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\newsItem.js":"10","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Navbar\\NavbarElements.js":"11","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Navbar\\index.js":"12","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\dailyArticles.js":"13","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\topNews.js":"14","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\linechartv2.js":"15"},{"size":302,"mtime":1634856134869,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1634856134884,"results":"18","hashOfConfig":"17"},{"size":2070,"mtime":1634856134646,"results":"19","hashOfConfig":"17"},{"size":12360,"mtime":1634861347285,"results":"20","hashOfConfig":"17"},{"size":13978,"mtime":1634861338882,"results":"21","hashOfConfig":"17"},{"size":5840,"mtime":1634856134881,"results":"22","hashOfConfig":"17"},{"size":12512,"mtime":1635197929256,"results":"23","hashOfConfig":"17"},{"size":1459,"mtime":1634856134728,"results":"24","hashOfConfig":"17"},{"size":539,"mtime":1635197850219,"results":"25","hashOfConfig":"17"},{"size":460,"mtime":1634856134878,"results":"26","hashOfConfig":"17"},{"size":618,"mtime":1634856134729,"results":"27","hashOfConfig":"17"},{"size":1424,"mtime":1634320594743,"results":"28","hashOfConfig":"17"},{"size":1796,"mtime":1634856134877,"results":"29","hashOfConfig":"17"},{"size":562,"mtime":1634856134883,"results":"30","hashOfConfig":"17"},{"size":2314,"mtime":1635197893655,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1avdvw7",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\index.js",[],["72","73"],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\reportWebVitals.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\App.js",["74"],"import 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Footer from './components/Footer';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport Home from './pages'\r\nimport Products from './pages/products';\r\nimport About from './pages/about';\r\nimport ProductX from './pages/productX';\r\nimport {Redirect} from 'react-router-dom';\r\nimport background from './pages/Sky.jpg';\r\n\r\n/* <Navbar /> */\r\n\r\nfunction App() {\r\nconst [hide, setHide] = useState(\"none\");\r\n\r\nconst hideLandPage = () => {\r\n  setHide(\"none\");\r\n};\r\n\r\n  return (\r\n    \r\n    <Router>\r\n      <Redirect from='/' to='/index' exact component={Home}/>\r\n\r\n      <div className='landing-Background'\r\n        style={{ \r\n          height: '100%',\r\n          backgroundImage: `url(${background})`,\r\n          backgroundCover: `cover`,\r\n          backgroundSize: '100% 100%',\r\n          backgroundAttachment: 'fixed',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundColor: '#000',\r\n          paddingTop: '5%',\r\n          paddingBottom: '10%',\r\n          marginBottom: '-5%',\r\n          display: hide\r\n        }}>\r\n          <h1>Welcome to TradeBreath</h1>   \r\n          \r\n          <Link id=\"buttons\" to=\"/index\">\r\n            <button onClick={hideLandPage}><h3>Enter</h3></button>\r\n          </Link>\r\n        </div>\r\n\r\n        <Switch>\r\n          \r\n          <Route path='/index' exact component={Home} />\r\n          <Redirect from='/index' to='/index'/>\r\n          <Route path='/products' exact component={Products} />\r\n          <Redirect from='/products' to='/products'/>\r\n          <Route path='/productX' exact component={ProductX} />\r\n          <Redirect from='/productX' to='/products' exact component={Products}/>\r\n          <Route path='/about' exact component={About} />\r\n          <Redirect from='/about' to='/about'/>\r\n        </Switch>\r\n        <Footer />\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\products.js",["75","76","77","78","79","80"],"import React, { useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport background from './Sky.jpg';\r\nimport { Nav, NavLink, NavMenu} from '../components/Navbar/NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport Logo from '../components/Navbar/TradeBreath.gif';\r\nimport NewsItem from './newsItem';\r\nimport Line from './linechartv2';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\nimport StockInformation from './stockInformation';\r\nimport axios, { Axios } from 'axios';\r\nimport './products.css';\r\n\r\n  \r\nconst Home = () => {\r\n  const [stockName, setStockName] = useState(\"\");\r\n  const [price, setPrice] = useState([]);\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState(\"\");\r\n\r\n  const [hidden, setHidden] = useState(\"block\");\r\n  const [show, setShowing] = useState(\"none\");\r\n\r\n  const [toggleLine, setLine] = useState(\"block\");\r\n  const [toggleCandle, setCandle] = useState(\"none\");\r\n\r\n  function stockChange(event){\r\n    setStock(event.target.value.toUpperCase());\r\n  } \r\n\r\n  function clickedStock(value){\r\n    setStock(value);\r\n    setStockName(stock);\r\n    getArticles();\r\n  }\r\n\r\n  let viewCandle = () => {\r\n    setLine(\"none\");\r\n    setCandle(\"block\");\r\n    console.log(toggleCandle);\r\n  }\r\n\r\n  let viewLine = () => {\r\n    setLine(\"block\");\r\n    setCandle(\"none\");\r\n    console.log(toggleLine);\r\n  }\r\n\r\n\r\n  const [tbapp, settbapp]= useState(\"\");\r\n  const [found, setFound]= useState(false);\r\n\r\n  \r\n  async function tbappChange() {\r\n    try {\r\n    let response = await axios.get('https://young-harbor-33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=2021-09-21&end_date=2021-10-19')\r\n    /*let response = await axios.get('/tbapp/?stock=' + stock + '&interval=Day&start_date=2021-10-06&end_date=2021-10-10' , { mode: \"no-cors\" });\r\n    let response = await axios.get(\"https://goweather.herokuapp.com/weather/\"+ stock ); */\r\n      settbapp(response);\r\n      console.log(stock); \r\n    }catch(error) {\r\n      if(error.response) {\r\n        console.log(stock);\r\n      }\r\n    }\r\n  }\r\n\r\n  const getStockInfo = async () => {\r\n    const info = await axios.get (\r\n      'https://api.marketstack.com/v1/eod/latest?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + stock /*+ '&%20date_from=2021-10-15'*/ , { mode: \"no-cors\" }\r\n    );\r\n    setStockInfo(info.data.data);\r\n    console.log(info);\r\n  };\r\n\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + stock , { mode: \"no-cors\" }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n    console.log(priceAndDate.data);\r\n  }\r\n\r\n  const getArticles = async () => {\r\n    const res = await axios.get(\r\n      'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n    );\r\n    setArticles(res.data.data);\r\n    console.log(res); \r\n    setHidden(\"none\");\r\n    setShowing(\"block\"); \r\n    getStockInfo();\r\n    getchartInfo();\r\n    setStockName(stock);\r\n    tbappChange(); \r\n  };\r\n  \r\n  const enterKey = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      getArticles();\r\n    }\r\n  };\r\n\r\n  let whirligig\r\n  const next = () => whirligig.next()\r\n  const prev = () => whirligig.prev()\r\n\r\n  return (\r\n    <div id='products'>\r\n      \r\n      <div className=\"navBar-div\">\r\n    <Nav id =\"navBar\"\r\n        style={{ \r\n        height: '90px',\r\n        paddingTop: '0.5%',\r\n        paddingBottom: '0.5%',\r\n        backgroundImage: `url(${background})`,\r\n        backgroundCover: `cover`,\r\n        backgroundSize: '100% 100%',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor: '#000'\r\n        }}\r\n      >\r\n        <img id=\"logo\" src={Logo} />\r\n \r\n        <NavMenu id=\"menu\">\r\n\r\n        <NavLink id=\"link\" to='/index' activeStyle>\r\n          Home\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/products' activeStyle>\r\n          Products\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/about' activeStyle>\r\n          About Us\r\n        </NavLink>\r\n\r\n        <Form inline id=\"searchBar\">\r\n          <FormControl type=\"text\" autoComplete=\"off\"\r\n            id=\"searchBar\" placeholder=\"Use Stock Codes (e.g. AAPL)\"\r\n            onChange={stockChange} \r\n            onKeyPress={enterKey}\r\n        />\r\n\r\n          <Button id=\"searchButton\" \r\n            onClick={getArticles}>\r\n              Search\r\n            </Button>\r\n        </Form>\r\n\r\n        </NavMenu>\r\n      </Nav>\r\n\r\n    </div>\r\n\r\n    <div \r\n      style ={{\r\n        justifyContent: 'center',\r\n        marginLeft: '5%',\r\n        marginRight: '5%',\r\n        marginBottom: '2%',\r\n        overflow: 'auto',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        display: show\r\n    }}>\r\n        <h1 style = {{\r\n          marginLeft: '10%'\r\n        }}> \r\n          {stockName} \r\n        </h1>\r\n        <div style={{\r\n            display: toggleCandle,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n        <CanvasJSChart\r\n          options = { {\r\n            theme: \"light1\",\r\n            exportEnabled: true,\r\n            animationEnabled: true,\r\n            height: 450,\r\n            axisY: {\r\n              minimum: Math.min(...price.map(data => data.low)) / 1.1,\r\n              maximum: Math.max(...price.map(data => data.high)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              prefix: \"$\",\r\n            },\r\n            axisX: {\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              scaleBreaks: {\r\n                spacing: 0,\r\n                fillOpacity: 0,\r\n                lineThickness: 0,\r\n                customBreaks: price.reduce((breaks, value, index, array) => {\r\n                    if (index === 0) return breaks;\r\n\r\n                    const currentDataPointUnix = Number(new Date(value.date));\r\n                    const previousDataPointUnix = Number(new Date(array[index - 1].date));\r\n\r\n                    const oneDayInMs = 86400000;\r\n\r\n                    const difference = previousDataPointUnix - currentDataPointUnix;\r\n\r\n                    return difference === oneDayInMs\r\n                        ? breaks\r\n                        : [\r\n                            ...breaks,\r\n                            {\r\n                                startValue: currentDataPointUnix,\r\n                                endValue: previousDataPointUnix - oneDayInMs\r\n                            }\r\n                        ]\r\n                  }, [])\r\n                }\r\n              },\r\n                data: [{\r\n                  type: 'candlestick',\r\n                  risingColor: \"green\",\r\n                  fallingColor: \"#E40A0A\",\r\n                  dataPoints: price.map(price => ({\r\n                      x: new Date(price.date),\r\n                      y: [\r\n                        price.open,\r\n                        price.high,\r\n                        price.low,\r\n                        price.close\r\n                    ]\r\n                  }))\r\n                }],\r\n          \r\n              }\r\n            }\r\n          />\r\n          </div>\r\n\r\n          <div style={{\r\n            display: toggleLine,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n          {stockInfo.map(({ symbol }) => (\r\n                <Line\r\n                  symbol={symbol}\r\n                />\r\n          ))}\r\n          </div>\r\n\r\n          <div id='buttons'>\r\n          <button onClick={viewCandle}\r\n            id=\"candlesticks-button\">Candlestick Chart\r\n          </button> \r\n          <button onClick={viewLine}\r\n            id=\"line-button\">Line Chart\r\n          </button> \r\n        </div>\r\n\r\n        <br></br>\r\n\r\n        <div className=\"databox\">\r\n          {\r\n          stockInfo.map(({ close, open, high, low, volume }) => (\r\n          <StockInformation\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n          />\r\n          ))}\r\n        </div>\r\n\r\n        <div style = {{\r\n          marginLeft: '10%'\r\n        }}>\r\n          <h1>Recent News Articles: {stockName} </h1>\r\n        </div>\r\n\r\n          <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <NewsItem\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n            <div className='buttons'>\r\n                <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                <button id='sliderbutton-next' onClick={next}>Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    <div id='list'>\r\n      <div id='products-title'>\r\n        <h1> Products </h1>\r\n      </div>\r\n\r\n      <Form inline id=\"productSearchBar\">\r\n        <FormControl type=\"text\" onChange={stockChange} id=\"productSearchBar\" \r\n        autoComplete=\"off\" placeholder=\"Use Stock Codes (e.g. AAPL)\" onKeyPress={enterKey}/>\r\n        <Button id=\"productSearchButton\" onClick={getArticles}>\r\n          Search\r\n        </Button>   \r\n        {/*}\r\n        <FormControl type=\"text\" placeholder=\"Filter\" id=\"filterSearchBar\" autoComplete=\"off\"/>\r\n        <Button id=\"productSearchButton\">\r\n          Filter\r\n        </Button> \r\n        */}  \r\n      </Form>\r\n        \r\n        <ul className='product-List'> \r\n          <li><button onClick={() => clickedStock(\"AAPL\")}><p>Apple</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"AMZN\")}><p>Amazon</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"AMC\")}><p>AMC Entertainement</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"AMD\")}><p>AMD</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"BA\")}><p>Boeing</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"KO\")}><p>Coca-Cola</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"COIN\")}><p>Coinbase</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"DIS\")}><p>Disney</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"GME\")}><p>Gamestop</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"MSFT\")}><p>Microsoft</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"MRNA\")}><p>Moderna</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NFLX\")}><p>Netflix</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NKE\")}><p>Nike</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NIO\")}><p>NIO</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"NVDA\")}><p>NVDIA</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"RYCEY\")}><p>Rolls-Royce</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"LUV\")}><p>Southwest Airlines</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"SONY\")}><p>Sony</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"SBUX\")}><p>Starbucks</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"TSLA\")}><p>Tesla</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"TWTR\")}><p>Twitter</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"UBER\")}><p>Uber</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"WMT\")}><p>Walmart</p></button></li>\r\n          <li><button onClick={() => clickedStock(\"ZM\")}><p>Zoom</p></button></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default Home;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\about.js",["81","82","83","84","85"],"import React, { useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport background from './Sky.jpg';\r\nimport { Nav, NavLink, NavMenu} from '../components/Navbar/NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport Logo from '../components/Navbar/TradeBreath.gif';\r\nimport NewsItem from './newsItem';\r\nimport StockInformation from './stockInformation';\r\nimport Line from './linechartv2';\r\nimport axios, { Axios } from 'axios';\r\nimport './about.css';\r\nimport Adrian from './Adrian.png'\r\nimport Alex from './Alex.png'\r\nimport Diego from './Diego.png'\r\nimport Edwin from './Edwin.png'\r\n\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\n\r\nimport StockPic from './stock.jpeg'\r\nimport HunterPic from './hunter.jpg'\r\n\r\nconst About = () => {\r\n\r\n  const [stockName, setStockName] = useState(\"\");\r\n  const [price, setPrice] = useState([]);\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState(\"\");\r\n\r\n  const [toggleLine, setLine] = useState(\"block\");\r\n  const [toggleCandle, setCandle] = useState(\"none\");\r\n\r\n  const [hidden, setHidden] = useState(\"block\");\r\n  const [show, setShowing] = useState(\"none\");\r\n\r\n  function stockChange(event){\r\n    setStock(event.target.value.toUpperCase());\r\n  } \r\n\r\n  let viewCandle = () => {\r\n    setLine(\"none\");\r\n    setCandle(\"block\");\r\n    console.log(toggleCandle);\r\n  }\r\n\r\n  let viewLine = () => {\r\n    setLine(\"block\");\r\n    setCandle(\"none\");\r\n    console.log(toggleLine);\r\n  }\r\n\r\n\r\n  const [tbapp, settbapp]= useState(\"\");\r\n  const [found, setFound]= useState(false);\r\n\r\n  async function tbappChange() {\r\n    try {\r\n    let response = await axios.get('https://young-harbor-33717.herokuapp.com/tbapp/?stock=' + stock + '&interval=Day&start_date=2021-09-21&end_date=2021-10-19')\r\n    /*let response = await axios.get('/tbapp/?stock=' + stock + '&interval=Day&start_date=2021-10-06&end_date=2021-10-10' , { mode: \"no-cors\" });\r\n    let response = await axios.get(\"https://goweather.herokuapp.com/weather/\"+ stock ); */\r\n      settbapp(response);\r\n      console.log(stock); \r\n    }catch(error) {\r\n      if(error.response) {\r\n        console.log(stock);\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  async function tbappChange() {\r\n    try {\r\n    let response = await axios.get('/tbapp/?stock=' + stock + '&interval=Day&start_date=2021-10-06&end_date=2021-10-10' , { mode: \"no-cors\" });\r\n    let response = await axios.get(\"https://goweather.herokuapp.com/weather/\"+ stock ); \r\n      settbapp(response);\r\n      console.log(response.data); \r\n    }catch(error) {\r\n      if(error.response) {\r\n        console.log(error.response.data);\r\n      }\r\n    }\r\n  }\r\n  */\r\n\r\n  const getStockInfo = async () => {\r\n    const info = await axios.get (\r\n      'https://api.marketstack.com/v1/eod/latest?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + stock /*+ '&%20date_from=2021-10-15'*/ , { mode: \"no-cors\" }\r\n    );\r\n    setStockInfo(info.data.data);\r\n    console.log(info);\r\n  };\r\n\r\n  const getchartInfo = async () => {\r\n    const priceAndDate = await axios.get (\r\n      'https://api.marketstack.com/v1/eod?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + stock , { mode: \"no-cors\" }\r\n    );\r\n    setPrice(priceAndDate.data.data);\r\n    console.log(priceAndDate.data);\r\n  }\r\n\r\n  const getArticles = async () => {\r\n    const res = await axios.get(\r\n      'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n    );\r\n    setArticles(res.data.data);\r\n    console.log(res); \r\n    setHidden(\"none\");\r\n    setShowing(\"block\");\r\n    getStockInfo();\r\n    getchartInfo();\r\n    setStockName(stock);\r\n    tbappChange();\r\n  };\r\n\r\n  const enterKey = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      getArticles();\r\n    }\r\n  };\r\n\r\n  let whirligig\r\n  const next = () => whirligig.next()\r\n  const prev = () => whirligig.prev()\r\n\r\n  return (\r\n  <div id = \"content\">\r\n    <div className=\"navBar-div\">\r\n    <Nav id =\"navBar\"\r\n        style={{ \r\n        height: '90px',\r\n        paddingTop: '0.5%',\r\n        paddingBottom: '0.5%',\r\n        backgroundImage: `url(${background})`,\r\n        backgroundCover: `cover`,\r\n        backgroundSize: '100% 100%',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor: '#000'\r\n        }}\r\n      >\r\n        <img id=\"logo\" src={Logo} />\r\n \r\n        <NavMenu id=\"menu\">\r\n\r\n        <NavLink id=\"link\" to='/index' activeStyle>\r\n          Home\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/products' activeStyle>\r\n          Products\r\n        </NavLink>\r\n        <NavLink id=\"link\" to='/about' activeStyle>\r\n          About Us\r\n        </NavLink>\r\n\r\n        <Form inline id=\"searchBar\">\r\n          <FormControl type=\"text\" autoComplete=\"off\"\r\n            id=\"searchBar\" placeholder=\"Use Stock Codes (e.g. AAPL)\"\r\n            onChange={stockChange} \r\n            onKeyPress={enterKey}\r\n        />\r\n\r\n          <Button id=\"searchButton\" \r\n            onClick={getArticles}>\r\n              Search\r\n            </Button>\r\n        </Form>\r\n\r\n        </NavMenu>\r\n      </Nav>\r\n\r\n    </div>\r\n\r\n\r\n    <div \r\n      style ={{\r\n        justifyContent: 'center',\r\n        marginLeft: '5%',\r\n        marginRight: '5%',\r\n        overflow: 'auto',\r\n        alignItems: 'center',\r\n        height: 'auto',\r\n        display: show\r\n    }}>\r\n        <h1 style = {{\r\n          marginLeft: '10%'\r\n        }}> \r\n          {stockName} \r\n        </h1>\r\n        <div style={{\r\n            display: toggleCandle,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n        <CanvasJSChart\r\n          options = { {\r\n            theme: \"light1\",\r\n            exportEnabled: true,\r\n            animationEnabled: true,\r\n            height: 450,\r\n            axisY: {\r\n              minimum: Math.min(...price.map(data => data.low)) / 1.1,\r\n              maximum: Math.max(...price.map(data => data.high)) * 1.1,\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              prefix: \"$\",\r\n            },\r\n            axisX: {\r\n              crosshair: {\r\n                enabled: true,\r\n                snapToDataPoint: true\r\n              },\r\n              scaleBreaks: {\r\n                spacing: 0,\r\n                fillOpacity: 0,\r\n                lineThickness: 0,\r\n                customBreaks: price.reduce((breaks, value, index, array) => {\r\n                    if (index === 0) return breaks;\r\n\r\n                    const currentDataPointUnix = Number(new Date(value.date));\r\n                    const previousDataPointUnix = Number(new Date(array[index - 1].date));\r\n\r\n                    const oneDayInMs = 86400000;\r\n\r\n                    const difference = previousDataPointUnix - currentDataPointUnix;\r\n\r\n                    return difference === oneDayInMs\r\n                        ? breaks\r\n                        : [\r\n                            ...breaks,\r\n                            {\r\n                                startValue: currentDataPointUnix,\r\n                                endValue: previousDataPointUnix - oneDayInMs\r\n                            }\r\n                        ]\r\n                  }, [])\r\n                }\r\n              },\r\n                data: [{\r\n                  type: 'candlestick',\r\n                  risingColor: \"green\",\r\n                  fallingColor: \"#E40A0A\",\r\n                  dataPoints: price.map(price => ({\r\n                      x: new Date(price.date),\r\n                      y: [\r\n                        price.open,\r\n                        price.high,\r\n                        price.low,\r\n                        price.close\r\n                    ]\r\n                  }))\r\n                }],\r\n          \r\n              }\r\n            }\r\n          />\r\n          </div>\r\n\r\n          <div style={{\r\n            display: toggleLine,\r\n            marginLeft: '10%',\r\n            marginRight: '10%',\r\n            height: '25%',\r\n            marginTop: '2%',\r\n            marginBottom: '2%'\r\n          }}>\r\n          {stockInfo.map(({ symbol }) => (\r\n                <Line\r\n                  symbol={symbol}\r\n                />\r\n          ))}\r\n          </div>\r\n\r\n          <div id='buttons'>\r\n          <button onClick={viewCandle}\r\n            id=\"candlesticks-button\">Candlestick Chart\r\n          </button> \r\n          <button onClick={viewLine}\r\n            id=\"line-button\">Line Chart\r\n          </button> \r\n        </div>\r\n\r\n        <br></br>\r\n\r\n        <div className=\"databox\">\r\n          {\r\n          stockInfo.map(({ close, open, high, low, volume }) => (\r\n          <StockInformation\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n          />\r\n          ))}\r\n        </div>\r\n\r\n        <div style = {{\r\n          marginLeft: '10%'\r\n        }}>\r\n          <h1>Recent News Articles: {stockName} </h1>\r\n        </div>\r\n\r\n          <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <NewsItem\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n            <div className='buttons'>\r\n                <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                <button id='sliderbutton-next' onClick={next}>Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    <div style={{\r\n      display: hidden\r\n    }}>\r\n    \r\n    <div className =\"one\">\r\n      <h1 className = \"two\">About Us</h1>\r\n      <p className = \"three\">TradeBreath</p>\r\n    </div>\r\n\r\n    <div className = \"four\">\r\n      \r\n      <h1 className = \"five\">What is TradeBreath?</h1>\r\n      <img className = \"seven\" src = {StockPic} alt = \"decoPic\"></img>\r\n      <p className = \"six\"> TradeBreath is a finanicial website which provides stock information such as: open, close, high low, volume of the stock with the line chart and a candlestick chart. <br></br><br></br> Line chart provides the current price of the stock with the dates. Investor can filter the data by the periods of 3 months, 1 month, 7 days, or 1 day. <br></br><br></br> Candlestick chart provides the investor with the open price, close price, high price and a low price for the stock. <br></br><br></br> We want every investor to invest safe by providing the lastest news of the specific sotck along with the news from the stock market. </p>\r\n      \r\n      \r\n    </div>\r\n\r\n    <div className = \"eight\">\r\n      \r\n      <h1 className = \"nine\">Who We Are</h1>\r\n      <p className = \"eleven\"> We are stduent of Hunter College and this website is a project for the class CSCI 49900.</p>\r\n      <img className = \"thirteen\" src = {HunterPic} alt = \"hunterPic\"></img>\r\n      \r\n    </div>\r\n      <div className = \"twelve\">\r\n          <img className = \"people\" src = {Adrian} alt = \"Adrian Ramirez\"></img>\r\n          <img className = \"people\" src = {Alex} alt = \"Alex Jun\"></img>\r\n          <img className = \"people\" src = {Diego} alt = \"Diego Kervabon\"></img>\r\n          <img className = \"people\" src = {Edwin} alt = \"Edwin Zhu\"></img>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    {/* <div className = \"container\">\r\n      <div className = \"aboutContainer\">\r\n        <div className = \"aboutTitle\">\r\n        <h1>TradeBreath</h1>\r\n      </div>\r\n        <img className = \"stockPic\" src = {StockPic} alt = \"decoPic\"></img>\r\n        <div className = \"aboutContent\">\r\n             <p> TradeBreath is a finanicial website which provides stock information such as: open, close, high low, volume of the stock with the line chart and a candlestick chart. <br></br><br></br> Line chart provides the current price of the stock with the dates. Investor can filter the data by the periods of 3 months, 1 month, 7 days, or 1 day. <br></br><br></br> Candlestick chart provides the investor with the open price, close price, high price and a low price for the stock. <br></br><br></br> We want every investor to invest safe by providing the lastest news of the specific sotck along with the news from the stock market. </p>\r\n        </div>\r\n      </div>\r\n      \r\n        \r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <div className = \"whoTitle\">\r\n        <h1>Who We Are</h1>\r\n      </div>\r\n        <img className = \"hunterPic\" src = {HunterPic} alt = \"hunterPic\"></img>\r\n        <div className = \"whoContent\">\r\n             <p> We are stduent of Hunter College and this website is a project for the class CSCI 49900.  </p>\r\n        </div>\r\n\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n\r\n\r\n        <div className = \"peopleContainer\">\r\n          <img className = \"people\" src = {Adrian} alt = \"Adrian Ramirez\"></img>\r\n          <img className = \"people\" src = {Alex} alt = \"Alex Jun\"></img>\r\n          <img className = \"people\" src = {Diego} alt = \"Diego Kervabon\"></img>\r\n          <img className = \"people\" src = {Edwin} alt = \"Edwin Zhu\"></img>\r\n        </div>\r\n      </div>   */}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n  \r\nexport default About;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\productX.js",["86","87","88","89","90","91","92","93","94"],"import React, { useEffect, useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport background from './Sky.jpg';\r\nimport './productX.css';\r\nimport NewsItem from './newsItem';\r\nimport StockInformation from './stockInformation';\r\nimport axios, { Axios } from 'axios';\r\n\r\nimport { Nav, NavLink, NavMenu} from '../components/Navbar/NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport Logo from '../components/Navbar/TradeBreath.gif';\r\nimport { render } from '@testing-library/react';\r\nimport StockInfo from './stockInformation';\r\n\r\nconst Home = () => {\r\n\r\n  const [stockInfo, setStockInfo] = useState([]);\r\n  const [articles, setArticles] = useState([]);\r\n  const [stock, setStock]= useState(\"\");\r\n\r\n  const [tbapp, settbapp]= useState(\"\");\r\n  const [found, setFound]= useState(false);\r\n\r\n  \r\n  function stockChange(event){\r\n    setStock(event.target.value);\r\n  } \r\n\r\n  async function tbappChange() {\r\n    try {\r\n    let response = await axios.get('/tbapp/?stock=' + stock + '&interval=Day&start_date=2021-10-14&end_date=2021-10-14' , { mode: \"no-cors\" }); \r\n    /*let response = await axios.get(\"https://goweather.herokuapp.com/weather/\"+ stock );*/  \r\n    /*The above line is for Testing pursposes to see if app connects to an external api which it does*/ \r\n      /*settbapp(response.data);*/\r\n      setStockInfo(response.data);\r\n      /* console.log(response.data); */\r\n      setFound(true);\r\n    }catch(error) {\r\n      if(error.response) {\r\n        /* console.log(error.response.data); */\r\n        setFound(false);\r\n      }\r\n    }\r\n  }\r\n\r\n/* \r\n  useEffect(() => {\r\n    const getArticles = async () => {\r\n      const res = await axios.get(\r\n        'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n      );\r\n      setArticles(res.data.data);\r\n    };\r\n    getArticles();\r\n  },[null]);\r\n*/\r\n\r\n  const getStockInfo = async () => {\r\n    const info = await axios.get (\r\n      'https://api.marketstack.com/v1/eod/latest?access_key=7ba49202483340bca37ab953c66b592c&symbols=' + stock /*+ '&%20date_from=2021-10-15'*/ , { mode: \"no-cors\" }\r\n    );\r\n    setStockInfo(info.data.data);\r\n    console.log(info);\r\n  };\r\n\r\n  const getArticles = async () => {\r\n    const res = await axios.get(\r\n      'https://stocknewsapi.com/api/v1?tickers=' + stock + '&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n    );\r\n    setArticles(res.data.data);\r\n    console.log(res); \r\n    getStockInfo();\r\n    /* tbappChange(); */\r\n  };\r\n  \r\n\r\n    let whirligig\r\n    const next = () => whirligig.next()\r\n    const prev = () => whirligig.prev()\r\n\r\n    return (\r\n    <div>\r\n      <div>\r\n        <div className=\"navBar-div\">\r\n          <Nav id =\"navBar\"\r\n            style={{ \r\n            height: '90px',\r\n            paddingTop: '0.5%',\r\n            paddingBottom: '0.5%',\r\n            backgroundImage: `url(${background})`,\r\n            backgroundCover: `cover`,\r\n            backgroundSize: '100% 100%',\r\n            backgroundAttachment: 'fixed',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor: '#000'\r\n          }}\r\n        >\r\n          <img id=\"logo\" src={Logo} />\r\n \r\n          <NavMenu id=\"menu\">\r\n\r\n          <NavLink id=\"link\" to='/index' activeStyle>\r\n            Home\r\n          </NavLink>\r\n          <NavLink id=\"link\" to='/products' activeStyle>\r\n            Products\r\n          </NavLink>\r\n          <NavLink id=\"link\" to='/about' activeStyle>\r\n            About Us\r\n          </NavLink>\r\n\r\n          <Form inline id=\"searchBar\">\r\n              <FormControl type=\"text\" autoComplete=\"off\"\r\n              id=\"searchBar\"\r\n              onChange={stockChange} \r\n          />\r\n\r\n            <Button id=\"searchButton\" \r\n            onClick={getArticles}>\r\n              Search\r\n            </Button>\r\n          </Form>\r\n\r\n          </NavMenu>\r\n        </Nav>\r\n\r\n        </div>\r\n        <div id='chart-div'>\r\n            <h1> {stock} </h1>\r\n            \r\n\r\n        <br></br>\r\n\r\n        <div className=\"databox\">\r\n          {\r\n          stockInfo.map(({ close, open, high, low, volume }) => (\r\n          <StockInformation\r\n            open={open} \r\n            close={close}\r\n            high={high}\r\n            low={low}\r\n            volume={volume}\r\n          />\r\n          ))}\r\n\r\n          {/*}\r\n          <div>\r\n            <p>{stockInfo}</p>\r\n            {console.log(stockInfo)}\r\n          </div>\r\n          \r\n\r\n          {found ?\r\n          <div>\r\n            <h3> {stock} </h3>\r\n            <br></br>\r\n            <ul> \r\n              <li>Previous Close: {tbapp.vw} </li>\r\n\r\n              <li>Open: {tbapp.o} </li>\r\n\r\n              <li>Volume: {tbapp.c} </li>\r\n\r\n            </ul>\r\n          </div>\r\n          : <h3> No Results </h3>}\r\n          */}\r\n        </div>\r\n\r\n        <div id='product-article-title'>\r\n          <h1>Recent News Articles: {stock} </h1>\r\n        </div>\r\n\r\n          <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <NewsItem\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n            <div className='buttons'>\r\n                <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                <button id='sliderbutton-next' onClick={next}>Next</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Home;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\index.js",["95","96","97","98","99","100","101","102","103","104"],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Footer\\index.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\stockInformation.js",["105","106"],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\newsItem.js",["107","108","109"],"import React from \"react\";\r\n\r\nconst NewsItem = ({ title, news_url, image_url, text, date }) => {\r\n    return (\r\n        <div>\r\n            <a href={news_url} target=\"_blank\">\r\n                <img src={image_url} alt=\"New Image\" />\r\n            </a>\r\n            <h3>\r\n                <a href={news_url} target=\"_blank\">{title}</a>\r\n            </h3>\r\n            <p>{text}</p>\r\n            <p>{date}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsItem;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Navbar\\NavbarElements.js",[],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\components\\Navbar\\index.js",["110"],"import React from 'react';\r\nimport background from './Sky.jpg';\r\nimport { Nav, NavLink, NavMenu} from './NavbarElements';\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\nimport Logo from './TradeBreath.gif';\r\n  \r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"navBar-div\">\r\n\r\n      <Nav id =\"navBar\"\r\n        style={{ \r\n          backgroundImage: `url(${background})`,\r\n          backgroundAttachment: 'fixed',\r\n          backgroundCover: `cover`,\r\n          backgroundSize: '100% 100%',\r\n          backgroundRepeat: 'no-repeat',\r\n          height: '90px',\r\n          paddingTop: '0.5%',\r\n          paddingBottom: '0.5%'\r\n        }}\r\n      >\r\n          <img id=\"logo\" src={Logo} />\r\n       \r\n          <NavMenu id=\"menu\">\r\n\r\n            <NavLink id=\"link\" to='/index' activeStyle>\r\n              Home\r\n            </NavLink>\r\n            <NavLink id=\"link\" to='/products' activeStyle>\r\n              Products\r\n            </NavLink>\r\n            <NavLink id=\"link\" to='/about' activeStyle>\r\n              About Us\r\n            </NavLink>\r\n\r\n            <Form inline id=\"searchBar\">\r\n              <FormControl type=\"text\" placeholder=\"Search\" id=\"searchBar\"\r\n              />\r\n\r\n              <Button id=\"searchButton\">\r\n                Search\r\n              </Button>\r\n            </Form>\r\n\r\n          </NavMenu>\r\n      </Nav>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n  \r\nexport default Navbar;",["111","112"],"G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\dailyArticles.js",["113","114"],"import React, { useEffect, useState } from 'react';\r\nimport Whirligig from 'react-whirligig'\r\nimport NewsItem from './newsItem';\r\nimport TopNews from './topNews';\r\nimport axios from 'axios'; \r\n\r\nconst DailyArticles = () => {\r\n\r\n    const [articles, setArticles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getArticles = async () => {\r\n          const res = await axios.get(\r\n            'https://stocknewsapi.com/api/v1?tickers=A&items=25&token=c5nrxp6lw6ftwokpjx08wkycksgzcg0rpgc4hlcy'\r\n          );\r\n          setArticles(res.data.data);\r\n        };\r\n        getArticles();\r\n      },\r\n    [null]);\r\n\r\n    let whirligig\r\n    const next = () => whirligig.next()\r\n    const prev = () => whirligig.prev()\r\n\r\n    return (\r\n        <div>\r\n            <div id='article-title'>\r\n                <h1>Top News Articles: </h1>\r\n                \r\n            </div>\r\n\r\n            <div id='newsArticles'>\r\n            <Whirligig className ='product-slider'\r\n              visibleSlides={3}\r\n              gutter=\"1em\"\r\n              ref={(_whirligigInstance) => { whirligig = _whirligigInstance}}\r\n            >\r\n              \r\n              {articles.map(({ title, news_url, image_url, text, date}) => (\r\n                <TopNews\r\n                  title={title}\r\n                  news_url={news_url}\r\n                  image_url={image_url} \r\n                  text={text}\r\n                  date={date}\r\n                />\r\n              ))}\r\n            </Whirligig>\r\n            \r\n                <div className='buttons'>\r\n                    <button id=\"sliderbutton-prev\" onClick={prev}>Prev</button>\r\n                    <button id='sliderbutton-next' onClick={next}>Next</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyArticles;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\topNews.js",["115","116","117"],"import React from \"react\";\r\nimport './topNews.css'\r\n\r\nconst TopNews = ({ title, news_url, image_url, text, date }) => {\r\n    return (\r\n    <div className='text-background'>\r\n        <div className=\"topNews-articles\">\r\n            <a href={news_url} target=\"_blank\">\r\n                <img src={image_url} alt=\"New Image\" />\r\n            </a>\r\n            <h3>\r\n                <a href={news_url} target=\"_blank\">{title}</a>\r\n            </h3>\r\n            <p>{text}</p>\r\n            <p>{date}</p>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default TopNews;","G:\\Hunter\\CSCI 49900\\csci49900-capstone-project\\src\\pages\\linechartv2.js",["118","119","120","121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":3,"column":17,"nodeType":"130","messageId":"131","endLine":3,"endColumn":26},{"ruleId":"128","severity":1,"message":"132","line":11,"column":17,"nodeType":"130","messageId":"131","endLine":11,"endColumn":22},{"ruleId":"128","severity":1,"message":"133","line":22,"column":10,"nodeType":"130","messageId":"131","endLine":22,"endColumn":16},{"ruleId":"128","severity":1,"message":"134","line":51,"column":10,"nodeType":"130","messageId":"131","endLine":51,"endColumn":15},{"ruleId":"128","severity":1,"message":"135","line":52,"column":10,"nodeType":"130","messageId":"131","endLine":52,"endColumn":15},{"ruleId":"128","severity":1,"message":"136","line":52,"column":17,"nodeType":"130","messageId":"131","endLine":52,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":126,"column":9,"nodeType":"139","endLine":126,"endColumn":37},{"ruleId":"128","severity":1,"message":"132","line":10,"column":17,"nodeType":"130","messageId":"131","endLine":10,"endColumn":22},{"ruleId":"128","severity":1,"message":"134","line":53,"column":10,"nodeType":"130","messageId":"131","endLine":53,"endColumn":15},{"ruleId":"128","severity":1,"message":"135","line":54,"column":10,"nodeType":"130","messageId":"131","endLine":54,"endColumn":15},{"ruleId":"128","severity":1,"message":"136","line":54,"column":17,"nodeType":"130","messageId":"131","endLine":54,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":141,"column":9,"nodeType":"139","endLine":141,"endColumn":37},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"132","line":7,"column":17,"nodeType":"130","messageId":"131","endLine":7,"endColumn":22},{"ruleId":"128","severity":1,"message":"140","line":12,"column":10,"nodeType":"130","messageId":"131","endLine":12,"endColumn":16},{"ruleId":"128","severity":1,"message":"141","line":13,"column":8,"nodeType":"130","messageId":"131","endLine":13,"endColumn":17},{"ruleId":"128","severity":1,"message":"134","line":21,"column":10,"nodeType":"130","messageId":"131","endLine":21,"endColumn":15},{"ruleId":"128","severity":1,"message":"142","line":21,"column":17,"nodeType":"130","messageId":"131","endLine":21,"endColumn":25},{"ruleId":"128","severity":1,"message":"135","line":22,"column":10,"nodeType":"130","messageId":"131","endLine":22,"endColumn":15},{"ruleId":"128","severity":1,"message":"143","line":29,"column":18,"nodeType":"130","messageId":"131","endLine":29,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":98,"column":11,"nodeType":"139","endLine":98,"endColumn":39},{"ruleId":"128","severity":1,"message":"144","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"128","severity":1,"message":"145","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":23},{"ruleId":"128","severity":1,"message":"146","line":19,"column":10,"nodeType":"130","messageId":"131","endLine":19,"endColumn":31},{"ruleId":"128","severity":1,"message":"147","line":20,"column":8,"nodeType":"130","messageId":"131","endLine":20,"endColumn":23},{"ruleId":"128","severity":1,"message":"134","line":53,"column":10,"nodeType":"130","messageId":"131","endLine":53,"endColumn":15},{"ruleId":"128","severity":1,"message":"135","line":54,"column":10,"nodeType":"130","messageId":"131","endLine":54,"endColumn":15},{"ruleId":"128","severity":1,"message":"136","line":54,"column":17,"nodeType":"130","messageId":"131","endLine":54,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":86,"column":3,"nodeType":"150","endLine":86,"endColumn":9,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":86,"column":4,"nodeType":"153","endLine":86,"endColumn":8},{"ruleId":"137","severity":1,"message":"138","line":157,"column":11,"nodeType":"139","endLine":157,"endColumn":39},{"ruleId":"128","severity":1,"message":"144","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":18},{"ruleId":"128","severity":1,"message":"145","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":6,"column":13,"nodeType":"139","messageId":"156","endLine":6,"endColumn":48,"fix":"157"},{"ruleId":"158","severity":1,"message":"159","line":7,"column":17,"nodeType":"139","endLine":7,"endColumn":56},{"ruleId":"154","severity":1,"message":"155","line":10,"column":17,"nodeType":"139","messageId":"156","endLine":10,"endColumn":52,"fix":"160"},{"ruleId":"137","severity":1,"message":"138","line":24,"column":11,"nodeType":"139","endLine":24,"endColumn":39},{"ruleId":"124","replacedBy":"161"},{"ruleId":"126","replacedBy":"162"},{"ruleId":"128","severity":1,"message":"163","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":16},{"ruleId":"148","severity":1,"message":"152","line":20,"column":6,"nodeType":"153","endLine":20,"endColumn":10},{"ruleId":"154","severity":1,"message":"155","line":8,"column":13,"nodeType":"139","messageId":"156","endLine":8,"endColumn":48,"fix":"164"},{"ruleId":"158","severity":1,"message":"159","line":9,"column":17,"nodeType":"139","endLine":9,"endColumn":56},{"ruleId":"154","severity":1,"message":"155","line":12,"column":17,"nodeType":"139","messageId":"156","endLine":12,"endColumn":52,"fix":"165"},{"ruleId":"128","severity":1,"message":"166","line":9,"column":10,"nodeType":"130","messageId":"131","endLine":9,"endColumn":19},{"ruleId":"128","severity":1,"message":"167","line":9,"column":21,"nodeType":"130","messageId":"131","endLine":9,"endColumn":33},{"ruleId":"128","severity":1,"message":"168","line":10,"column":10,"nodeType":"130","messageId":"131","endLine":10,"endColumn":18},{"ruleId":"128","severity":1,"message":"169","line":10,"column":20,"nodeType":"130","messageId":"131","endLine":10,"endColumn":31},{"ruleId":"148","severity":1,"message":"170","line":13,"column":3,"nodeType":"130","endLine":13,"endColumn":12,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":52,"column":15,"nodeType":"174","messageId":"175","endLine":52,"endColumn":20},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'hidden' is assigned a value but never used.","'tbapp' is assigned a value but never used.","'found' is assigned a value but never used.","'setFound' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","'StockInfo' is defined but never used.","'settbapp' is assigned a value but never used.","'tbappChange' is defined but never used.","'Highcharts' is defined but never used.","'HighchartsReact' is defined but never used.","'AxisConstantLineStyle' is defined but never used.","'ReactHighcharts' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getStockInfo', 'getchartInfo', 'stock', and 'tbappChange'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStockName' needs the current value of 'stock'.","ArrayExpression",["178"],"The null literal is not a valid dependency because it never changes. You can safely remove it.","Literal","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"179","text":"180"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"range":"181","text":"180"},["176"],["177"],"'NewsItem' is defined but never used.",{"range":"182","text":"180"},{"range":"183","text":"180"},"'stockInfo' is assigned a value but never used.","'setStockInfo' is assigned a value but never used.","'articles' is assigned a value but never used.","'setArticles' is assigned a value but never used.","React Hook useEffect contains a call to 'setStock'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stock, symbol, getchartInfo] as a second argument to the useEffect Hook.",["184"],"no-dupe-keys","Duplicate key 'axisY'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},[173,173]," rel=\"noreferrer\"",[319,319],[264,264],[410,410],{"desc":"187","fix":"188"},"Update the dependencies array to be: [getStockInfo, getchartInfo, stock, tbappChange]",{"range":"189","text":"190"},"Add dependencies array: [stock, symbol, getchartInfo]",{"range":"191","text":"192"},[2715,2721],"[getStockInfo, getchartInfo, stock, tbappChange]",[519,519],", [stock, symbol, getchartInfo]"]